class	class_uri	slot	slot_uri	broad_mappings	close_mappings	exact_mappings	mappings	narrow_mappings	abstract	alias	aliases	annotation_expected_value	annotation_occurrence	annotation_preferred_unit	annotation_tooltip	any_of	comments	contributors	description	designates_type	example_values	id_prefixes	identifier	inlined	inlined_as_list	is_a	list_elements_ordered	maximum_cardinality	maximum_value	minimum_cardinality	minimum_value	mixins	multivalued	notes	pattern	range	rank	recommended	required	see_also	slot_group	string_serialization	structured_aliases	structured_pattern.syntax	title	todos
AttributeValue	nmdc:AttributeValue	has_raw_value																	"The value that was specified for an annotation in raw form, i.e. a string. E.g. ""2 cm"" or ""2-4 cm"""																	string							JsonObj()			
AttributeValue	nmdc:AttributeValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Biosample	nmdc:Biosample	abs_air_humidity	MIXS:0000122								absolute air humidity	measurement value	1	gram per gram, kilogram per kilogram, kilogram, pound					Actual mass of water vapor - mh20 - present in the air water vapor mixture		9 gram per gram					core field							False			QuantityValue							JsonObj()		absolute air humidity	
Biosample	nmdc:Biosample	add_date																	The date on which the information was added to the database.																	string							JsonObj()			
Biosample	nmdc:Biosample	add_recov_method	MIXS:0001009								secondary and tertiary recovery methods and start date	enumeration;timestamp	1						"Additional (i.e. Secondary, tertiary, etc.) recovery methods deployed for increase of hydrocarbon recovery from resource and start date for each one of them. If ""other"" is specified, please propose entry in ""additional info"" field"		Polymer Addition;2018-06-21T14:30Z					core field							False			TextValue							JsonObj()		secondary and tertiary recovery methods and start date	
Biosample	nmdc:Biosample	additional_info	MIXS:0000300								additional info	text	1						Information that doesn't fit anywhere else. Can also be used to propose new entries for fields with controlled vocabulary							core field							False			TextValue						{text}	JsonObj()		additional info	
Biosample	nmdc:Biosample	address	MIXS:0000218								address	value	1						The street name and building number where the sampling occurred.							core field							False			TextValue						{integer}{text}	JsonObj()		address	
Biosample	nmdc:Biosample	adj_room	MIXS:0000219								adjacent rooms	room name;room number	1						List of rooms (room number, room name) immediately adjacent to the sampling room							core field							False			TextValue						{text};{integer}	JsonObj()		adjacent rooms	
Biosample	nmdc:Biosample	aero_struc	MIXS:0000773								aerospace structure	enumeration	1						Aerospace structures typically consist of thin plates with stiffeners for the external surfaces, bulkheads and frames to support the shape and fasteners such as welds, rivets, screws and bolts to hold the components together		plane					core field							False			TextValue						[plane|glider]	JsonObj()		aerospace structure	
Biosample	nmdc:Biosample	agrochem_addition	MIXS:0000639								history/agrochemical additions	agrochemical name;agrochemical amount;timestamp	m	gram, mole per liter, milligram per liter					Addition of fertilizers, pesticides, etc. - amount and time of applications		roundup;5 milligram per liter;2018-06-21				True	core field							True			TextValue						{text};{float} {unit};{timestamp}	JsonObj()		history/agrochemical additions	
Biosample	nmdc:Biosample	air_PM_concen	MIXS:0000108								air particulate matter concentration	particulate matter name;measurement value	m	micrograms per cubic meter					Concentration of substances that remain suspended in the air, and comprise mixtures of organic and inorganic substances (PM10 and PM2.5); can report multiple PM's by entering numeric values preceded by name of PM		PM2.5;10 microgram per cubic meter				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		air particulate matter concentration	
Biosample	nmdc:Biosample	air_temp	MIXS:0000124								air temperature	measurement value	1	degree Celsius					Temperature of the air at the time of sampling		20 degree Celsius					core field							False			QuantityValue							JsonObj()		air temperature	
Biosample	nmdc:Biosample	air_temp_regm	MIXS:0000551								air temperature regimen	temperature value;treatment interval and duration	m	meter					Information about treatment involving an exposure to varying temperatures; should include the temperature, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include different temperature regimens		25 degree Celsius;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		air temperature regimen	
Biosample	nmdc:Biosample	al_sat	MIXS:0000607								extreme_unusual_properties/Al saturation	measurement value	1	percentage					The relative abundance of aluminum in the sample		27%					core field							False	Aluminum saturation is the percentage of the CEC occupies by aluminum. Like all cations, aluminum held by the cation exchange complex is in equilibrium with aluminum in the soil solution.		QuantityValue							JsonObj()		aluminum saturation/ extreme unusual properties	Example & validation. Can we configure things so that 27% & 27 % & 0.27 will validate?|I think it's weird the way GSC writes the title. I recommend this change. Thoughts? I would argue this isn't an extreme unusual property. It's just a biogeochemical measurement.
Biosample	nmdc:Biosample	al_sat_meth	MIXS:0000324								extreme_unusual_properties/Al saturation method	PMID,DOI or URL	1				Required when aluminum saturation is provided.		Reference or method used in determining Aluminum saturation		https://doi.org/10.1371/journal.pone.0176357					core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		aluminum saturation method/ extreme unusual properties	I think it's weird the way GSC writes the title. I recommend this change. Thoughts?
Biosample	nmdc:Biosample	alkalinity	MIXS:0000421								alkalinity	measurement value	1	milliequivalent per liter, milligram per liter					Alkalinity, the ability of a solution to neutralize acids to the equivalence point of carbonate or bicarbonate		50 milligram per liter					core field							False			QuantityValue							JsonObj()		alkalinity	
Biosample	nmdc:Biosample	alkalinity_method	MIXS:0000298								alkalinity method	description of method	1						Method used for alkalinity measurement		titration					core field							False			TextValue						{text}	JsonObj()		alkalinity method	
Biosample	nmdc:Biosample	alkyl_diethers	MIXS:0000490								alkyl diethers	measurement value	1	mole per liter					Concentration of alkyl diethers		0.005 mole per liter					core field							False			QuantityValue							JsonObj()		alkyl diethers	
Biosample	nmdc:Biosample	alt	MIXS:0000094								altitude	measurement value							Altitude is a term used to identify heights of objects such as airplanes, space shuttles, rockets, atmospheric balloons and heights of places such as atmospheric layers and clouds. It is used to measure the height of an object which is above the earth's surface. In this context, the altitude measurement is the vertical distance between the earth's surface above sea level and the sampled position in the air		100 meter					environment field							False			QuantityValue							JsonObj()		altitude	
Biosample	nmdc:Biosample	alternative_identifiers																	Unique identifier for a biosample submitted to additional resources. Matches the entity that has been submitted to NMDC														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Biosample	nmdc:Biosample	aminopept_act	MIXS:0000172								aminopeptidase activity	measurement value	1	mole per liter per hour					Measurement of aminopeptidase activity		0.269 mole per liter per hour					core field							False			QuantityValue							JsonObj()		aminopeptidase activity	
Biosample	nmdc:Biosample	ammonium	MIXS:0000427								ammonium	measurement value	1	micromole per liter, milligram per liter, parts per million					Concentration of ammonium in the sample		1.5 milligram per liter					core field							False			QuantityValue							JsonObj()		ammonium	
Biosample	nmdc:Biosample	ammonium_nitrogen									ammonium_nitrogen|NH4-N	measurement value	1	mg/kg					Concentration of ammonium nitrogen in the sample		2.3 mg/kg															QuantityValue				https://www.ornl.gov/content/bio-scales-0			JsonObj()		ammonium nitrogen	
Biosample	nmdc:Biosample	amount_light	MIXS:0000140								amount of light	measurement value	1	lux, lumens per square meter					The unit of illuminance and luminous emittance, measuring luminous flux per unit area							core field							False			QuantityValue							JsonObj()		amount of light	
Biosample	nmdc:Biosample	analysis_type																	Select all the data types associated or available for this biosample		metagenomics; metabolomics; metaproteomics												True			AnalysisTypeEnum	3.0	True		MIxS:investigation_type	Sample ID		JsonObj()		analysis/data type	
Biosample	nmdc:Biosample	ances_data	MIXS:0000247								ancestral data	free text	1						Information about either pedigree or other ancestral information description (e.g. parental variety in case of mutant or selection), e.g. A/3*B (meaning [(A x B) x B] x B)		A/3*B					core field							False			TextValue						{text}	JsonObj()		ancestral data	
Biosample	nmdc:Biosample	annual_precpt	MIXS:0000644								mean annual precipitation	measurement value	1	millimeter					The average of all annual precipitation values known, or an estimated equivalent value derived by such methods as regional indexes or Isohyetal maps.		8.94 inch					core field							False			QuantityValue							JsonObj()		mean annual precipitation	
Biosample	nmdc:Biosample	annual_temp	MIXS:0000642								mean annual temperature	measurement value	1	degree Celsius					Mean annual temperature		12.5 degree Celsius					core field							False			QuantityValue							JsonObj()		mean annual temperature	
Biosample	nmdc:Biosample	antibiotic_regm	MIXS:0000553								antibiotic regimen	antibiotic name;antibiotic amount;treatment interval and duration	m	milligram					Information about treatment involving antibiotic administration; should include the name of antibiotic, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple antibiotic regimens		penicillin;5 milligram;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		antibiotic regimen	
Biosample	nmdc:Biosample	api	MIXS:0000157								API gravity	measurement value	1	degrees API					API gravity is a measure of how heavy or light a petroleum liquid is compared to water (source: https://en.wikipedia.org/wiki/API_gravity) (e.g. 31.1¬∞ API)							core field							False			QuantityValue							JsonObj()		API gravity	
Biosample	nmdc:Biosample	arch_struc	MIXS:0000774								architectural structure	enumeration	1						An architectural structure is a human-made, free-standing, immobile outdoor construction		shed					core field							False			arch_struc_enum							JsonObj()		architectural structure	
Biosample	nmdc:Biosample	aromatics_pc	MIXS:0000133								aromatics wt%	name;measurement value	1	percent					Saturate, Aromatic, Resin and Asphaltene¬†(SARA) is an analysis method that divides¬†crude oil¬†components according to their polarizability and polarity. There are three main methods to obtain SARA results. The most popular one is known as the Iatroscan TLC-FID and is referred to as IP-143 (source: https://en.wikipedia.org/wiki/Saturate,_aromatic,_resin_and_asphaltene)							core field							False			TextValue						{text};{float} {unit}	JsonObj()		aromatics wt%	
Biosample	nmdc:Biosample	asphaltenes_pc	MIXS:0000135								asphaltenes wt%	name;measurement value	1	percent					Saturate, Aromatic, Resin and Asphaltene¬†(SARA) is an analysis method that divides¬†crude oil¬†components according to their polarizability and polarity. There are three main methods to obtain SARA results. The most popular one is known as the Iatroscan TLC-FID and is referred to as IP-143 (source: https://en.wikipedia.org/wiki/Saturate,_aromatic,_resin_and_asphaltene)							core field							False			TextValue						{text};{float} {unit}	JsonObj()		asphaltenes wt%	
Biosample	nmdc:Biosample	associated_studies																	The study associated with a resource.														True		^(nmdc):sty-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Study			True				JsonObj()	{id_nmdc_prefix}:sty-{id_shoulder}-{id_blade}$		
Biosample	nmdc:Biosample	atmospheric_data	MIXS:0001097								atmospheric data	atmospheric data name;measurement value	m						Measurement of atmospheric data; can include multiple data		wind speed;9 knots				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		atmospheric data	
Biosample	nmdc:Biosample	avg_dew_point	MIXS:0000141								average dew point	measurement value	1	degree Celsius					The average of dew point measures taken at the beginning of every hour over a 24 hour period on the sampling day		25.5 degree Celsius					core field							False			QuantityValue							JsonObj()		average dew point	
Biosample	nmdc:Biosample	avg_occup	MIXS:0000775								average daily occupancy	value	1						Daily average occupancy of room. Indicate the number of person(s) daily occupying the sampling room.		2					core field							False			TextValue							JsonObj()		average daily occupancy	
Biosample	nmdc:Biosample	avg_temp	MIXS:0000142								average temperature	measurement value	1	degree Celsius					The average of temperatures taken at the beginning of every hour over a 24 hour period on the sampling day		12.5 degree Celsius					core field							False			QuantityValue							JsonObj()		average temperature	
Biosample	nmdc:Biosample	bac_prod	MIXS:0000683								bacterial production	measurement value	1	milligram per cubic meter per day					Bacterial production in the water column measured by isotope uptake		5 milligram per cubic meter per day					core field							False			QuantityValue							JsonObj()		bacterial production	
Biosample	nmdc:Biosample	bac_resp	MIXS:0000684								bacterial respiration	measurement value	1	milligram per cubic meter per day, micromole oxygen per liter per hour					Measurement of bacterial respiration in the water column		300 micromole oxygen per liter per hour					core field							False			QuantityValue							JsonObj()		bacterial respiration	
Biosample	nmdc:Biosample	bacteria_carb_prod	MIXS:0000173								bacterial carbon production	measurement value	1	nanogram per hour					Measurement of bacterial carbon production		2.53 microgram per liter per hour					core field							False			QuantityValue							JsonObj()		bacterial carbon production	
Biosample	nmdc:Biosample	barometric_press	MIXS:0000096								barometric pressure	measurement value	1	millibar					Force per unit area exerted against a surface by the weight of air above that surface		5 millibar					core field							False			QuantityValue							JsonObj()		barometric pressure	
Biosample	nmdc:Biosample	basin	MIXS:0000290								basin name	name	1						Name of the basin (e.g. Campos)							core field							False			TextValue						{text}	JsonObj()		basin name	
Biosample	nmdc:Biosample	bathroom_count	MIXS:0000776								bathroom count	value	1						The number of bathrooms in the building		1					core field							False			TextValue							JsonObj()		bathroom count	
Biosample	nmdc:Biosample	bedroom_count	MIXS:0000777								bedroom count	value	1						The number of bedrooms in the building		2					core field							False			TextValue							JsonObj()		bedroom count	
Biosample	nmdc:Biosample	benzene	MIXS:0000153								benzene	measurement value	1	milligram per liter, parts per million					Concentration of benzene in the sample							core field							False			QuantityValue							JsonObj()		benzene	
Biosample	nmdc:Biosample	biochem_oxygen_dem	MIXS:0000653								biochemical oxygen demand	measurement value	1	milligram per liter					Amount of dissolved oxygen needed by aerobic biological organisms in a body of water to break down organic material present in a given water sample at certain temperature over a specific time period							core field							False			QuantityValue							JsonObj()		biochemical oxygen demand	
Biosample	nmdc:Biosample	biocide	MIXS:0001011								biocide administration	name;name;timestamp	1						List of biocides (commercial name of product and supplier) and date of administration		ALPHA 1427;Baker Hughes;2008-01-23					core field							False			TextValue						{text};{text};{timestamp}	JsonObj()		biocide administration	
Biosample	nmdc:Biosample	biocide_admin_method	MIXS:0000456								biocide administration method	measurement value;frequency;duration;duration	1	milligram per liter					Method of biocide administration (dose, frequency, duration, time elapsed between last biociding and sampling) (e.g. 150 mg/l; weekly; 4 hr; 3 days)							core field							False			TextValue						{float} {unit};{Rn/start_time/end_time/duration};{duration}	JsonObj()		biocide administration method	
Biosample	nmdc:Biosample	biol_stat	MIXS:0000858								biological status	enumeration	1						The level of genome modification.		natural					core field							False			biol_stat_enum							JsonObj()		biological status	
Biosample	nmdc:Biosample	biomass	MIXS:0000174								biomass	biomass type;measurement value	m	ton, kilogram, gram					Amount of biomass; should include the name for the part of biomass measured, e.g. Microbial, total. Can include multiple measurements		total;20 gram				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		biomass	
Biosample	nmdc:Biosample	biosample_categories																															True			BiosampleCategoryEnum							JsonObj()		Categories the biosample belongs to	
Biosample	nmdc:Biosample	biotic_regm	MIXS:0001038								biotic regimen	free text	1						Information about treatment(s) involving use of biotic factors, such as bacteria, viruses or fungi.		sample inoculated with Rhizobium spp. Culture					core field							False			TextValue						{text}	JsonObj()		biotic regimen	
Biosample	nmdc:Biosample	biotic_relationship	MIXS:0000028								observed biotic relationship	enumeration							Description of relationship(s) between the subject organism and other organism(s) it is associated with. E.g., parasite on species X; mutualist with species Y. The target organism is the subject of the relationship, and the other organism(s) is the object		free living					nucleic acid sequence source field							False			biotic_relationship_enum							JsonObj()		observed biotic relationship	
Biosample	nmdc:Biosample	bishomohopanol	MIXS:0000175								bishomohopanol	measurement value	1	microgram per liter, microgram per gram					Concentration of bishomohopanol		14 microgram per liter					core field							False			QuantityValue							JsonObj()		bishomohopanol	
Biosample	nmdc:Biosample	blood_press_diast	MIXS:0000258								host blood pressure diastolic	measurement value	1	millimeter mercury					Resting diastolic blood pressure, measured as mm mercury							core field							False			QuantityValue							JsonObj()		host blood pressure diastolic	
Biosample	nmdc:Biosample	blood_press_syst	MIXS:0000259								host blood pressure systolic	measurement value	1	millimeter mercury					Resting systolic blood pressure, measured as mm mercury							core field							False			QuantityValue							JsonObj()		host blood pressure systolic	
Biosample	nmdc:Biosample	bromide	MIXS:0000176								bromide	measurement value	1	parts per million					Concentration of bromide		0.05 parts per million					core field							False			QuantityValue							JsonObj()		bromide	
Biosample	nmdc:Biosample	build_docs	MIXS:0000787								design, construction, and operation documents	enumeration	1						The building design, construction and operation documents		maintenance plans					core field							False			build_docs_enum							JsonObj()		design, construction, and operation documents	
Biosample	nmdc:Biosample	build_occup_type	MIXS:0000761								building occupancy type	enumeration	m						The primary function for which a building or discrete part of a building is intended to be used		market					core field							True			build_occup_type_enum							JsonObj()		building occupancy type	
Biosample	nmdc:Biosample	building_setting	MIXS:0000768								building setting	enumeration	1						A location (geography) where a building is set		rural					core field							False			building_setting_enum							JsonObj()		building setting	
Biosample	nmdc:Biosample	built_struc_age	MIXS:0000145								built structure age	value	1	year					The age of the built structure since construction		15					core field							False			QuantityValue							JsonObj()		built structure age	
Biosample	nmdc:Biosample	built_struc_set	MIXS:0000778								built structure setting	enumeration	1						The characterization of the location of the built structure as high or low human density		rural					core field							False			TextValue						[urban|rural]	JsonObj()		built structure setting	
Biosample	nmdc:Biosample	built_struc_type	MIXS:0000721								built structure type	free text	1						A physical structure that is a body or assemblage of bodies in space to form a system capable of supporting loads							core field							False			TextValue						{text}	JsonObj()		built structure type	
Biosample	nmdc:Biosample	bulk_elect_conductivity															Provide the value output of the field instrument.		Electrical conductivity is a measure of the ability to carry electric current, which is mostly dictated by the chemistry of and amount of water.		JsonObj(has_raw_value='0.017 mS/cm', has_numeric_value=0.017, has_unit='mS/cm')															QuantityValue							JsonObj()		bulk electrical conductivity	
Biosample	nmdc:Biosample	calcium	MIXS:0000432								calcium	measurement value	1	milligram per liter, micromole per liter, parts per million					Concentration of calcium in the sample		0.2 micromole per liter					core field							False			QuantityValue							JsonObj()		calcium	
Biosample	nmdc:Biosample	carb_dioxide	MIXS:0000097								carbon dioxide	measurement value	1	micromole per liter, parts per million					Carbon dioxide (gas) amount or concentration at the time of sampling		410 parts per million					core field							False			QuantityValue							JsonObj()		carbon dioxide	
Biosample	nmdc:Biosample	carb_monoxide	MIXS:0000098								carbon monoxide	measurement value	1	micromole per liter, parts per million					Carbon monoxide (gas) amount or concentration at the time of sampling		0.1 parts per million					core field							False			QuantityValue							JsonObj()		carbon monoxide	
Biosample	nmdc:Biosample	carb_nitro_ratio	MIXS:0000310								carbon/nitrogen ratio	measurement value	1						Ratio of amount or concentrations of carbon to nitrogen		0.417361111					core field							False			QuantityValue							JsonObj()		carbon/nitrogen ratio	
Biosample	nmdc:Biosample	ceil_area	MIXS:0000148								ceiling area	measurement value	1	square meter					The area of the ceiling space within the room		25 square meter					core field							False			QuantityValue							JsonObj()		ceiling area	
Biosample	nmdc:Biosample	ceil_cond	MIXS:0000779								ceiling condition	enumeration	1						The physical condition of the ceiling at the time of sampling; photos or video preferred; use drawings to indicate location of damaged areas		damaged					core field							False			ceil_cond_enum							JsonObj()		ceiling condition	
Biosample	nmdc:Biosample	ceil_finish_mat	MIXS:0000780								ceiling finish material	enumeration	1						The type of material used to finish a ceiling		stucco					core field							False			ceil_finish_mat_enum							JsonObj()		ceiling finish material	
Biosample	nmdc:Biosample	ceil_struc	MIXS:0000782								ceiling structure	enumeration	1						The construction format of the ceiling		concrete					core field							False			TextValue						[wood frame|concrete]	JsonObj()		ceiling structure	
Biosample	nmdc:Biosample	ceil_texture	MIXS:0000783								ceiling texture	enumeration	1						The feel, appearance, or consistency of a ceiling surface		popcorn					core field							False			ceil_texture_enum							JsonObj()		ceiling texture	
Biosample	nmdc:Biosample	ceil_thermal_mass	MIXS:0000143								ceiling thermal mass	measurement value	1	joule per degree Celsius					The ability of the ceiling to provide inertia against temperature fluctuations. Generally this means concrete that is exposed. A metal deck that supports a concrete slab will act thermally as long as it is exposed to room air flow							core field							False			QuantityValue							JsonObj()		ceiling thermal mass	
Biosample	nmdc:Biosample	ceil_type	MIXS:0000784								ceiling type	enumeration	1						The type of ceiling according to the ceiling's appearance or construction		coffered					core field							False			ceil_type_enum							JsonObj()		ceiling type	
Biosample	nmdc:Biosample	ceil_water_mold	MIXS:0000781								ceiling signs of water/mold	enumeration	1						Signs of the presence of mold or mildew on the ceiling		presence of mold visible					core field							False			TextValue						[presence of mold visible|no presence of mold visible]	JsonObj()		ceiling signs of water/mold	
Biosample	nmdc:Biosample	chem_administration	MIXS:0000751								chemical administration	CHEBI;timestamp	m						List of chemical compounds administered to the host or site where sampling occurred, and when (e.g. Antibiotics, n fertilizer, air filter); can include multiple compounds. For chemical entities of biological interest ontology (chebi) (v 163), http://purl.bioontology.org/ontology/chebi		agar [CHEBI:2509];2018-05-11T20:00Z				True	core field							True			ControlledTermValue						{termLabel} {[termID]};{timestamp}	JsonObj()		chemical administration	
Biosample	nmdc:Biosample	chem_mutagen	MIXS:0000555								chemical mutagen	mutagen name;mutagen amount;treatment interval and duration	m	milligram per liter					Treatment involving use of mutagens; should include the name of mutagen, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple mutagen regimens		nitrous acid;0.5 milligram per liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		chemical mutagen	
Biosample	nmdc:Biosample	chem_oxygen_dem	MIXS:0000656								chemical oxygen demand	measurement value	1	milligram per liter					A measure of the capacity of water to consume oxygen during the decomposition of organic matter and the oxidation of inorganic chemicals such as ammonia and nitrite							core field							False			QuantityValue							JsonObj()		chemical oxygen demand	
Biosample	nmdc:Biosample	chem_treat_method	MIXS:0000457								chemical treatment method	measurement value;frequency;duration;duration	1	milligram per liter					Method of chemical administration(dose, frequency, duration, time elapsed between administration and sampling) (e.g. 50 mg/l; twice a week; 1 hr; 0 days)							core field							False			string						{float} {unit};{Rn/start_time/end_time/duration};{duration};{duration}	JsonObj()		chemical treatment method	
Biosample	nmdc:Biosample	chem_treatment	MIXS:0001012								chemical treatment	name;name;timestamp	1						List of chemical compounds administered upstream the sampling location where sampling occurred (e.g. Glycols, H2S scavenger, corrosion and scale inhibitors, demulsifiers, and other production chemicals etc.). The commercial name of the product and name of the supplier should be provided. The date of administration should also be included		ACCENT 1125;DOW;2010-11-17					core field							False			TextValue						{text};{text};{timestamp}	JsonObj()		chemical treatment	
Biosample	nmdc:Biosample	chloride	MIXS:0000429								chloride	measurement value	1	milligram per liter, parts per million					Concentration of chloride in the sample		5000 milligram per liter					core field							False			QuantityValue							JsonObj()		chloride	
Biosample	nmdc:Biosample	chlorophyll	MIXS:0000177								chlorophyll	measurement value	1	milligram per cubic meter, microgram per liter					Concentration of chlorophyll		5 milligram per cubic meter					core field							False			QuantityValue							JsonObj()		chlorophyll	
Biosample	nmdc:Biosample	climate_environment	MIXS:0001040								climate environment	climate name;treatment interval and duration	m						Treatment involving an exposure to a particular climate; treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple climates		tropical climate;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{Rn/start_time/end_time/duration}	JsonObj()		climate environment	"description says ""can include multiple climates"" but multivalued is set to false|add examples, i need to see some examples to add correctly formatted example."
Biosample	nmdc:Biosample	collected_from															this illustrates implementing a Biosample relation with a (binary) slot		The Site from which a Biosample was collected																^(nmdc):frsite-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	FieldResearchSite							JsonObj()	{id_nmdc_prefix}:frsite-{id_shoulder}-{id_blade}$		add an OBO slot_uri ?
Biosample	nmdc:Biosample	collection_date	MIXS:0000011								collection date	date and time							The time of sampling, either as an instance (single point in time) or interval. In case no exact time is available, the date/time can be right truncated i.e. all of these are valid times: 2008-01-23T19:23:10+00:00; 2008-01-23T19:23:10; 2008-01-23; 2008-01; 2008; Except: 2008-01; 2008 all are ISO8601 compliant		2018-05-11T10:00:00+01:00; 2018-05-11					environment field							False			TimestampValue							JsonObj()		collection date	
Biosample	nmdc:Biosample	collection_date_inc															Date should be formatted as YYYY(-MM(-DD)). Ie, 2021-04-15, 2021-04 and 2021 are all acceptable.		Date the incubation was harvested/collected/ended. Only relevant for incubation samples.		2021-04-15|2021-04|2021													MIxS collection_date accepts (truncated) ISO8601. DH taking arbitrary precision date only		string	2.0	True		MIXS:0000011	MIxS Inspired	{date, arbitrary precision}	JsonObj()		incubation collection date	
Biosample	nmdc:Biosample	collection_time															Time should be entered as HH:MM(:SS) in GMT. See here for a converter: https://www.worldtimebuddy.com/pst-to-gmt-converter		The time of sampling, either as an instance (single point) or interval.		13:33|13:33:55													MIxS collection_date accepts (truncated) ISO8601. DH taking seconds optional time only		string	1.0	True		MIXS:0000011	MIxS Inspired	{time, seconds optional}	JsonObj()		collection time, GMT	
Biosample	nmdc:Biosample	collection_time_inc															Time should be entered as HH:MM(:SS) in GMT. See here for a converter: https://www.worldtimebuddy.com/pst-to-gmt-converter		Time the incubation was harvested/collected/ended. Only relevant for incubation samples.		13:33|13:33:55													MIxS collection_date accepts (truncated) ISO8601. DH taking seconds optional time only		string	3.0	True		MIXS:0000011	MIxS Inspired	{time, seconds optional}	JsonObj()		incubation collection time, GMT	
Biosample	nmdc:Biosample	community																																		string							JsonObj()			
Biosample	nmdc:Biosample	conduc	MIXS:0000692								conductivity	measurement value	1	milliSiemens per centimeter					Electrical conductivity of water		10 milliSiemens per centimeter					core field							False			QuantityValue							JsonObj()		conductivity	
Biosample	nmdc:Biosample	cool_syst_id	MIXS:0000785								cooling system identifier	unique identifier	1						The cooling system identifier		12345					core field							False			TextValue							JsonObj()		cooling system identifier	
Biosample	nmdc:Biosample	core field							True	core_field									basic fields																	string							JsonObj()			
Biosample	nmdc:Biosample	crop_rotation	MIXS:0000318								history/crop rotation	crop rotation status;schedule	1						Whether or not crop is rotated, and if yes, rotation schedule		yes;R2/2017-01-01/2018-12-31/P6M					core field							False			TextValue						{boolean};{Rn/start_time/end_time/duration}	JsonObj()		history/crop rotation	
Biosample	nmdc:Biosample	cult_root_med	MIXS:0001041								culture rooting medium	name, PMID,DOI or url	1						Name or reference for the hydroponic or in vitro culture rooting medium; can be the name of a commonly used medium or reference to a specific medium, e.g. Murashige and Skoog medium. If the medium has not been formally published, use the rooting medium descriptors.		http://himedialabs.com/TD/PT158.pdf					core field							False			TextValue						{text}|{PMID}|{DOI}|{URL}	JsonObj()		culture rooting medium	
Biosample	nmdc:Biosample	cur_land_use	MIXS:0001080								current land use	enumeration	1						Present state of sample site		conifers					core field							False			cur_land_use_enum							JsonObj()		current land use	
Biosample	nmdc:Biosample	cur_vegetation	MIXS:0000312								current vegetation	current vegetation type	1				Values provided here can be specific species of vegetation or vegetation regions|See for vegetation regions- https://education.nationalgeographic.org/resource/vegetation-region		Vegetation classification from one or more standard classification systems, or agricultural crop		deciduous forest|forest|Bauhinia variegata					core field							False			TextValue						{text}	JsonObj()		current vegetation	Recommend changing this from text value to some king of ontology?
Biosample	nmdc:Biosample	cur_vegetation_meth	MIXS:0000314								current vegetation method	PMID,DOI or url	1				Required when current vegetation is provided.		Reference or method used in vegetation classification		https://doi.org/10.1111/j.1654-109X.2011.01154.x					core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		current vegetation method	I'm not sure this is a DOI, PMID, or URI. Should pool the community and find out how they accomplish this if provided.
Biosample	nmdc:Biosample	date_last_rain	MIXS:0000786								date last rain	timestamp	1						The date of the last time it rained		2018-05-11:T14:30Z					core field							False			TimestampValue							JsonObj()		date last rain	
Biosample	nmdc:Biosample	density	MIXS:0000435								density	measurement value	1	gram per cubic meter, gram per cubic centimeter					Density of the sample, which is its mass per unit volume (aka volumetric mass density)		1000 kilogram per cubic meter					core field							False			QuantityValue							JsonObj()		density	
Biosample	nmdc:Biosample	depos_env	MIXS:0000992								depositional environment	enumeration	1						"Main depositional environment (https://en.wikipedia.org/wiki/Depositional_environment). If ""other"" is specified, please propose entry in ""additional info"" field"		Continental - Alluvial					core field							False			depos_env_enum							JsonObj()		depositional environment	
Biosample	nmdc:Biosample	depth	MIXS:0000018								depth	measurement value							The vertical distance below local surface, e.g. for sediment or soil samples depth is measured from sediment or soil surface, respectively. Depth can be reported as an interval for subsurface samples.		10 meter					environment field							False			QuantityValue							JsonObj()		depth	
Biosample	nmdc:Biosample	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Biosample	nmdc:Biosample	dew_point	MIXS:0000129								dew point	measurement value	1	degree Celsius					The temperature to which a given parcel of humid air must be cooled, at constant barometric pressure, for water vapor to condense into water.		22 degree Celsius					core field							False			QuantityValue							JsonObj()		dew point	
Biosample	nmdc:Biosample	diether_lipids	MIXS:0000178								diether lipids	diether lipid name;measurement value	m	nanogram per liter					Concentration of diether lipids; can include multiple types of diether lipids		0.2 nanogram per liter				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		diether lipids	
Biosample	nmdc:Biosample	diss_carb_dioxide	MIXS:0000436								dissolved carbon dioxide	measurement value	1	micromole per liter, milligram per liter					Concentration of dissolved carbon dioxide in the sample or liquid portion of the sample		5 milligram per liter					core field							False			QuantityValue							JsonObj()		dissolved carbon dioxide	
Biosample	nmdc:Biosample	diss_hydrogen	MIXS:0000179								dissolved hydrogen	measurement value	1	micromole per liter					Concentration of dissolved hydrogen		0.3 micromole per liter					core field							False			QuantityValue							JsonObj()		dissolved hydrogen	
Biosample	nmdc:Biosample	diss_inorg_carb	MIXS:0000434								dissolved inorganic carbon	measurement value	1	microgram per liter, milligram per liter, parts per million					Dissolved inorganic carbon concentration in the sample, typically measured after filtering the sample using a 0.45 micrometer filter		2059 micromole per kilogram					core field							False			QuantityValue							JsonObj()		dissolved inorganic carbon	
Biosample	nmdc:Biosample	diss_inorg_nitro	MIXS:0000698								dissolved inorganic nitrogen	measurement value	1	microgram per liter, micromole per liter					Concentration of dissolved inorganic nitrogen		761 micromole per liter					core field							False			QuantityValue							JsonObj()		dissolved inorganic nitrogen	
Biosample	nmdc:Biosample	diss_inorg_phosp	MIXS:0000106								dissolved inorganic phosphorus	measurement value	1	microgram per liter, milligram per liter, parts per million					Concentration of dissolved inorganic phosphorus in the sample		56.5 micromole per liter					core field							False			QuantityValue							JsonObj()		dissolved inorganic phosphorus	
Biosample	nmdc:Biosample	diss_iron	MIXS:0000139								dissolved iron	measurement value	1	milligram per liter					Concentration of dissolved iron in the sample							core field							False			QuantityValue							JsonObj()		dissolved iron	
Biosample	nmdc:Biosample	diss_org_carb	MIXS:0000433								dissolved organic carbon	measurement value	1	micromole per liter, milligram per liter					Concentration of dissolved organic carbon in the sample, liquid portion of the sample, or aqueous phase of the fluid		197 micromole per liter					core field							False			QuantityValue							JsonObj()		dissolved organic carbon	
Biosample	nmdc:Biosample	diss_org_nitro	MIXS:0000162								dissolved organic nitrogen	measurement value	1	microgram per liter, milligram per liter					Dissolved organic nitrogen concentration measured as; total dissolved nitrogen - NH4 - NO3 - NO2		0.05 micromole per liter					core field							False			QuantityValue							JsonObj()		dissolved organic nitrogen	
Biosample	nmdc:Biosample	diss_oxygen	MIXS:0000119								dissolved oxygen	measurement value	1	micromole per kilogram, milligram per liter					Concentration of dissolved oxygen		175 micromole per kilogram					core field							False			QuantityValue							JsonObj()		dissolved oxygen	
Biosample	nmdc:Biosample	diss_oxygen_fluid	MIXS:0000438								dissolved oxygen in fluids	measurement value	1	micromole per kilogram, milligram per liter					Concentration of dissolved oxygen in the oil field produced fluids as it contributes to oxgen-corrosion and microbial activity (e.g. Mic).							core field							False			QuantityValue							JsonObj()		dissolved oxygen in fluids	
Biosample	nmdc:Biosample	dna_absorb1															Recommended value is between 1 and 3.		260/280 measurement of DNA sample purity		2.02					biomaterial_purity										float	7.0	True			JGI-Metagenomics		JsonObj()		DNA absorbance 260/280	
Biosample	nmdc:Biosample	dna_absorb2															Recommended value is between 1 and 3.		260/230 measurement of DNA sample purity		2.02					biomaterial_purity										float	8.0	True			JGI-Metagenomics		JsonObj()		DNA absorbance 260/230	
Biosample	nmdc:Biosample	dna_collect_site																	Provide information on the site your DNA sample was collected from		untreated pond water															string	15.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA collection site	
Biosample	nmdc:Biosample	dna_concentration															Units must be in ng/uL. Enter the numerical part only. Must be calculated using a fluorometric method. Acceptable values are 0-2000.				100								2000.0		0.0					float	5.0	True		nmdc:nucleic_acid_concentration	JGI-Metagenomics		JsonObj()		DNA concentration in ng/ul	
Biosample	nmdc:Biosample	dna_cont_type																	Tube or plate (96-well)		plate															JgiContTypeEnum	10.0	True			JGI-Metagenomics		JsonObj()		DNA container type	
Biosample	nmdc:Biosample	dna_cont_well															Required when 'plate' is selected for container type.|Leave blank if the sample will be shipped in a tube.|JGI will not process samples in corner wells, so A1, A12, H1 and H12 will not pass validation.|For partial plates, fill by columns, like B1-G1,A2-H2,A3-D3 (NOT A2-A11,B1-B8).				B2														^(?!A1$|A12$|H1$|H12$)(([A-H][1-9])|([A-H]1[0-2]))$	string	11.0	True			JGI-Metagenomics	{96 well plate pos}	JsonObj()		DNA plate position	
Biosample	nmdc:Biosample	dna_container_id															Must be unique across all tubes and plates, and <20 characters. All samples in a plate should have the same plate label.				Pond_MT_041618															string	9.0	True			JGI-Metagenomics	{text < 20 characters}	JsonObj()		DNA container label	
Biosample	nmdc:Biosample	dna_dnase															Note DNase treatment is required for all RNA samples.				no															YesNoEnum	13.0	True			JGI-Metagenomics		JsonObj()		DNase treatment DNA	
Biosample	nmdc:Biosample	dna_isolate_meth									Sample Isolation Method								Describe the method/protocol/kit used to extract DNA/RNA.		phenol/chloroform extraction															string	16.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA isolation method	
Biosample	nmdc:Biosample	dna_organisms																	List any organisms known or suspected to grow in co-culture, as well as estimated % of the organism in that culture.		expected to contain microbes (59%) fungi (30%), viruses (10%), tadpoles (1%)															string	14.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA expected organisms	
Biosample	nmdc:Biosample	dna_project_contact															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				John Jones															string	18.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA seq project contact	
Biosample	nmdc:Biosample	dna_samp_id															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				187654															string	3.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA sample ID	Removed identifier = TRUE from dna_samp_ID in JGI_sample_slots, as a class can't have two identifiers. How to force uniqueness? Moot because that column will be prefilled?
Biosample	nmdc:Biosample	dna_sample_format																	Solution in which the DNA sample has been suspended		Water															DNASampleFormatEnum	12.0	True			JGI-Metagenomics		JsonObj()		DNA sample format	
Biosample	nmdc:Biosample	dna_sample_name																	Give the DNA sample a name that is meaningful to you. Sample names must be unique across all JGI projects and contain a-z, A-Z, 0-9, - and _ only.		JGI_pond_041618															string	4.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA sample name	
Biosample	nmdc:Biosample	dna_seq_project									Seq Project ID						Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				1191234															string	1.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA seq project ID	
Biosample	nmdc:Biosample	dna_seq_project_name															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				JGI Pond metagenomics															string	2.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA seq project name	
Biosample	nmdc:Biosample	dna_seq_project_pi															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				Jane Johnson															string	17.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA seq project PI	
Biosample	nmdc:Biosample	dna_volume															Units must be in uL. Enter the numerical part only. Value must be 0-1000. This form accepts values < 25, but JGI may refuse to process them unless permission has been granted by a project manager				25								1000.0		0.0					float	6.0	True			JGI-Metagenomics	{float}	JsonObj()		DNA volume in ul	
Biosample	nmdc:Biosample	dnase_rna									Was Sample DNAse treated?						Note DNase treatment is required for all RNA samples.				no															YesNoEnum	13.0	True			JGI-Metatranscriptomics		JsonObj()		DNase treated	
Biosample	nmdc:Biosample	door_comp_type	MIXS:0000795								door type, composite	enumeration	1						The composite type of the door		revolving					core field							False			door_comp_type_enum							JsonObj()		door type, composite	
Biosample	nmdc:Biosample	door_cond	MIXS:0000788								door condition	enumeration	1						The phsical condition of the door		new					core field							False			door_cond_enum							JsonObj()		door condition	
Biosample	nmdc:Biosample	door_direct	MIXS:0000789								door direction of opening	enumeration	1						The direction the door opens		inward					core field							False			door_direct_enum							JsonObj()		door direction of opening	
Biosample	nmdc:Biosample	door_loc	MIXS:0000790								door location	enumeration	1						The relative location of the door in the room		north					core field							False			door_loc_enum							JsonObj()		door location	
Biosample	nmdc:Biosample	door_mat	MIXS:0000791								door material	enumeration	1						The material the door is composed of		wood					core field							False			door_mat_enum							JsonObj()		door material	
Biosample	nmdc:Biosample	door_move	MIXS:0000792								door movement	enumeration	1						The type of movement of the door		swinging					core field							False			door_move_enum							JsonObj()		door movement	
Biosample	nmdc:Biosample	door_size	MIXS:0000158								door area or size	measurement value	1	square meter					The size of the door		2.5 square meter					core field							False			QuantityValue							JsonObj()		door area or size	
Biosample	nmdc:Biosample	door_type	MIXS:0000794								door type	enumeration	1						The type of door material		wooden					core field							False			door_type_enum							JsonObj()		door type	
Biosample	nmdc:Biosample	door_type_metal	MIXS:0000796								door type, metal	enumeration	1						The type of metal door		hollow					core field							False			door_type_metal_enum							JsonObj()		door type, metal	
Biosample	nmdc:Biosample	door_type_wood	MIXS:0000797								door type, wood	enumeration	1						The type of wood door		battened					core field							False			door_type_wood_enum							JsonObj()		door type, wood	
Biosample	nmdc:Biosample	door_water_mold	MIXS:0000793								door signs of water/mold	enumeration	1						Signs of the presence of mold or mildew on a door		presence of mold visible					core field							False			TextValue						[presence of mold visible|no presence of mold visible]	JsonObj()		door signs of water/mold	
Biosample	nmdc:Biosample	down_par	MIXS:0000703								downward PAR	measurement value	1	microEinstein per square meter per second, microEinstein per square centimeter per second					Visible waveband radiance and irradiance measurements in the water column		28.71 microEinstein per square meter per second					core field							False			QuantityValue							JsonObj()		downward PAR	
Biosample	nmdc:Biosample	drainage_class	MIXS:0001085								drainage classification	enumeration	1						Drainage classification from a standard system such as the USDA system		well					core field							False			drainage_class_enum							JsonObj()		drainage classification	
Biosample	nmdc:Biosample	drawings	MIXS:0000798								drawings	enumeration	1						The buildings architectural drawings; if design is chosen, indicate phase-conceptual, schematic, design development, and construction documents		sketch					core field							False			drawings_enum							JsonObj()		drawings	
Biosample	nmdc:Biosample	ecosystem															The abiotic factors play a profound role on the type and composition of organisms in a given environment. The GOLD Ecosystem at the top of the five-level classification system is aimed at capturing the broader environment from which an organism or environmental sample is collected. The three broad groups under Ecosystem are Environmental, Host-associated, and Engineered. They represent samples collected from a natural environment or from another organism or from engineered environments like bioreactors respectively.		An ecosystem is a combination of a physical environment (abiotic factors) and all the organisms (biotic factors) that interact with this environment. Ecosystem is in position 1/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Biosample	nmdc:Biosample	ecosystem_category															The Environmental ecosystem (for example) is divided into Air, Aquatic and Terrestrial. Ecosystem categories for Host-associated samples can be individual hosts or phyla and for engineered samples it may be manipulated environments like bioreactors, solid waste etc.		Ecosystem categories represent divisions within the ecosystem based on specific characteristics of the environment from where an organism or sample is isolated. Ecosystem category is in position 2/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Biosample	nmdc:Biosample	ecosystem_subtype															Ecosystem Type Marine (Environmental -> Aquatic -> Marine) is further divided (for example) into Intertidal zone, Coastal, Pelagic, Intertidal zone etc. in the Ecosystem subtype category.		Ecosystem subtypes represent further subdivision of Ecosystem types into more distinct subtypes. Ecosystem subtype is in position 4/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Biosample	nmdc:Biosample	ecosystem_type															The Aquatic ecosystem category (for example) may have ecosystem types like Marine or Thermal springs etc. Ecosystem category Air may have Indoor air or Outdoor air as different Ecosystem Types. In the case of Host-associated samples, ecosystem type can represent Respiratory system, Digestive system, Roots etc.		Ecosystem types represent things having common characteristics within the Ecosystem Category. These common characteristics based grouping is still broad but specific to the characteristics of a given environment. Ecosystem type is in position 3/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Biosample	nmdc:Biosample	efficiency_percent	MIXS:0000657								efficiency percent	measurement value	1	micromole per liter					Percentage of volatile solids removed from the anaerobic digestor							core field							False			QuantityValue							JsonObj()		efficiency percent	
Biosample	nmdc:Biosample	elev	MIXS:0000093								elevation	measurement value					All elevations must be reported in meters. Provide the numerical portion only.|Please use https://www.advancedconverter.com/map-tools/find-altitude-by-coordinates, if needed, to help estimate the elevation based on latitude and longitude coordinates.		Elevation of the sampling site is its height above a fixed reference point, most commonly the mean sea level. Elevation is mainly used when referring to points on the earth's surface, while altitude is used for points above the surface, such as an aircraft in flight or a spacecraft in orbit.		100					environment field							False			float							JsonObj()		elevation, meters	
Biosample	nmdc:Biosample	elevator	MIXS:0000799								elevator count	value	1						The number of elevators within the built structure		2					core field							False			TextValue							JsonObj()		elevator count	
Biosample	nmdc:Biosample	embargoed																	If true, the data are embargoed and not available for public access.																	boolean		True					JsonObj()			make this required?|first apply to Biosample|try to apply to all Biosamples in a particular nmdc-server SubmissionMetadata?|applying to a Study may not be granular enough
Biosample	nmdc:Biosample	emsl_biosample_identifiers																	A list of identifiers for the biosample from the EMSL database.  This is used to link the biosample, as modeled by NMDC, to the biosample in the planned EMSL NEXUS database.							biosample_identifiers						emsl_identifiers	True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	external_identifier							JsonObj()		EMSL Biosample Identifiers	"removed ""planned"" once NEXUS is online|determine real expansion for emsl prefix"
Biosample	nmdc:Biosample	emulsions	MIXS:0000660								emulsions	emulsion name;measurement value	m	gram per liter					Amount or concentration of substances such as paints, adhesives, mayonnaise, hair colorants, emulsified oils, etc.; can include multiple emulsion types						True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		emulsions	
Biosample	nmdc:Biosample	env_broad_scale	MIXS:0000012								broad-scale environmental context	The major environment type(s) where the sample was collected. Recommend subclasses of biome [ENVO:00000428]. Multiple terms can be separated by one or more pipes.			The biome or major environmental system where the sample or specimen originated. Choose values from subclasses of the 'biome' class [ENVO:00000428] in the Environment Ontology (ENVO). For host-associated or plant-associated samples, use terms from the UBERON or Plant Ontology to describe the broad anatomical or morphological context				Report the major environmental system the sample or specimen came from. The system(s) identified should have a coarse spatial grain, to provide the general environmental context of where the sampling was done (e.g. in the desert or a rainforest). We recommend using subclasses of EnvO’s biome class:  http://purl.obolibrary.org/obo/ENVO_00000428. EnvO documentation about how to use the field: https://github.com/EnvironmentOntology/envo/wiki/Using-ENVO-with-MIxS		oceanic epipelagic zone biome [ENVO:01000035]					mixs_env_triad_field							False			ControlledIdentifiedTermValue			True			{termLabel} {[termID]}	JsonObj()		broad-scale environmental context	
Biosample	nmdc:Biosample	env_local_scale	MIXS:0000013								local environmental context	Environmental entities having causal influences upon the entity at time of sampling.			The specific environmental entities or features near the sample or specimen that significantly influence its characteristics or composition. These entities are typically smaller in scale than the broad environmental context. Values for this field should be countable, material nouns and must be chosen from subclasses of BFO:0000040 (material entity) that appear in the Environment Ontology (ENVO). For host-associated or plant-associated samples, use terms from the UBERON or Plant Ontology to describe specific anatomical structures or plant parts.				Report the entity or entities which are in the sample or specimen’s local vicinity and which you believe have significant causal influences on your sample or specimen. We recommend using EnvO terms which are of smaller spatial grain than your entry for env_broad_scale. Terms, such as anatomical sites, from other OBO Library ontologies which interoperate with EnvO (e.g. UBERON) are accepted in this field. EnvO documentation about how to use the field: https://github.com/EnvironmentOntology/envo/wiki/Using-ENVO-with-MIxS.		litter layer [ENVO:01000338]					mixs_env_triad_field							False			ControlledIdentifiedTermValue			True			{termLabel} {[termID]}	JsonObj()		local environmental context	
Biosample	nmdc:Biosample	env_medium	MIXS:0000014								environmental medium	The material displaced by the entity at time of sampling. Recommend subclasses of environmental material [ENVO:00010483].			The predominant environmental material or substrate that directly surrounds or hosts the sample or specimen at the time of sampling. Choose values from subclasses of the 'environmental material' class [ENVO:00010483] in the Environment Ontology (ENVO). Values for this field should be measurable or mass material nouns, representing continuous environmental materials. For host-associated or plant-associated samples, use terms from the UBERON or Plant Ontology to indicate a tissue, organ, or plant structure				Report the environmental material(s) immediately surrounding the sample or specimen at the time of sampling. We recommend using subclasses of 'environmental material' (http://purl.obolibrary.org/obo/ENVO_00010483). EnvO documentation about how to use the field: https://github.com/EnvironmentOntology/envo/wiki/Using-ENVO-with-MIxS . Terms from other OBO ontologies are permissible as long as they reference mass/volume nouns (e.g. air, water, blood) and not discrete, countable entities (e.g. a tree, a leaf, a table top).		soil [ENVO:00001998]					mixs_env_triad_field							False			ControlledIdentifiedTermValue			True			{termLabel} {[termID]}	JsonObj()		environmental medium	
Biosample	nmdc:Biosample	env_package									environmental package								MIxS extension for reporting of measurements and observations obtained from one or more of the environments where the sample was obtained. All environmental packages listed here are further defined in separate subtables. By giving the name of the environmental package, a selection of fields can be made from the subtables and can be reported															no longer in MIxS as of 6.0?		TextValue							JsonObj()			
Biosample	nmdc:Biosample	environment field							True	environment_field									field describing environmental aspect of a sample																	string							JsonObj()			
Biosample	nmdc:Biosample	escalator	MIXS:0000800								escalator count	value	1						The number of escalators within the built structure		4					core field							False			TextValue							JsonObj()		escalator count	
Biosample	nmdc:Biosample	ethylbenzene	MIXS:0000155								ethylbenzene	measurement value	1	milligram per liter, parts per million					Concentration of ethylbenzene in the sample							core field							False			QuantityValue							JsonObj()		ethylbenzene	
Biosample	nmdc:Biosample	exp_duct	MIXS:0000144								exposed ductwork	measurement value	1	square meter					The amount of exposed ductwork in the room							core field							False			QuantityValue							JsonObj()		exposed ductwork	
Biosample	nmdc:Biosample	exp_pipe	MIXS:0000220								exposed pipes	measurement value	1						The number of exposed pipes in the room							core field							False			QuantityValue							JsonObj()		exposed pipes	
Biosample	nmdc:Biosample	experimental_factor	MIXS:0000008								experimental factor	text or EFO and/or OBI							Experimental factors are essentially the variable aspects of an experiment design which can be used to describe an experiment, or set of experiments, in an increasingly detailed manner. This field accepts ontology terms from Experimental Factor Ontology (EFO) and/or Ontology for Biomedical Investigations (OBI). For a browser of EFO (v 2.95) terms, please see http://purl.bioontology.org/ontology/EFO; for a browser of OBI (v 2018-02-12) terms please see http://purl.bioontology.org/ontology/OBI		time series design [EFO:EFO_0001779]					investigation field							False			ControlledTermValue						{termLabel} {[termID]}|{text}	JsonObj()		experimental factor	
Biosample	nmdc:Biosample	experimental_factor_other															This slot accepts open-ended text about your sample.|We recommend using key:value pairs.|Provided pairs will be considered for inclusion as future slots/terms in this data collection template.		Other details about your sample that you feel can't be accurately represented in the available columns.		experimental treatment: value															string	7.0	True		MIXS:0000008|MIXS:0000300	MIxS Inspired	{text}	JsonObj()		experimental factor- other	
Biosample	nmdc:Biosample	ext_door	MIXS:0000170								exterior door count	value	1						The number of exterior doors in the built structure							core field							False			TextValue							JsonObj()		exterior door count	
Biosample	nmdc:Biosample	ext_wall_orient	MIXS:0000817								orientations of exterior wall	enumeration	1						The orientation of the exterior wall		northwest					core field							False			ext_wall_orient_enum							JsonObj()		orientations of exterior wall	
Biosample	nmdc:Biosample	ext_window_orient	MIXS:0000818								orientations of exterior window	enumeration	1						The compass direction the exterior window of the room is facing		southwest					core field							False			ext_window_orient_enum							JsonObj()		orientations of exterior window	
Biosample	nmdc:Biosample	extreme_event	MIXS:0000320								history/extreme events	date, string							Unusual physical events that may have affected microbial populations		1980-05-18, volcanic eruption					core field							False			string							JsonObj()		history/extreme events	
Biosample	nmdc:Biosample	fao_class	MIXS:0001083								soil_taxonomic/FAO classification	enumeration	1						Soil classification from the FAO World Reference Database for Soil Resources. The list can be found at http://www.fao.org/nr/land/sols/soil/wrb-soil-maps/reference-groups		Luvisols					core field							False			fao_class_enum							JsonObj()		soil_taxonomic/FAO classification	
Biosample	nmdc:Biosample	fertilizer_regm	MIXS:0000556								fertilizer regimen	fertilizer name;fertilizer amount;treatment interval and duration	m	gram, mole per liter, milligram per liter					Information about treatment involving the use of fertilizers; should include the name of fertilizer, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple fertilizer regimens		urea;0.6 milligram per liter;R2/2018-05-11:T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		fertilizer regimen	
Biosample	nmdc:Biosample	field	MIXS:0000291								field name	name	1						Name of the hydrocarbon field (e.g. Albacora)							core field							False			TextValue						{text}	JsonObj()		field name	
Biosample	nmdc:Biosample	filter_method															describe the filter or provide a catalog number and manufacturer		Type of filter used or how the sample was filtered		C18|Basix PES, 13-100-106 FisherSci															string	6.0	True		MIXS:0000765	MIxS Inspired	{text}	JsonObj()		filter method	
Biosample	nmdc:Biosample	filter_type	MIXS:0000765								filter type	enumeration	m						A device which removes solid particulates or airborne molecular contaminants		HEPA					core field							True			filter_type_enum							JsonObj()		filter type	
Biosample	nmdc:Biosample	fire	MIXS:0001086								history/fire	date string					Provide the date the fire occurred. If extended burning occurred provide the date range.		Historical and/or physical evidence of fire		1871-10-10|1871-10-01 to 1871-10-31					core field							False		^[12]\d{3}(?:(?:-(?:0[1-9]|1[0-2]))(?:-(?:0[1-9]|[12]\d|3[01]))?)?(\s+to\s+[12]\d{3}(?:(?:-(?:0[1-9]|1[0-2]))(?:-(?:0[1-9]|[12]\d|3[01]))?)?)?$	string							JsonObj()		history/fire	"is ""to"" acceptable? Is there a better way to request that be written?"
Biosample	nmdc:Biosample	fireplace_type	MIXS:0000802								fireplace type	enumeration	1						A firebox with chimney		wood burning					core field							False			TextValue						[gas burning|wood burning]	JsonObj()		fireplace type	
Biosample	nmdc:Biosample	flooding	MIXS:0000319								history/flooding	date string					Provide the date the flood occurred. If extended flooding occurred provide the date range.		Historical and/or physical evidence of flooding		1927-04-15|1927-04 to 1927-05					core field							False			string							JsonObj()		history/flooding	"is ""to"" acceptable? Is there a better way to request that be written?|What about if the ""day"" isn't known? Is this ok?"
Biosample	nmdc:Biosample	floor_age	MIXS:0000164								floor age	value	1	years, weeks, days					The time period since installment of the carpet or flooring							core field							False			QuantityValue							JsonObj()		floor age	
Biosample	nmdc:Biosample	floor_area	MIXS:0000165								floor area	measurement value	1	square meter					The area of the floor space within the room							core field							False			QuantityValue							JsonObj()		floor area	
Biosample	nmdc:Biosample	floor_cond	MIXS:0000803								floor condition	enumeration	1						The physical condition of the floor at the time of sampling; photos or video preferred; use drawings to indicate location of damaged areas		new					core field							False			floor_cond_enum							JsonObj()		floor condition	
Biosample	nmdc:Biosample	floor_count	MIXS:0000225								floor count	value	1						The number of floors in the building, including basements and mechanical penthouse							core field							False			TextValue							JsonObj()		floor count	
Biosample	nmdc:Biosample	floor_finish_mat	MIXS:0000804								floor finish material	enumeration	1						The floor covering type; the finished surface that is walked on		carpet					core field							False			floor_finish_mat_enum							JsonObj()		floor finish material	
Biosample	nmdc:Biosample	floor_struc	MIXS:0000806								floor structure	enumeration	1						Refers to the structural elements and subfloor upon which the finish flooring is installed		concrete					core field							False			floor_struc_enum							JsonObj()		floor structure	
Biosample	nmdc:Biosample	floor_thermal_mass	MIXS:0000166								floor thermal mass	measurement value	1	joule per degree Celsius					The ability of the floor to provide inertia against temperature fluctuations							core field							False			QuantityValue							JsonObj()		floor thermal mass	
Biosample	nmdc:Biosample	floor_water_mold	MIXS:0000805								floor signs of water/mold	enumeration	1						Signs of the presence of mold or mildew in a room		ceiling discoloration					core field							False			floor_water_mold_enum							JsonObj()		floor signs of water/mold	
Biosample	nmdc:Biosample	fluor	MIXS:0000704								fluorescence	measurement value	1	milligram chlorophyll a per cubic meter, volts					Raw or converted fluorescence of water		2.5 volts					core field							False			QuantityValue							JsonObj()		fluorescence	
Biosample	nmdc:Biosample	freq_clean	MIXS:0000226								frequency of cleaning	enumeration or {text}	1						The number of times the sample location is cleaned. Frequency of cleaning might be on a Daily basis, Weekly, Monthly, Quarterly or Annually.							core field							False			QuantityValue							JsonObj()		frequency of cleaning	
Biosample	nmdc:Biosample	freq_cook	MIXS:0000227								frequency of cooking	measurement value	1						The number of times a meal is cooked per week							core field							False			QuantityValue							JsonObj()		frequency of cooking	
Biosample	nmdc:Biosample	fungicide_regm	MIXS:0000557								fungicide regimen	fungicide name;fungicide amount;treatment interval and duration	m	gram, mole per liter, milligram per liter					Information about treatment involving use of fungicides; should include the name of fungicide, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple fungicide regimens		bifonazole;1 mole per liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		fungicide regimen	
Biosample	nmdc:Biosample	furniture	MIXS:0000807								furniture	enumeration	1						The types of furniture present in the sampled room		chair					core field							False			furniture_enum							JsonObj()		furniture	
Biosample	nmdc:Biosample	gaseous_environment	MIXS:0000558								gaseous environment	gaseous compound name;gaseous compound amount;treatment interval and duration	m	micromole per liter					Use of conditions with differing gaseous environments; should include the name of gaseous compound, amount administered, treatment duration, interval and total experimental duration; can include multiple gaseous environment regimens		CO2; 500ppm above ambient; constant|nitric oxide;0.5 micromole per liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		gaseous environment	would like to see usage examples for this slot. Requiring micromole/L seems too limiting and doesn't match expected_value value|did I do this right? keep the example that's provided and add another? so as to not override
Biosample	nmdc:Biosample	gaseous_substances	MIXS:0000661								gaseous substances	gaseous substance name;measurement value	m	micromole per liter					Amount or concentration of substances such as hydrogen sulfide, carbon dioxide, methane, etc.; can include multiple substances						True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		gaseous substances	
Biosample	nmdc:Biosample	gender_restroom	MIXS:0000808								gender of restroom	enumeration	1						The gender type of the restroom		male					core field							False			gender_restroom_enum							JsonObj()		gender of restroom	
Biosample	nmdc:Biosample	genetic_mod	MIXS:0000859								genetic modification	PMID,DOI,url or free text	1						Genetic modifications of the genome of an organism, which may occur naturally by spontaneous mutation, or be introduced by some experimental means, e.g. specification of a transgene or the gene knocked-out or details of transient transfection		aox1A transgenic					core field							False			TextValue						{PMID}|{DOI}|{URL}|{text}	JsonObj()		genetic modification	
Biosample	nmdc:Biosample	geo_loc_name	MIXS:0000010								geographic location (country and/or sea,region)	country or sea name (INSDC or GAZ): region(GAZ), specific location name							The geographical origin of the sample as defined by the country or sea name followed by specific region name. Country or sea names should be chosen from the INSDC country list (http://insdc.org/country.html), or the GAZ ontology (http://purl.bioontology.org/ontology/GAZ)		USA: Maryland, Bethesda					environment field							False			TextValue						{term}: {term}, {text}	JsonObj()		geographic location (country and/or sea,region)	
Biosample	nmdc:Biosample	glucosidase_act	MIXS:0000137								glucosidase activity	measurement value	1	mol per liter per hour					Measurement of glucosidase activity		5 mol per liter per hour					core field							False			QuantityValue							JsonObj()		glucosidase activity	
Biosample	nmdc:Biosample	gold_biosample_identifiers													Provide the GOLD biosample IDs associated with this biosample.		This is the ID provided by GOLD that starts with 'GB'		Unique identifier for a biosample submitted to GOLD that matches the NMDC submitted biosample		https://bioregistry.io/gold:Gb0312930					biosample_identifiers						gold_identifiers	True		^gold:Gb[0-9]+$	uriorcurie							JsonObj()			
Biosample	nmdc:Biosample	gravidity	MIXS:0000875								gravidity	gravidity status;timestamp	1						Whether or not subject is gravid, and if yes date due or date post-conception, specifying which is used		yes;due date:2018-05-11					core field							False			TextValue						{boolean};{timestamp}	JsonObj()		gravidity	
Biosample	nmdc:Biosample	gravity	MIXS:0000559								gravity	gravity factor value;treatment interval and duration	m	meter per square second, g					Information about treatment involving use of gravity factor to study various types of responses in presence, absence or modified levels of gravity; treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple treatments		12 g;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		gravity	
Biosample	nmdc:Biosample	growth_facil	MIXS:0001043								growth facility	free text or CO	1						Type of facility where the sampled plant was grown; controlled vocabulary: growth chamber, open top chamber, glasshouse, experimental garden, field. Alternatively use Crop Ontology (CO) terms, see http://www.cropontology.org/ontology/CO_715/Crop%20Research		Growth chamber [CO_715:0000189]					core field							False			ControlledTermValue						{text}|{termLabel} {[termID]}	JsonObj()		growth facility	
Biosample	nmdc:Biosample	growth_habit	MIXS:0001044								growth habit	enumeration	1						Characteristic shape, appearance or growth form of a plant species		spreading					core field							False			growth_habit_enum							JsonObj()		growth habit	
Biosample	nmdc:Biosample	growth_hormone_regm	MIXS:0000560								growth hormone regimen	growth hormone name;growth hormone amount;treatment interval and duration	m	gram, mole per liter, milligram per liter					Information about treatment involving use of growth hormones; should include the name of growth hormone, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple growth hormone regimens		abscisic acid;0.5 milligram per liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		growth hormone regimen	
Biosample	nmdc:Biosample	habitat																																		string							JsonObj()			
Biosample	nmdc:Biosample	hall_count	MIXS:0000228								hallway/corridor count	value	1						The total count of hallways and cooridors in the built structure							core field							False			TextValue							JsonObj()		hallway/corridor count	
Biosample	nmdc:Biosample	handidness	MIXS:0000809								handidness	enumeration	1						The handidness of the individual sampled		right handedness					core field							False			handidness_enum							JsonObj()		handidness	
Biosample	nmdc:Biosample	hc_produced	MIXS:0000989								hydrocarbon type produced	enumeration	1						"Main hydrocarbon type produced from resource (i.e. Oil, gas, condensate, etc). If ""other"" is specified, please propose entry in ""additional info"" field"		Gas					core field							False			hc_produced_enum							JsonObj()		hydrocarbon type produced	
Biosample	nmdc:Biosample	hcr	MIXS:0000988								hydrocarbon resource type	enumeration	1						"Main Hydrocarbon Resource type. The term ""Hydrocarbon Resource"" HCR defined as a natural environmental feature containing large amounts of hydrocarbons at high concentrations potentially suitable for commercial exploitation. This term should not be confused with the Hydrocarbon Occurrence term which also includes hydrocarbon-rich environments with currently limited commercial interest such as seeps, outcrops, gas hydrates etc. If ""other"" is specified, please propose entry in ""additional info"" field"		Oil Sand					core field							False			hcr_enum							JsonObj()		hydrocarbon resource type	
Biosample	nmdc:Biosample	hcr_fw_salinity	MIXS:0000406								formation water salinity	measurement value	1	milligram per liter					Original formation water salinity (prior to secondary recovery e.g. Waterflooding) expressed as TDS							core field							False			QuantityValue							JsonObj()		formation water salinity	
Biosample	nmdc:Biosample	hcr_geol_age	MIXS:0000993								hydrocarbon resource geological age	enumeration	1						"Geological age of hydrocarbon resource (Additional info: https://en.wikipedia.org/wiki/Period_(geology)). If ""other"" is specified, please propose entry in ""additional info"" field"		Silurian					core field							False			hcr_geol_age_enum							JsonObj()		hydrocarbon resource geological age	
Biosample	nmdc:Biosample	hcr_pressure	MIXS:0000395								hydrocarbon resource original pressure	measurement value range	1	atmosphere, kilopascal					Original pressure of the hydrocarbon resource							core field							False			TextValue						{float} - {float} {unit}	JsonObj()		hydrocarbon resource original pressure	
Biosample	nmdc:Biosample	hcr_temp	MIXS:0000393								hydrocarbon resource original temperature	measurement value range	1	degree Celsius					Original temperature of the hydrocarbon resource		150-295 degree Celsius					core field							False			TextValue						{float} - {float} {unit}	JsonObj()		hydrocarbon resource original temperature	
Biosample	nmdc:Biosample	heat_cool_type	MIXS:0000766								heating and cooling system type	enumeration	m						Methods of conditioning or heating a room or building		heat pump					core field							True			heat_cool_type_enum							JsonObj()		heating and cooling system type	
Biosample	nmdc:Biosample	heat_deliv_loc	MIXS:0000810								heating delivery locations	enumeration	1						The location of heat delivery within the room		north					core field							False			heat_deliv_loc_enum							JsonObj()		heating delivery locations	
Biosample	nmdc:Biosample	heat_sys_deliv_meth	MIXS:0000812								heating system delivery method	enumeration	1						The method by which the heat is delivered through the system		radiant					core field							False			string						[conductive|radiant]	JsonObj()		heating system delivery method	
Biosample	nmdc:Biosample	heat_system_id	MIXS:0000833								heating system identifier	unique identifier	1						The heating system identifier							core field							False			TextValue							JsonObj()		heating system identifier	
Biosample	nmdc:Biosample	heavy_metals	MIXS:0000652								extreme_unusual_properties/heavy metals	heavy metal name;measurement value unit	m	microgram per gram			For multiple heavy metals and concentrations, separate by ;		Heavy metals present in the sample and their concentrations.		mercury 0.09 micrograms per gram|mercury 0.09 ug/g; chromium 0.03 ug/g				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		heavy metals/ extreme unusual properties	Example & validation. Can we configure things so that 27% & 27 % & 0.27 will validate?|I think it's weird the way GSC writes the title. I recommend this change. Thoughts? I would argue this isn't an extreme unusual property. It's just a biogeochemical measurement.
Biosample	nmdc:Biosample	heavy_metals_meth	MIXS:0000343								extreme_unusual_properties/heavy metals method	PMID,DOI or url	1				Required when heavy metals are provided|If different methods are used for multiple metals, indicate the metal and method. Separate metals by ;		Reference or method used in determining heavy metals		https://doi.org/10.3390/ijms9040434|mercury https://doi.org/10.1007/BF01056090; chromium https://doi.org/10.1007/s00216-006-0322-8				True	core field							True			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		heavy metals method/ extreme unusual properties	
Biosample	nmdc:Biosample	height_carper_fiber	MIXS:0000167								height carpet fiber mat	value	1	centimeter					The average carpet fiber height in the indoor environment							core field							False			QuantityValue							JsonObj()		height carpet fiber mat	
Biosample	nmdc:Biosample	herbicide_regm	MIXS:0000561								herbicide regimen	herbicide name;herbicide amount;treatment interval and duration	m	gram, mole per liter, milligram per liter					Information about treatment involving use of herbicides; information about treatment involving use of growth hormones; should include the name of herbicide, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple regimens		atrazine;10 milligram per liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		herbicide regimen	
Biosample	nmdc:Biosample	horizon_meth	MIXS:0000321								soil horizon method	PMID,DOI or url	1						Reference or method used in determining the horizon							core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		soil horizon method	
Biosample	nmdc:Biosample	host_age	MIXS:0000255								host age	value	1	year, day, hour					Age of host at the time of sampling; relevant scale depends on species and study, e.g. Could be seconds for amoebae or centuries for trees		10 days					core field							False			QuantityValue							JsonObj()		host age	
Biosample	nmdc:Biosample	host_body_habitat	MIXS:0000866								host body habitat	free text	1						Original body habitat where the sample was obtained from		nasopharynx					core field							False			TextValue						{text}	JsonObj()		host body habitat	
Biosample	nmdc:Biosample	host_body_product	MIXS:0000888								host body product	FMA or UBERON	1						Substance produced by the body, e.g. Stool, mucus, where the sample was obtained from. For foundational model of anatomy ontology (fma) or Uber-anatomy ontology (UBERON) terms, please see https://www.ebi.ac.uk/ols/ontologies/fma or https://www.ebi.ac.uk/ols/ontologies/uberon		mucus [UBERON:0000912]					core field							False			ControlledTermValue						{termLabel} {[termID]}	JsonObj()		host body product	
Biosample	nmdc:Biosample	host_body_site	MIXS:0000867								host body site	FMA or UBERON	1						Name of body site where the sample was obtained from, such as a specific organ or tissue (tongue, lung etc...). For foundational model of anatomy ontology (fma) (v 4.11.0) or Uber-anatomy ontology (UBERON) (v releases/2014-06-15) terms, please see http://purl.bioontology.org/ontology/FMA or http://purl.bioontology.org/ontology/UBERON		gill [UBERON:0002535]					core field							False			ControlledTermValue						{termLabel} {[termID]}	JsonObj()		host body site	
Biosample	nmdc:Biosample	host_body_temp	MIXS:0000274								host body temperature	measurement value	1	degree Celsius					Core body temperature of the host when sample was collected		15 degree Celsius					core field							False			QuantityValue							JsonObj()		host body temperature	
Biosample	nmdc:Biosample	host_color	MIXS:0000260								host color	color	1						The color of host							core field							False			TextValue						{text}	JsonObj()		host color	
Biosample	nmdc:Biosample	host_common_name	MIXS:0000248								host common name	common name	1						Common name of the host.		human					core field							False			TextValue						{text}	JsonObj()		host common name	
Biosample	nmdc:Biosample	host_diet	MIXS:0000869								host diet	diet type	m						Type of diet depending on the host, for animals omnivore, herbivore etc., for humans high-fat, meditteranean etc.; can include multiple diet types		herbivore				True	core field							True			TextValue						{text}	JsonObj()		host diet	
Biosample	nmdc:Biosample	host_disease_stat	MIXS:0000031								host disease status	disease name or Disease Ontology term							List of diseases with which the host has been diagnosed; can include multiple diagnoses. The value of the field depends on host; for humans the terms should be chosen from the DO (Human Disease Ontology) at https://www.disease-ontology.org, non-human host diseases are free text		rabies [DOID:11260]					nucleic acid sequence source field							False			TextValue						{termLabel} {[termID]}|{text}	JsonObj()		host disease status	
Biosample	nmdc:Biosample	host_dry_mass	MIXS:0000257								host dry mass	measurement value	1	kilogram, gram					Measurement of dry mass		500 gram					core field							False			QuantityValue							JsonObj()		host dry mass	
Biosample	nmdc:Biosample	host_family_relation	MIXS:0000872								host family relationship	relationship type;arbitrary identifier	m						Familial relationships to other hosts in the same study; can include multiple relationships		offspring;Mussel25					core field							True			string						{text};{text}	JsonObj()		host family relationship	
Biosample	nmdc:Biosample	host_genotype	MIXS:0000365								host genotype	genotype	1						Observed genotype		C57BL/6					core field							False			TextValue						{text}	JsonObj()		host genotype	
Biosample	nmdc:Biosample	host_growth_cond	MIXS:0000871								host growth conditions	PMID,DOI,url or free text	1						Literature reference giving growth conditions of the host		https://academic.oup.com/icesjms/article/68/2/349/617247					core field							False			TextValue						{PMID}|{DOI}|{URL}|{text}	JsonObj()		host growth conditions	
Biosample	nmdc:Biosample	host_height	MIXS:0000264								host height	measurement value	1	centimeter, millimeter, meter					The height of subject		0.1 meter					core field							False			QuantityValue							JsonObj()		host height	
Biosample	nmdc:Biosample	host_last_meal	MIXS:0000870								host last meal	content;duration	m						Content of last meal and time since feeding; can include multiple values		corn feed;P2H				True	core field							True			TextValue						{text};{duration}	JsonObj()		host last meal	
Biosample	nmdc:Biosample	host_length	MIXS:0000256								host length	measurement value	1	centimeter, millimeter, meter					The length of subject		1 meter					core field							False			QuantityValue							JsonObj()		host length	
Biosample	nmdc:Biosample	host_life_stage	MIXS:0000251								host life stage	stage	1						Description of life stage of host		adult					core field							False			TextValue						{text}	JsonObj()		host life stage	
Biosample	nmdc:Biosample	host_name																																		string							JsonObj()			
Biosample	nmdc:Biosample	host_phenotype	MIXS:0000874								host phenotype	PATO or HP	1						Phenotype of human or other host. For phenotypic quality ontology (pato) (v 2018-03-27) terms, please see http://purl.bioontology.org/ontology/pato. For Human Phenotype Ontology (HP) (v 2018-06-13) please see http://purl.bioontology.org/ontology/HP		elongated [PATO:0001154]					core field							False			ControlledTermValue						{termLabel} {[termID]}	JsonObj()		host phenotype	
Biosample	nmdc:Biosample	host_sex	MIXS:0000811								host sex	enumeration	1						Gender or physical sex of the host.		non-binary					core field							False			host_sex_enum							JsonObj()		host sex	
Biosample	nmdc:Biosample	host_shape	MIXS:0000261								host shape	shape	1						Morphological shape of host		round					core field							False			TextValue						{text}	JsonObj()		host shape	
Biosample	nmdc:Biosample	host_subject_id	MIXS:0000861								host subject id	unique identifier	1						A unique identifier by which each subject can be referred to, de-identified.		MPI123					core field							False			TextValue						{text}	JsonObj()		host subject id	
Biosample	nmdc:Biosample	host_subspecf_genlin	MIXS:0001318								host subspecific genetic lineage	Genetic lineage below lowest rank of NCBI taxonomy, which is subspecies, e.g. serovar, biotype, ecotype, variety, cultivar.	m						Information about the genetic distinctness of the host organism below the subspecies level e.g., serovar, serotype, biotype, ecotype, variety, cultivar, or any relevant genetic typing schemes like Group I plasmid. Subspecies should not be recorded in this term, but in the NCBI taxonomy. Supply both the lineage name and the lineage rank separated by a colon, e.g., biovar:abc123.		serovar:Newport, variety:glabrum, cultivar: Red Delicious					core field							True			string						{rank name}:{text}	JsonObj()		host subspecific genetic lineage	
Biosample	nmdc:Biosample	host_substrate	MIXS:0000252								host substrate	substrate name	1						The growth substrate of the host.		rock					core field							False			TextValue						{text}	JsonObj()		host substrate	
Biosample	nmdc:Biosample	host_symbiont	MIXS:0001298								observed host symbionts	species name or common name	m						The taxonomic name of the organism(s) found living in mutualistic, commensalistic, or parasitic symbiosis with the specific host.		flukeworms					core field							True			string						{text}	JsonObj()		observed host symbionts	
Biosample	nmdc:Biosample	host_taxid	MIXS:0000250								host taxid	NCBI taxon identifier	1				Homo sapiens [NCBITaxon:9606] would be a reasonable has_raw_value		NCBI taxon id of the host, e.g. 9606							core field							False			ControlledIdentifiedTermValue							JsonObj()		host taxid	
Biosample	nmdc:Biosample	host_tot_mass	MIXS:0000263								host total mass	measurement value	1	kilogram, gram					Total mass of the host at collection, the unit depends on host		2500 gram					core field							False			QuantityValue							JsonObj()		host total mass	
Biosample	nmdc:Biosample	host_wet_mass	MIXS:0000567								host wet mass	measurement value	1	kilogram, gram					Measurement of wet mass		1500 gram					core field							False			QuantityValue							JsonObj()		host wet mass	
Biosample	nmdc:Biosample	humidity	MIXS:0000100								humidity	measurement value	1	gram per cubic meter					Amount of water vapour in the air, at the time of sampling		25 gram per cubic meter					core field							False			QuantityValue							JsonObj()		humidity	
Biosample	nmdc:Biosample	humidity_regm	MIXS:0000568								humidity regimen	humidity value;treatment interval and duration	m	gram per cubic meter					Information about treatment involving an exposure to varying degree of humidity; information about treatment involving use of growth hormones; should include amount of humidity administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple regimens		25 gram per cubic meter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		humidity regimen	
Biosample	nmdc:Biosample	id																	An NMDC assigned unique identifier for a biosample submitted to NMDC.		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):bsm-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:bsm-{id_shoulder}-{id_blade}$		
Biosample	nmdc:Biosample	igsn_biosample_identifiers																	A list of identifiers for the biosample from the IGSN database.							biosample_identifiers						igsn_identifiers	True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	external_identifier							JsonObj()		IGSN Biosample Identifiers	
Biosample	nmdc:Biosample	img_identifiers																	A list of identifiers that relate the biosample to records in the IMG database.							external_database_identifiers							True		^img\.taxon:[a-zA-Z0-9_][a-zA-Z0-9_\/\.]*$	external_identifier							JsonObj()		IMG Identifiers	add is_a or mixin modeling, like other external_database_identifiers|what class would IMG records belong to?! Are they Studies, Biosamples, or something else?
Biosample	nmdc:Biosample	indoor_space	MIXS:0000763								indoor space	enumeration	1						A distinguishable space within a structure, the purpose for which discrete areas of a building is used		foyer					core field							False			indoor_space_enum							JsonObj()		indoor space	
Biosample	nmdc:Biosample	indoor_surf	MIXS:0000764								indoor surface	enumeration	1						Type of indoor surface		wall					core field							False			indoor_surf_enum							JsonObj()		indoor surface	
Biosample	nmdc:Biosample	indust_eff_percent	MIXS:0000662								industrial effluent percent	measurement value	1	percentage					Percentage of industrial effluents received by wastewater treatment plant							core field							False			QuantityValue							JsonObj()		industrial effluent percent	
Biosample	nmdc:Biosample	infiltrations									infiltration_1|infiltration_2								The amount of time it takes to complete each infiltration activity		['00:01:32', '00:00:53']						True						True		^(?:[0-9]|[1-9][0-9]|9[0-9]|0[0-9]|0[0-5][0-9]):[0-5][0-9]:[0-5][0-9]$	string				https://www.protocols.io/view/field-sampling-protocol-kqdg3962pg25/v1			JsonObj()			
Biosample	nmdc:Biosample	inorg_particles	MIXS:0000664								inorganic particles	inorganic particle name;measurement value	m	mole per liter, milligram per liter					Concentration of particles such as sand, grit, metal particles, ceramics, etc.; can include multiple particles						True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		inorganic particles	
Biosample	nmdc:Biosample	insdc_biosample_identifiers									EBI biosample identifiers|NCBI biosample identifiers|DDBJ biosample identifiers								identifiers for corresponding sample in INSDC		https://bioregistry.io/biosample:SAMEA5989477|https://bioregistry.io/biosample:SAMD00212331					biosample_identifiers						insdc_identifiers	True		^biosample:SAM[NED]([A-Z])?[0-9]+$	external_identifier				https://github.com/bioregistry/bioregistry/issues/108|https://www.ebi.ac.uk/biosamples/|https://www.ncbi.nlm.nih.gov/biosample|https://www.ddbj.nig.ac.jp/biosample/index-e.html			JsonObj()			
Biosample	nmdc:Biosample	inside_lux	MIXS:0000168								inside lux light	measurement value	1	kilowatt per square metre					The recorded value at sampling time (power density)							core field							False			QuantityValue							JsonObj()		inside lux light	
Biosample	nmdc:Biosample	int_wall_cond	MIXS:0000813								interior wall condition	enumeration	1						The physical condition of the wall at the time of sampling; photos or video preferred; use drawings to indicate location of damaged areas		damaged					core field							False			int_wall_cond_enum							JsonObj()		interior wall condition	
Biosample	nmdc:Biosample	investigation field							True	investigation_field									field describing aspect of the investigation/study to which the sample belongs																	string							JsonObj()			
Biosample	nmdc:Biosample	isotope_exposure															This is required when your experimental design includes the use of isotopically labeled compounds		List isotope exposure or addition applied to your sample.		13C glucose|18O water															string	16.0	True		MIXS:0000751	MIxS Inspired		JsonObj()		isotope exposure/addition	Can we make the H218O correctly super and subscripted?
Biosample	nmdc:Biosample	iw_bt_date_well	MIXS:0001010								injection water breakthrough date of specific well	timestamp	1						Injection water breakthrough date per well following a secondary and/or tertiary recovery		2018-05-11					core field							False			TimestampValue							JsonObj()		injection water breakthrough date of specific well	
Biosample	nmdc:Biosample	iwf	MIXS:0000455								injection water fraction	measurement value	1	percent					Proportion of the produced fluids derived from injected water at the time of sampling. (e.g. 87%)							core field							False			QuantityValue							JsonObj()		injection water fraction	
Biosample	nmdc:Biosample	last_clean	MIXS:0000814								last time swept/mopped/vacuumed	timestamp	1						The last time the floor was cleaned (swept, mopped, vacuumed)		2018-05-11:T14:30Z					core field							False			TimestampValue							JsonObj()		last time swept/mopped/vacuumed	
Biosample	nmdc:Biosample	lat_lon	MIXS:0000009								geographic location (latitude and longitude)	decimal degrees,  limit to 8 decimal points							The geographical origin of the sample as defined by latitude and longitude. The values should be reported in decimal degrees and in WGS84 system		50.586825 6.408977					environment field							False	This is currently a required field but it's not clear if this should be required for human hosts		GeolocationValue						{float} {float}	JsonObj()		geographic location (latitude and longitude)	
Biosample	nmdc:Biosample	lbc_thirty									lbc_thirty|lbc30|lime buffer capacity (at 30 minutes)	measurement value	1	ppm CaCO3/pH			This is the mass of lime, in mg, needed to raise the pH of one kg of soil by one pH unit		lime buffer capacity, determined after 30 minute incubation		543 mg/kg															QuantityValue				https://www.ornl.gov/content/bio-scales-0|https://secure.caes.uga.edu/extension/publications/files/pdf/C%20874_5.PDF			JsonObj()		lime buffer capacity (at 30 minutes)	
Biosample	nmdc:Biosample	lbceq									lbceq|lime buffer capacity (at 5-day equilibrium)	measurement value	1	ppm CaCO3/pH			This is the mass of lime, in mg, needed to raise the pH of one kg of soil by one pH unit		lime buffer capacity, determined at equilibrium after 5 day incubation		1575 mg/kg															QuantityValue				https://www.ornl.gov/content/bio-scales-0			JsonObj()		lime buffer capacity (after 5 day incubation)	
Biosample	nmdc:Biosample	light_intensity	MIXS:0000706								light intensity	measurement value	1	lux					Measurement of light intensity		0.3 lux					core field							False			QuantityValue							JsonObj()		light intensity	
Biosample	nmdc:Biosample	light_regm	MIXS:0000569								light regimen	exposure type;light intensity;light quality	1	lux; micrometer, nanometer, angstrom					Information about treatment(s) involving exposure to light, including both light intensity and quality.		incandescant light;10 lux;450 nanometer					core field							False			TextValue						{text};{float} {unit};{float} {unit}	JsonObj()		light regimen	
Biosample	nmdc:Biosample	light_type	MIXS:0000769								light type	enumeration	m						Application of light to achieve some practical or aesthetic effect. Lighting includes the use of both artificial light sources such as lamps and light fixtures, as well as natural illumination by capturing daylight. Can also include absence of light		desk lamp					core field							True			light_type_enum							JsonObj()		light type	
Biosample	nmdc:Biosample	link_addit_analys	MIXS:0000340								links to additional analysis	PMID,DOI or url	1						Link to additional analysis results performed on the sample							core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		links to additional analysis	
Biosample	nmdc:Biosample	link_class_info	MIXS:0000329								link to classification information	PMID,DOI or url	1						Link to digitized soil maps or other soil classification information							core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		link to classification information	
Biosample	nmdc:Biosample	link_climate_info	MIXS:0000328								link to climate information	PMID,DOI or url	1						Link to climate resource							core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		link to climate information	
Biosample	nmdc:Biosample	lithology	MIXS:0000990								lithology	enumeration	1						"Hydrocarbon resource main lithology (Additional information: http://petrowiki.org/Lithology_and_rock_type_determination). If ""other"" is specified, please propose entry in ""additional info"" field"		Volcanic					core field							False			lithology_enum							JsonObj()		lithology	
Biosample	nmdc:Biosample	local_class	MIXS:0000330								soil_taxonomic/local classification	local classification name	1						Soil classification based on local soil classification system							core field							False			TextValue						{text}	JsonObj()		soil_taxonomic/local classification	
Biosample	nmdc:Biosample	local_class_meth	MIXS:0000331								soil_taxonomic/local classification method	PMID,DOI or url	1						Reference or method used in determining the local soil classification							core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		soil_taxonomic/local classification method	
Biosample	nmdc:Biosample	location																																		string							JsonObj()			
Biosample	nmdc:Biosample	magnesium	MIXS:0000431								magnesium	measurement value	1	mole per liter, milligram per liter, parts per million, micromole per kilogram					Concentration of magnesium in the sample		52.8 micromole per kilogram					core field							False			QuantityValue							JsonObj()		magnesium	
Biosample	nmdc:Biosample	manganese									manganese	measurement value	1	mg/kg (ppm)					Concentration of manganese in the sample		24.7 mg/kg															QuantityValue				https://www.ornl.gov/content/bio-scales-0			JsonObj()		manganese	
Biosample	nmdc:Biosample	max_occup	MIXS:0000229								maximum occupancy	measurement value	1						The maximum amount of people allowed in the indoor environment							core field							False			QuantityValue							JsonObj()		maximum occupancy	
Biosample	nmdc:Biosample	mean_frict_vel	MIXS:0000498								mean friction velocity	measurement value	1	meter per second					Measurement of mean friction velocity		0.5 meter per second					core field							False			QuantityValue							JsonObj()		mean friction velocity	
Biosample	nmdc:Biosample	mean_peak_frict_vel	MIXS:0000502								mean peak friction velocity	measurement value	1	meter per second					Measurement of mean peak friction velocity		1 meter per second					core field							False			QuantityValue							JsonObj()		mean peak friction velocity	
Biosample	nmdc:Biosample	mech_struc	MIXS:0000815								mechanical structure	enumeration	1						mechanical structure: a moving structure		elevator					core field							False			mech_struc_enum							JsonObj()		mechanical structure	
Biosample	nmdc:Biosample	mechanical_damage	MIXS:0001052								mechanical damage	damage type;body site	m						Information about any mechanical damage exerted on the plant; can include multiple damages and sites		pruning;bark				True	core field							True			TextValue						{text};{text}	JsonObj()		mechanical damage	
Biosample	nmdc:Biosample	methane	MIXS:0000101								methane	measurement value	1	micromole per liter, parts per billion, parts per million					Methane (gas) amount or concentration at the time of sampling		1800 parts per billion					core field							False			QuantityValue							JsonObj()		methane	
Biosample	nmdc:Biosample	micro_biomass_c_meth															"required if ""microbial_biomass_c"" is provided"		Reference or method used in determining microbial biomass carbon		https://doi.org/10.1016/0038-0717(87)90052-6|https://doi.org/10.1016/0038-0717(87)90052-6 | https://www.sciencedirect.com/science/article/abs/pii/0038071787900526															string	11.0	True		MIXS:0000339	MIxS Inspired	{PMID}|{DOI}|{URL}	JsonObj()		microbial biomass carbon method	How should we separate values? | or ;? lets be consistent
Biosample	nmdc:Biosample	micro_biomass_meth	MIXS:0000339								microbial biomass method	PMID,DOI or url	1						Reference or method used in determining microbial biomass							core field							False			string						{PMID}|{DOI}|{URL}	JsonObj()		microbial biomass method	
Biosample	nmdc:Biosample	micro_biomass_n_meth															"required if ""microbial_biomass_n"" is provided"		Reference or method used in determining microbial biomass nitrogen		https://doi.org/10.1016/0038-0717(87)90052-6|https://doi.org/10.1016/0038-0717(87)90052-6 | https://www.sciencedirect.com/science/article/abs/pii/0038071787900526															string	13.0			MIXS:0000339	MIxS Inspired	{PMID}|{DOI}|{URL}	JsonObj()		microbial biomass nitrogen method	
Biosample	nmdc:Biosample	microbial_biomass	MIXS:0000650								microbial biomass	measurement value	1	ton, kilogram, gram per kilogram soil					The part of the organic matter in the soil that constitutes living microorganisms smaller than 5-10 micrometer. If you keep this, you would need to have correction factors used for conversion to the final units							core field							False			QuantityValue							JsonObj()		microbial biomass	
Biosample	nmdc:Biosample	microbial_biomass_c															If you provide this, correction factors used for conversion to the final units and method are required		The part of the organic matter in the soil that constitutes living microorganisms smaller than 5-10 micrometer.		0.05 ug C/g dry soil															string	10.0			MIXS:0000650	MIxS Inspired	{float} {unit}	JsonObj()		microbial biomass carbon	
Biosample	nmdc:Biosample	microbial_biomass_n															If you provide this, correction factors used for conversion to the final units and method are required		The part of the organic matter in the soil that constitutes living microorganisms smaller than 5-10 micrometer.		0.05 ug N/g dry soil															string	12.0			MIXS:0000650	MIxS Inspired	{float} {unit}	JsonObj()		microbial biomass nitrogen	
Biosample	nmdc:Biosample	mineral_nutr_regm	MIXS:0000570								mineral nutrient regimen	mineral nutrient name;mineral nutrient amount;treatment interval and duration	m	gram, mole per liter, milligram per liter					Information about treatment involving the use of mineral supplements; should include the name of mineral nutrient, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple mineral nutrient regimens		potassium;15 gram;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		mineral nutrient regimen	
Biosample	nmdc:Biosample	misc_param	MIXS:0000752								miscellaneous parameter	parameter name;measurement value	m						Any other measurement performed or parameter collected, that is not listed here		Bicarbonate ion concentration;2075 micromole per kilogram				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		miscellaneous parameter	
Biosample	nmdc:Biosample	mod_date																	The last date on which the database information was modified.																	string							JsonObj()			
Biosample	nmdc:Biosample	n_alkanes	MIXS:0000503								n-alkanes	n-alkane name;measurement value	m	micromole per liter					Concentration of n-alkanes; can include multiple n-alkanes		n-hexadecane;100 milligram per liter				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		n-alkanes	
Biosample	nmdc:Biosample	name																	A human readable label for an entity																	string							JsonObj()			
Biosample	nmdc:Biosample	ncbi_taxonomy_name																																		string							JsonObj()			
Biosample	nmdc:Biosample	neon_biosample_identifiers																								biosample_identifiers						neon_identifiers	True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	external_identifier							JsonObj()			
Biosample	nmdc:Biosample	nitrate	MIXS:0000425								nitrate	measurement value	1	micromole per liter, milligram per liter, parts per million					Concentration of nitrate in the sample		65 micromole per liter					core field							False			QuantityValue							JsonObj()		nitrate	
Biosample	nmdc:Biosample	nitrate_nitrogen									nitrate_nitrogen|NO3-N	measurement value	1	mg/kg			often below some specified limit of detection		Concentration of nitrate nitrogen in the sample		0.29 mg/kg															QuantityValue				https://www.ornl.gov/content/bio-scales-0			JsonObj()		nitrate_nitrogen	
Biosample	nmdc:Biosample	nitrite	MIXS:0000426								nitrite	measurement value	1	micromole per liter, milligram per liter, parts per million					Concentration of nitrite in the sample		0.5 micromole per liter					core field							False			QuantityValue							JsonObj()		nitrite	
Biosample	nmdc:Biosample	nitrite_nitrogen									nitrite_nitrogen|NO2-N	measurement value	1	mg/kg					Concentration of nitrite nitrogen in the sample		1.2 mg/kg															QuantityValue				https://www.ornl.gov/content/bio-scales-0			JsonObj()		nitrite_nitrogen	
Biosample	nmdc:Biosample	nitro	MIXS:0000504								nitrogen	measurement value	1	micromole per liter					Concentration of nitrogen (total)		4.2 micromole per liter					core field							False			QuantityValue							JsonObj()		nitrogen	
Biosample	nmdc:Biosample	non_microb_biomass																	Amount of biomass; should include the name for the part of biomass measured, e.g.insect, plant, total. Can include multiple measurements separated by ;		insect 0.23 ug; plant 1g															string	8.0			MIXS:0000174|MIXS:0000650	MIxS Inspired	{text};{float} {unit}	JsonObj()		non-microbial biomass	
Biosample	nmdc:Biosample	non_microb_biomass_method															"required if ""non-microbial biomass"" is provided"		Reference or method used in determining biomass		https://doi.org/10.1038/s41467-021-26181-3															string	9.0			MIXS:0000650	MIxS Inspired	{PMID}|{DOI}|{URL}	JsonObj()		non-microbial biomass method	
Biosample	nmdc:Biosample	non_min_nutr_regm	MIXS:0000571								non-mineral nutrient regimen	non-mineral nutrient name;non-mineral nutrient amount;treatment interval and duration	m	gram, mole per liter, milligram per liter					Information about treatment involving the exposure of plant to non-mineral nutrient such as oxygen, hydrogen or carbon; should include the name of non-mineral nutrient, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple non-mineral nutrient regimens		carbon dioxide;10 mole per liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M					core field							True			string						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		non-mineral nutrient regimen	
Biosample	nmdc:Biosample	nucleic acid sequence source field							True	nucleic_acid_sequence_source_field																										string							JsonObj()			
Biosample	nmdc:Biosample	number_pets	MIXS:0000231								number of pets	measurement value	1						The number of pets residing in the sampled space							core field							False			QuantityValue							JsonObj()		number of pets	
Biosample	nmdc:Biosample	number_plants	MIXS:0000230								number of houseplants	measurement value	1						The number of plant(s) in the sampling space							core field							False			QuantityValue							JsonObj()		number of houseplants	
Biosample	nmdc:Biosample	number_resident	MIXS:0000232								number of residents	measurement value	1						The number of individuals currently occupying in the sampling location							core field							False			QuantityValue							JsonObj()		number of residents	
Biosample	nmdc:Biosample	occup_density_samp	MIXS:0000217								occupant density at sampling	measurement value	1						Average number of occupants at time of sampling per square footage							core field							False			QuantityValue							JsonObj()		occupant density at sampling	
Biosample	nmdc:Biosample	occup_document	MIXS:0000816								occupancy documentation	enumeration	1						The type of documentation of occupancy		estimate					core field							False			occup_document_enum							JsonObj()		occupancy documentation	
Biosample	nmdc:Biosample	occup_samp	MIXS:0000772								occupancy at sampling	measurement value	1						Number of occupants present at time of sample within the given space		10					core field							False			QuantityValue							JsonObj()		occupancy at sampling	
Biosample	nmdc:Biosample	org_carb	MIXS:0000508								organic carbon	measurement value	1	micromole per liter					Concentration of organic carbon		1.5 microgram per liter					core field							False			QuantityValue							JsonObj()		organic carbon	
Biosample	nmdc:Biosample	org_count_qpcr_info	MIXS:0000099								organism count qPCR information	gene name;FWD:forward primer sequence;REV:reverse primer sequence;initial denaturation:degrees_minutes;denaturation:degrees_minutes;annealing:degrees_minutes;elongation:degrees_minutes;final elongation:degrees_minutes; total cycles	1	number of cells per gram (or ml or cm^2)					If qpcr was used for the cell count, the target gene name, the primer sequence and the cycling conditions should also be provided. (Example: 16S rrna; FWD:ACGTAGCTATGACGT REV:GTGCTAGTCGAGTAC; initial denaturation:90C_5min; denaturation:90C_2min; annealing:52C_30 sec; elongation:72C_30 sec; 90 C for 1 min; final elongation:72C_5min; 30 cycles)							core field							False			string						{text};FWD:{dna};REV:{dna};initial denaturation:degrees_minutes;denaturation:degrees_minutes;annealing:degrees_minutes;elongation:degrees_minutes;final elongation:degrees_minutes; total cycles	JsonObj()		organism count qPCR information	
Biosample	nmdc:Biosample	org_matter	MIXS:0000204								organic matter	measurement value	1	microgram per liter					Concentration of organic matter		1.75 milligram per cubic meter					core field							False			QuantityValue							JsonObj()		organic matter	
Biosample	nmdc:Biosample	org_nitro	MIXS:0000205								organic nitrogen	measurement value	1	microgram per liter					Concentration of organic nitrogen		4 micromole per liter					core field							False			QuantityValue							JsonObj()		organic nitrogen	
Biosample	nmdc:Biosample	org_nitro_method															"required if ""org_nitro"" is provided"		Method used for obtaining organic nitrogen		https://doi.org/10.1016/0038-0717(85)90144-0															string	14.0			MIXS:0000338|MIXS:0000205	MIxS Inspired	{PMID}|{DOI}|{URL}	JsonObj()		organic nitrogen method	
Biosample	nmdc:Biosample	org_particles	MIXS:0000665								organic particles	particle name;measurement value	m	gram per liter					Concentration of particles such as faeces, hairs, food, vomit, paper fibers, plant material, humus, etc.						True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		organic particles	
Biosample	nmdc:Biosample	organism_count	MIXS:0000103								organism count	organism name;measurement value;enumeration	m	number of cells per cubic meter, number of cells per milliliter, number of cells per cubic centimeter					Total cell count of any organism (or group of organisms) per gram, volume or area of sample, should include name of organism followed by count. The method that was used for the enumeration (e.g. qPCR, atp, mpn, etc.) Should also be provided. (example: total prokaryotes; 3.5e7 cells per ml; qpcr)		total prokaryotes;3.5e7 cells per milliliter;qPCR				True	core field							True			QuantityValue							JsonObj()		organism count	
Biosample	nmdc:Biosample	other_treatment															This is an open text field to provide any treatments that cannot be captured in the provided slots.		Other treatments applied to your samples that are not applicable to the provided fields															Values entered here will be used to determine potential new slots.		string	15.0	True		MIXS:0000300	MIxS Inspired	{text}	JsonObj()		other treatments	
Biosample	nmdc:Biosample	owc_tvdss	MIXS:0000405								oil water contact depth	measurement value	1	meter					Depth of the original oil water contact (OWC) zone (average) (m TVDSS)							core field							False			QuantityValue							JsonObj()		oil water contact depth	
Biosample	nmdc:Biosample	oxy_stat_samp	MIXS:0000753								oxygenation status of sample	enumeration	1						Oxygenation status of sample		aerobic					core field							False			oxy_stat_samp_enum							JsonObj()		oxygenation status of sample	
Biosample	nmdc:Biosample	oxygen	MIXS:0000104								oxygen	measurement value	1	milligram per liter, parts per million					Oxygen (gas) amount or concentration at the time of sampling		600 parts per million					core field							False			QuantityValue							JsonObj()		oxygen	
Biosample	nmdc:Biosample	part_org_carb	MIXS:0000515								particulate organic carbon	measurement value	1	microgram per liter					Concentration of particulate organic carbon		1.92 micromole per liter					core field							False			QuantityValue							JsonObj()		particulate organic carbon	
Biosample	nmdc:Biosample	part_org_nitro	MIXS:0000719								particulate organic nitrogen	measurement value	1	microgram per liter, micromole per liter					Concentration of particulate organic nitrogen		0.3 micromole per liter					core field							False			QuantityValue							JsonObj()		particulate organic nitrogen	
Biosample	nmdc:Biosample	particle_class	MIXS:0000206								particle classification	particle name;measurement value	m	micrometer					Particles are classified, based on their size, into six general categories:clay, silt, sand, gravel, cobbles, and boulders; should include amount of particle preceded by the name of the particle type; can include multiple values						True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		particle classification	
Biosample	nmdc:Biosample	permeability	MIXS:0000404								permeability	measurement value range	1	mD					Measure of the ability of a hydrocarbon resource to allow fluids to pass through it. (Additional information: https://en.wikipedia.org/wiki/Permeability_(earth_sciences))							core field							False			TextValue						{integer} - {integer} {unit}	JsonObj()		permeability	
Biosample	nmdc:Biosample	perturbation	MIXS:0000754								perturbation	perturbation type name;perturbation interval and duration	m						Type of perturbation, e.g. chemical administration, physical disturbance, etc., coupled with perturbation regimen including how many times the perturbation was repeated, how long each perturbation lasted, and the start and end time of the entire perturbation period; can include multiple perturbation types		antibiotic addition;R2/2018-05-11T14:30Z/2018-05-11T19:30Z/P1H30M				True	core field							True			TextValue						{text};{Rn/start_time/end_time/duration}	JsonObj()		perturbation	
Biosample	nmdc:Biosample	pesticide_regm	MIXS:0000573								pesticide regimen	pesticide name;pesticide amount;treatment interval and duration	m	gram, mole per liter, milligram per liter					Information about treatment involving use of insecticides; should include the name of pesticide, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple pesticide regimens		pyrethrum;0.6 milligram per liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		pesticide regimen	
Biosample	nmdc:Biosample	petroleum_hydrocarb	MIXS:0000516								petroleum hydrocarbon	measurement value	1	micromole per liter					Concentration of petroleum hydrocarbon		0.05 micromole per liter					core field							False			QuantityValue							JsonObj()		petroleum hydrocarbon	
Biosample	nmdc:Biosample	ph	MIXS:0001001								pH	measurement value	1						Ph measurement of the sample, or liquid portion of sample, or aqueous phase of the fluid		7.2					core field							False			double							JsonObj()		pH	
Biosample	nmdc:Biosample	ph_meth	MIXS:0001106								pH method	PMID,DOI or url	1				This can include a link to the instrument used or a citation for the method.		Reference or method used in determining ph		https://www.southernlabware.com/pc9500-benchtop-ph-conductivity-meter-kit-ph-accuracy-2000mv-ph-range-2-000-to-20-000.html?gclid=Cj0KCQiAwJWdBhCYARIsAJc4idCO5vtvbVMf545fcvdROFqa6zjzNSoywNx6K4k9Coo9cCc2pybtvGsaAiR0EALw_wcB|https://doi.org/10.2136/sssabookser5.3.c16					core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		pH method	
Biosample	nmdc:Biosample	ph_regm	MIXS:0001056								pH regimen	measurement value;treatment interval and duration	m						Information about treatment involving exposure of plants to varying levels of ph of the growth media, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple regimen		7.6;R2/2018-05-11:T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{float};{Rn/start_time/end_time/duration}	JsonObj()		pH regimen	
Biosample	nmdc:Biosample	phaeopigments	MIXS:0000180								phaeopigments	phaeopigment name;measurement value	m	milligram per cubic meter					Concentration of phaeopigments; can include multiple phaeopigments		2.5 milligram per cubic meter				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		phaeopigments	
Biosample	nmdc:Biosample	phosphate	MIXS:0000505								phosphate	measurement value	1	micromole per liter					Concentration of phosphate		0.7 micromole per liter					core field							False			QuantityValue							JsonObj()		phosphate	
Biosample	nmdc:Biosample	phosplipid_fatt_acid	MIXS:0000181								phospholipid fatty acid	phospholipid fatty acid name;measurement value	m	mole per gram, mole per liter					Concentration of phospholipid fatty acids; can include multiple values		2.98 milligram per liter				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		phospholipid fatty acid	
Biosample	nmdc:Biosample	photon_flux	MIXS:0000725								photon flux	measurement value	1	number of photons per second per unit area					Measurement of photon flux		3.926 micromole photons per second per square meter					core field							False			QuantityValue							JsonObj()		photon flux	
Biosample	nmdc:Biosample	plant_growth_med	MIXS:0001057								plant growth medium	EO or enumeration	1						Specification of the media for growing the plants or tissue cultured samples, e.g. soil, aeroponic, hydroponic, in vitro solid culture medium, in vitro liquid culture medium. Recommended value is a specific value from EO:plant growth medium (follow this link for terms http://purl.obolibrary.org/obo/EO_0007147) or other controlled vocabulary		hydroponic plant culture media [EO:0007067]					core field							False			ControlledTermValue							JsonObj()		plant growth medium	
Biosample	nmdc:Biosample	plant_product	MIXS:0001058								plant product	product name	1						Substance produced by the plant, where the sample was obtained from		xylem sap [PO:0025539]					core field							False			TextValue						{text}	JsonObj()		plant product	
Biosample	nmdc:Biosample	plant_sex	MIXS:0001059								plant sex	enumeration	1						Sex of the reproductive parts on the whole plant, e.g. pistillate, staminate, monoecieous, hermaphrodite.		Hermaphroditic					core field							False			plant_sex_enum							JsonObj()		plant sex	
Biosample	nmdc:Biosample	plant_struc	MIXS:0001060								plant structure	PO	1						Name of plant structure the sample was obtained from; for Plant Ontology (PO) (v releases/2017-12-14) terms, see http://purl.bioontology.org/ontology/PO, e.g. petiole epidermis (PO_0000051). If an individual flower is sampled, the sex of it can be recorded here.		epidermis [PO:0005679]					core field							False			ControlledTermValue						{termLabel} {[termID]}	JsonObj()		plant structure	
Biosample	nmdc:Biosample	pollutants	MIXS:0000107								pollutants	pollutant name;measurement value	m	gram, mole per liter, milligram per liter, microgram per cubic meter					Pollutant types and, amount or concentrations measured at the time of sampling; can report multiple pollutants by entering numeric values preceded by name of pollutant		lead;0.15 microgram per cubic meter				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		pollutants	
Biosample	nmdc:Biosample	porosity	MIXS:0000211								porosity	measurement value or range	1	percentage					Porosity of deposited sediment is volume of voids divided by the total volume of sample							core field							False			TextValue						{float} - {float} {unit}	JsonObj()		porosity	
Biosample	nmdc:Biosample	potassium	MIXS:0000430								potassium	measurement value	1	milligram per liter, parts per million					Concentration of potassium in the sample		463 milligram per liter					core field							False			QuantityValue							JsonObj()		potassium	
Biosample	nmdc:Biosample	pour_point	MIXS:0000127								pour point	measurement value	1	degree Celsius					Temperature at which a liquid becomes semi solid and loses its flow characteristics. In crude oil a high¬†pour point¬†is generally associated with a high paraffin content, typically found in crude deriving from a larger proportion of plant material. (soure: https://en.wikipedia.org/wiki/pour_point)							core field							False			QuantityValue							JsonObj()		pour point	
Biosample	nmdc:Biosample	pre_treatment	MIXS:0000348								pre-treatment	pre-treatment type	1						The process of pre-treatment removes materials that can be easily collected from the raw wastewater							core field							False			TextValue						{text}	JsonObj()		pre-treatment	
Biosample	nmdc:Biosample	pres_animal_insect	MIXS:0000819								presence of pets, animals, or insects	enumeration;count	1						The type and number of animals or insects present in the sampling space.		cat;5					core field							False		^(cat|dog|rodent|snake|other);\d+$	string							JsonObj()		presence of pets, animals, or insects	
Biosample	nmdc:Biosample	pressure	MIXS:0000412								pressure	measurement value	1	atmosphere					Pressure to which the sample is subject to, in atmospheres		50 atmosphere					core field							False			QuantityValue							JsonObj()		pressure	
Biosample	nmdc:Biosample	prev_land_use_meth	MIXS:0000316								history/previous land use method	PMID,DOI or url	1						Reference or method used in determining previous land use and dates							core field							False			string						{PMID}|{DOI}|{URL}	JsonObj()		history/previous land use method	
Biosample	nmdc:Biosample	previous_land_use	MIXS:0000315								history/previous land use	land use name;date	1						Previous land use and dates							core field							False			TextValue						{text};{timestamp}	JsonObj()		history/previous land use	
Biosample	nmdc:Biosample	primary_prod	MIXS:0000728								primary production	measurement value	1	milligram per cubic meter per day, gram per square meter per day					Measurement of primary production, generally measured as isotope uptake		100 milligram per cubic meter per day					core field							False			QuantityValue							JsonObj()		primary production	
Biosample	nmdc:Biosample	primary_treatment	MIXS:0000349								primary treatment	primary treatment type	1						The process to produce both a generally homogeneous liquid capable of being treated biologically and a sludge that can be separately treated or processed							core field							False			TextValue						{text}	JsonObj()		primary treatment	
Biosample	nmdc:Biosample	prod_rate	MIXS:0000452								production rate	measurement value	1	cubic meter per day					Oil and/or gas production rates per well (e.g. 524 m3 / day)							core field							False			QuantityValue							JsonObj()		production rate	
Biosample	nmdc:Biosample	prod_start_date	MIXS:0001008								production start date	timestamp	1						Date of field's first production		2018-05-11					core field							False			TimestampValue							JsonObj()		production start date	
Biosample	nmdc:Biosample	profile_position	MIXS:0001084								profile position	enumeration	1						Cross-sectional position in the hillslope where sample was collected.sample area position in relation to surrounding areas		summit					core field							False			profile_position_enum							JsonObj()		profile position	
Biosample	nmdc:Biosample	project_id																	Proposal IDs or names associated with dataset																	string	1.0	True			EMSL	{text}	JsonObj()		project ID	
Biosample	nmdc:Biosample	proport_woa_temperature																																		string							JsonObj()			
Biosample	nmdc:Biosample	proposal_dna															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				504000															string	19.0	True			JGI-Metagenomics	{text}	JsonObj()		DNA proposal ID	
Biosample	nmdc:Biosample	proposal_rna															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				504000															string	19.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA proposal ID	
Biosample	nmdc:Biosample	quad_pos	MIXS:0000820								quadrant position	enumeration	1						The quadrant position of the sampling room within the building		West side					core field							False			quad_pos_enum							JsonObj()		quadrant position	
Biosample	nmdc:Biosample	radiation_regm	MIXS:0000575								radiation regimen	radiation type name;radiation amount;treatment interval and duration	m	rad, gray					Information about treatment involving exposure of plant or a plant part to a particular radiation regimen; should include the radiation type, amount or intensity administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple radiation regimens		gamma radiation;60 gray;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		radiation regimen	
Biosample	nmdc:Biosample	rainfall_regm	MIXS:0000576								rainfall regimen	measurement value;treatment interval and duration	m	millimeter					Information about treatment involving an exposure to a given amount of rainfall, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple regimens		15 millimeter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		rainfall regimen	
Biosample	nmdc:Biosample	reactor_type	MIXS:0000350								reactor type	reactor type name	1						Anaerobic digesters can be designed and engineered to operate using a number of different process configurations, as batch or continuous, mesophilic, high solid or low solid, and single stage or multistage							core field							False			TextValue						{text}	JsonObj()		reactor type	
Biosample	nmdc:Biosample	redox_potential	MIXS:0000182								redox potential	measurement value	1	millivolt					Redox potential, measured relative to a hydrogen cell, indicating oxidation or reduction potential		300 millivolt					core field							False			QuantityValue							JsonObj()		redox potential	
Biosample	nmdc:Biosample	rel_air_humidity	MIXS:0000121								relative air humidity	measurement value	1	percentage					Partial vapor and air pressure, density of the vapor and air, or by the actual mass of the vapor and air		80%					core field							False			QuantityValue							JsonObj()		relative air humidity	
Biosample	nmdc:Biosample	rel_humidity_out	MIXS:0000188								outside relative humidity	measurement value	1	gram of air, kilogram of air					The recorded outside relative humidity value at the time of sampling		12 per kilogram of air					core field							False			QuantityValue							JsonObj()		outside relative humidity	
Biosample	nmdc:Biosample	rel_samp_loc	MIXS:0000821								relative sampling location	enumeration	1						The sampling location within the train car		center of car					core field							False			rel_samp_loc_enum							JsonObj()		relative sampling location	
Biosample	nmdc:Biosample	replicate_number															This will guide staff in ensuring your samples are blocked & randomized correctly		If sending biological replicates, indicate the rep number here.																	string	6.0	True			EMSL	{integer}	JsonObj()		replicate number	
Biosample	nmdc:Biosample	reservoir	MIXS:0000303								reservoir name	name	1						Name of the reservoir (e.g. Carapebus)							core field							False			TextValue						{text}	JsonObj()		reservoir name	
Biosample	nmdc:Biosample	resins_pc	MIXS:0000134								resins wt%	name;measurement value	1	percent					Saturate, Aromatic, Resin and Asphaltene¬†(SARA) is an analysis method that divides¬†crude oil¬†components according to their polarizability and polarity. There are three main methods to obtain SARA results. The most popular one is known as the Iatroscan TLC-FID and is referred to as IP-143 (source: https://en.wikipedia.org/wiki/Saturate,_aromatic,_resin_and_asphaltene)							core field							False			TextValue						{text};{float} {unit}	JsonObj()		resins wt%	
Biosample	nmdc:Biosample	rna_absorb1															Recommended value is between 1 and 3.		260/280 measurement of RNA sample purity		2.02															float	7.0	True			JGI-Metatranscriptomics	{float}	JsonObj()		RNA absorbance 260/280	
Biosample	nmdc:Biosample	rna_absorb2															Recommended value is between 1 and 3.		260/230 measurement of RNA sample purity		2.02															float	8.0	True			JGI-Metatranscriptomics	{float}	JsonObj()		RNA absorbance 260/230	
Biosample	nmdc:Biosample	rna_collect_site																	Provide information on the site your RNA sample was collected from		untreated pond water															string	15.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA collection site	
Biosample	nmdc:Biosample	rna_concentration															Units must be in ng/uL. Enter the numerical part only. Must be calculated using a fluorometric method. Acceptable values are 0-2000.				100								1000.0		0.0					float	5.0	True		nmdc:nucleic_acid_concentration	JGI-Metatranscriptomics	{float}	JsonObj()		RNA concentration in ng/ul	
Biosample	nmdc:Biosample	rna_cont_type																	Tube or plate (96-well)		plate															JgiContTypeEnum	10.0	True			JGI-Metatranscriptomics		JsonObj()		RNA container type	
Biosample	nmdc:Biosample	rna_cont_well															Required when 'plate' is selected for container type.|Leave blank if the sample will be shipped in a tube.|JGI will not process samples in corner wells, so A1, A12, H1 and H12 will not pass validation.|For partial plates, fill by columns, like B1-G1,A2-H2,A3-D3 (NOT A2-A11,B1-B8).				B2														^(?!A1$|A12$|H1$|H12$)(([A-H][1-9])|([A-H]1[0-2]))$	string	11.0	True			JGI-Metatranscriptomics	{96 well plate pos}	JsonObj()		RNA plate position	
Biosample	nmdc:Biosample	rna_container_id															Must be unique across all tubes and plates, and <20 characters. All samples in a plate should have the same plate label.				Pond_MT_041618															string	9.0	True			JGI-Metatranscriptomics	{text < 20 characters}	JsonObj()		RNA container label	
Biosample	nmdc:Biosample	rna_isolate_meth									Sample Isolation Method								Describe the method/protocol/kit used to extract DNA/RNA.		phenol/chloroform extraction															string	16.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA isolation method	
Biosample	nmdc:Biosample	rna_organisms																	List any organisms known or suspected to grow in co-culture, as well as estimated % of the organism in that culture.		expected to contain microbes (59%) fungi (30%), viruses (10%), tadpoles (1%)															string	14.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA expected organisms	
Biosample	nmdc:Biosample	rna_project_contact															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				John Jones															string	18.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA seq project contact	
Biosample	nmdc:Biosample	rna_samp_id															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				187654															string	3.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA sample ID	
Biosample	nmdc:Biosample	rna_sample_format																	Solution in which the RNA sample has been suspended		Water															RNASampleFormatEnum	12.0	True			JGI-Metatranscriptomics		JsonObj()		RNA sample format	
Biosample	nmdc:Biosample	rna_sample_name																	Give the RNA sample a name that is meaningful to you. Sample names must be unique across all JGI projects and contain a-z, A-Z, 0-9, - and _ only.		JGI_pond_041618								2000.0		0.0					string	4.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA sample name	
Biosample	nmdc:Biosample	rna_seq_project									Seq Project ID						Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				1191234															string	1.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA seq project ID	
Biosample	nmdc:Biosample	rna_seq_project_name															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				JGI Pond metatranscriptomics															string	2.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA seq project name	
Biosample	nmdc:Biosample	rna_seq_project_pi															Do not edit these values. A template will be provided by NMDC in which these values have been pre-filled.				Jane Johnson															string	17.0	True			JGI-Metatranscriptomics	{text}	JsonObj()		RNA seq project PI	
Biosample	nmdc:Biosample	rna_volume															Units must be in uL. Enter the numerical part only. Value must be 0-1000. This form accepts values < 25, but JGI may refuse to process them unless permission has been granted by a project manager				25								1000.0		0.0					float	6.0	True			JGI-Metatranscriptomics	{float}	JsonObj()		RNA volume in ul	
Biosample	nmdc:Biosample	room_air_exch_rate	MIXS:0000169								room air exchange rate	measurement value	1	liter per hour					The rate at which outside air replaces indoor air in a given space							core field							False			QuantityValue							JsonObj()		room air exchange rate	
Biosample	nmdc:Biosample	room_architec_elem	MIXS:0000233								room architectural elements	free text	1						The unique details and component parts that, together, form the architecture of a distinguisahable space within a built structure							core field							False			string						{text}	JsonObj()		room architectural elements	
Biosample	nmdc:Biosample	room_condt	MIXS:0000822								room condition	enumeration	1						The condition of the room at the time of sampling		new					core field							False			room_condt_enum							JsonObj()		room condition	
Biosample	nmdc:Biosample	room_connected	MIXS:0000826								rooms connected by a doorway	enumeration	1						List of rooms connected to the sampling room by a doorway		office					core field							False			room_connected_enum							JsonObj()		rooms connected by a doorway	
Biosample	nmdc:Biosample	room_count	MIXS:0000234								room count	value	1						The total count of rooms in the built structure including all room types							core field							False			TextValue							JsonObj()		room count	
Biosample	nmdc:Biosample	room_dim	MIXS:0000192								room dimensions	measurement value	1	meter					The length, width and height of sampling room							core field							False			TextValue						{integer} {unit} x {integer} {unit} x {integer} {unit}	JsonObj()		room dimensions	
Biosample	nmdc:Biosample	room_door_dist	MIXS:0000193								room door distance	measurement value	1	meter					Distance between doors (meters) in the hallway between the sampling room and adjacent rooms							core field							False			TextValue						{integer} {unit}	JsonObj()		room door distance	
Biosample	nmdc:Biosample	room_door_share	MIXS:0000242								rooms that share a door with sampling room	room name;room number	1						List of room(s) (room number, room name) sharing a door with the sampling room							core field							False			TextValue						{text};{integer}	JsonObj()		rooms that share a door with sampling room	
Biosample	nmdc:Biosample	room_hallway	MIXS:0000238								rooms that are on the same hallway	room name;room number	1						List of room(s) (room number, room name) located in the same hallway as sampling room							core field							False			TextValue						{text};{integer}	JsonObj()		rooms that are on the same hallway	
Biosample	nmdc:Biosample	room_loc	MIXS:0000823								room location in building	enumeration	1						The position of the room within the building		interior room					core field							False			room_loc_enum							JsonObj()		room location in building	
Biosample	nmdc:Biosample	room_moist_dam_hist	MIXS:0000235								room moisture damage or mold history	value	1						The history of moisture damage or mold in the past 12 months. Number of events of moisture damage or mold observed							core field							False			integer							JsonObj()		room moisture damage or mold history	
Biosample	nmdc:Biosample	room_net_area	MIXS:0000194								room net area	measurement value	1	square feet, square meter					The net floor area of sampling room. Net area excludes wall thicknesses							core field							False			TextValue						{integer} {unit}	JsonObj()		room net area	
Biosample	nmdc:Biosample	room_occup	MIXS:0000236								room occupancy	measurement value	1						Count of room occupancy at time of sampling							core field							False			QuantityValue							JsonObj()		room occupancy	
Biosample	nmdc:Biosample	room_samp_pos	MIXS:0000824								room sampling position	enumeration	1						The horizontal sampling position in the room relative to architectural elements		south corner					core field							False			room_samp_pos_enum							JsonObj()		room sampling position	
Biosample	nmdc:Biosample	room_type	MIXS:0000825								room type	enumeration	1						The main purpose or activity of the sampling room. A room is any distinguishable space within a structure		bathroom					core field							False			room_type_enum							JsonObj()		room type	
Biosample	nmdc:Biosample	room_vol	MIXS:0000195								room volume	measurement value	1	cubic feet, cubic meter					Volume of sampling room							core field							False			TextValue						{integer} {unit}	JsonObj()		room volume	
Biosample	nmdc:Biosample	room_wall_share	MIXS:0000243								rooms that share a wall with sampling room	room name;room number	1						List of room(s) (room number, room name) sharing a wall with the sampling room							core field							False			TextValue						{text};{integer}	JsonObj()		rooms that share a wall with sampling room	
Biosample	nmdc:Biosample	room_window_count	MIXS:0000237								room window count	value	1						Number of windows in the room							core field							False			integer							JsonObj()		room window count	
Biosample	nmdc:Biosample	root_cond	MIXS:0001061								rooting conditions	PMID,DOI,url or free text	1						Relevant rooting conditions such as field plot size, sowing density, container dimensions, number of plants per container.		http://himedialabs.com/TD/PT158.pdf					core field							False			TextValue						{PMID}|{DOI}|{URL}|{text}	JsonObj()		rooting conditions	
Biosample	nmdc:Biosample	root_med_carbon	MIXS:0000577								rooting medium carbon	carbon source name;measurement value	1	milligram per liter					Source of organic carbon in the culture rooting medium; e.g. sucrose.		sucrose					core field							False			TextValue						{text};{float} {unit}	JsonObj()		rooting medium carbon	
Biosample	nmdc:Biosample	root_med_macronutr	MIXS:0000578								rooting medium macronutrients	macronutrient name;measurement value	1	milligram per liter					Measurement of the culture rooting medium macronutrients (N,P, K, Ca, Mg, S); e.g. KH2PO4 (170¬†mg/L).		KH2PO4;170¬†milligram per liter					core field							False			TextValue						{text};{float} {unit}	JsonObj()		rooting medium macronutrients	
Biosample	nmdc:Biosample	root_med_micronutr	MIXS:0000579								rooting medium micronutrients	micronutrient name;measurement value	1	milligram per liter					Measurement of the culture rooting medium micronutrients (Fe, Mn, Zn, B, Cu, Mo); e.g. H3BO3 (6.2¬†mg/L).		H3BO3;6.2¬†milligram per liter					core field							False			TextValue						{text};{float} {unit}	JsonObj()		rooting medium micronutrients	
Biosample	nmdc:Biosample	root_med_ph	MIXS:0001062								rooting medium pH	measurement value	1						pH measurement of the culture rooting medium; e.g. 5.5.		7.5					core field							False			QuantityValue							JsonObj()		rooting medium pH	
Biosample	nmdc:Biosample	root_med_regl	MIXS:0000581								rooting medium regulators	regulator name;measurement value	1	milligram per liter					Growth regulators in the culture rooting medium such as cytokinins, auxins, gybberellins, abscisic acid; e.g. 0.5¬†mg/L NAA.		abscisic acid;0.75 milligram per liter					core field							False			TextValue						{text};{float} {unit}	JsonObj()		rooting medium regulators	
Biosample	nmdc:Biosample	root_med_solid	MIXS:0001063								rooting medium solidifier	name	1						Specification of the solidifying agent in the culture rooting medium; e.g. agar.		agar					core field							False			TextValue						{text}	JsonObj()		rooting medium solidifier	
Biosample	nmdc:Biosample	root_med_suppl	MIXS:0000580								rooting medium organic supplements	supplement name;measurement value	1	milligram per liter					Organic supplements of the culture rooting medium, such as vitamins, amino acids, organic acids, antibiotics activated charcoal; e.g. nicotinic acid (0.5¬†mg/L).		nicotinic acid;0.5 milligram per liter					core field							False			TextValue						{text};{float} {unit}	JsonObj()		rooting medium organic supplements	
Biosample	nmdc:Biosample	salinity	MIXS:0000183								salinity	measurement value	1	practical salinity unit, percentage					The total concentration of all dissolved salts in a liquid or solid sample. While salinity can be measured by a complete chemical analysis, this method is difficult and time consuming. More often, it is instead derived from the conductivity measurement. This is known as practical salinity. These derivations compare the specific conductance of the sample to a salinity standard such as seawater.		25 practical salinity unit					core field							False			QuantityValue							JsonObj()		salinity	
Biosample	nmdc:Biosample	salinity_category																	Categorical description of the sample's salinity. Examples: halophile, halotolerant, hypersaline, huryhaline															maps to gold:salinity		string				https://github.com/microbiomedata/nmdc-metadata/pull/297			JsonObj()			
Biosample	nmdc:Biosample	salinity_meth	MIXS:0000341								salinity method	PMID,DOI or url	1						Reference or method used in determining salinity		https://doi.org/10.1007/978-1-61779-986-0_28					core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		salinity method	
Biosample	nmdc:Biosample	salt_regm	MIXS:0000582								salt regimen	salt name;salt amount;treatment interval and duration	m	gram, microgram, mole per liter, gram per liter					Information about treatment involving use of salts as supplement to liquid and soil growth media; should include the name of salt, amount administered, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple salt regimens		NaCl;5 gram per liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		salt regimen	
Biosample	nmdc:Biosample	samp_capt_status	MIXS:0000860								sample capture status	enumeration	1						Reason for the sample		farm sample					core field							False			samp_capt_status_enum							JsonObj()		sample capture status	
Biosample	nmdc:Biosample	samp_collec_device	MIXS:0000002								sample collection device	device name							The device used to collect an environmental sample. This field accepts terms listed under environmental sampling device (http://purl.obolibrary.org/obo/ENVO). This field also accepts terms listed under specimen collection device (http://purl.obolibrary.org/obo/GENEPIO_0002094).		swab, biopsy, niskin bottle, push core, drag swab [GENEPIO:0002713]					nucleic acid sequence source field							False			string						{termLabel} {[termID]}|{text}	JsonObj()		sample collection device	
Biosample	nmdc:Biosample	samp_collec_method	MIXS:0001225								sample collection method	PMID,DOI,url , or text							The method employed for collecting the sample.		swabbing					nucleic acid sequence source field							False			string						{PMID}|{DOI}|{URL}|{text}	JsonObj()		sample collection method	
Biosample	nmdc:Biosample	samp_collect_point	MIXS:0001015								sample collection point	enumeration	1						"Sampling point on the asset were sample was collected (e.g. Wellhead, storage tank, separator, etc). If ""other"" is specified, please propose entry in ""additional info"" field"		well					core field							False			samp_collect_point_enum							JsonObj()		sample collection point	
Biosample	nmdc:Biosample	samp_dis_stage	MIXS:0000249								sample disease stage	enumeration	1						Stage of the disease at the time of sample collection, e.g. inoculation, penetration, infection, growth and reproduction, dissemination of pathogen.		infection					core field							False			samp_dis_stage_enum							JsonObj()		sample disease stage	
Biosample	nmdc:Biosample	samp_floor	MIXS:0000828								sampling floor	enumeration	1						The floor of the building, where the sampling room is located		4th floor					core field							False			samp_floor_enum							JsonObj()		sampling floor	
Biosample	nmdc:Biosample	samp_loc_corr_rate	MIXS:0000136								corrosion rate at sample location	measurement value range	1	millimeter per year					Metal corrosion rate is the speed of metal deterioration due to environmental conditions. As environmental conditions change corrosion rates change accordingly. Therefore, long term corrosion rates are generally more informative than short term rates and for that reason they are preferred during reporting. In the case of suspected MIC, corrosion rate measurements at the time of sampling might provide insights into the involvement of certain microbial community members in MIC as well as potential microbial interplays							core field							False			TextValue						{float} - {float} {unit}	JsonObj()		corrosion rate at sample location	
Biosample	nmdc:Biosample	samp_mat_process	MIXS:0000016								sample material processing	text							A brief description of any processing applied to the sample during or after retrieving the sample from environment, or a link to the relevant protocol(s) performed.		filtering of seawater, storing samples in ethanol					nucleic acid sequence source field							False			ControlledTermValue						{text}	JsonObj()		sample material processing	
Biosample	nmdc:Biosample	samp_md	MIXS:0000413								sample measured depth	measurement value;enumeration	1	meter					"In non deviated well, measured depth is equal to the true vertical depth, TVD (TVD=TVDSS plus the reference or datum it refers to). In deviated wells, the MD is the length of trajectory of the borehole measured from the same reference or datum. Common datums used are ground level (GL), drilling rig floor (DF), rotary table (RT), kelly bushing (KB) and mean sea level (MSL). If ""other"" is specified, please propose entry in ""additional info"" field"		1534 meter;MSL					core field							False			QuantityValue							JsonObj()		sample measured depth	
Biosample	nmdc:Biosample	samp_name	MIXS:0001107								sample name	text							A local identifier or name that for the material sample used for extracting nucleic acids, and subsequent sequencing. It can refer either to the original material collected or to any derived sub-samples. It can have any format, but we suggest that you make it concise, unique and consistent within your lab, and as informative as possible. INSDC requires every sample name from a single Submitter to be unique. Use of a globally unique identifier for the field source_mat_id is recommended in addition to sample_name.		ISDsoil1					investigation field							False			string						{text}	JsonObj()		sample name	
Biosample	nmdc:Biosample	samp_preserv	MIXS:0000463								preservative added to sample	name;measurement value	1	milliliter					Preservative added to the sample (e.g. Rnalater, alcohol, formaldehyde, etc.). Where appropriate include volume added (e.g. Rnalater; 2 ml)							core field							False			TextValue						{text};{float} {unit}	JsonObj()		preservative added to sample	
Biosample	nmdc:Biosample	samp_room_id	MIXS:0000244								sampling room ID or name	value	1						Sampling room number. This ID should be consistent with the designations on the building floor plans							core field							False			TextValue							JsonObj()		sampling room ID or name	
Biosample	nmdc:Biosample	samp_size	MIXS:0000001								amount or size of sample collected	measurement value		millliter, gram, milligram, liter					The total amount or size (volume (ml), mass (g) or area (m2) ) of sample collected.		5 liter					nucleic acid sequence source field							False			QuantityValue							JsonObj()		amount or size of sample collected	
Biosample	nmdc:Biosample	samp_sort_meth	MIXS:0000216								sample size sorting method	description of method	m						Method by which samples are sorted; open face filter collecting total suspended particles, prefilter to remove particles larger than X micrometers in diameter, where common values of X would be 10 and 2.5 full size sorting in a cascade impactor.						True	core field							True			TextValue						{text}	JsonObj()		sample size sorting method	
Biosample	nmdc:Biosample	samp_store_dur	MIXS:0000116								sample storage duration	duration	1						Duration for which the sample was stored		P1Y6M					core field							False			TextValue						{duration}	JsonObj()		sample storage duration	
Biosample	nmdc:Biosample	samp_store_loc	MIXS:0000755								sample storage location	location name	1						Location at which sample was stored, usually name of a specific freezer/room		Freezer no:5					core field							False			TextValue						{text}	JsonObj()		sample storage location	
Biosample	nmdc:Biosample	samp_store_temp	MIXS:0000110								sample storage temperature	measurement value	1	degree Celsius					Temperature at which sample was stored, e.g. -80 degree Celsius		-80 degree Celsius					core field							False			QuantityValue							JsonObj()		sample storage temperature	
Biosample	nmdc:Biosample	samp_subtype	MIXS:0000999								sample subtype	enumeration	1						"Name of sample sub-type. For example if ""sample type"" is ""Produced Water"" then subtype could be ""Oil Phase"" or ""Water Phase"". If ""other"" is specified, please propose entry in ""additional info"" field"		biofilm					core field							False			samp_subtype_enum							JsonObj()		sample subtype	
Biosample	nmdc:Biosample	samp_taxon_id	MIXS:0001320								Taxonomy ID of DNA sample	Taxonomy ID					coal metagenome [NCBITaxon:1260732] would be a reasonable has_raw_value		NCBI taxon id of the sample.  Maybe be a single taxon or mixed taxa sample. Use 'synthetic metagenome’ for mock community/positive controls, or 'blank sample' for negative controls.							investigation field							False			ControlledIdentifiedTermValue							JsonObj()		Taxonomy ID of DNA sample	
Biosample	nmdc:Biosample	samp_time_out	MIXS:0000196								sampling time outside	time	1	hour					The recent and long term history of outside sampling							core field							False			TextValue							JsonObj()		sampling time outside	
Biosample	nmdc:Biosample	samp_transport_cond	MIXS:0000410								sample transport conditions	measurement value;measurement value	1	days;degree Celsius					Sample transport duration (in days or hrs) and temperature the sample was exposed to (e.g. 5.5 days; 20 ¬∞C)		5 days;-20 degree Celsius					core field							False			TextValue						{float} {unit};{float} {unit}	JsonObj()		sample transport conditions	
Biosample	nmdc:Biosample	samp_tvdss	MIXS:0000409								sample true vertical depth subsea	measurement value or measurement value range	1	meter					Depth of the sample i.e. The vertical distance between the sea level and the sampled position in the subsurface. Depth can be reported as an interval for subsurface samples e.g. 1325.75-1362.25 m							core field							False			TextValue						{float}-{float} {unit}	JsonObj()		sample true vertical depth subsea	
Biosample	nmdc:Biosample	samp_type	MIXS:0000998								sample type	GENEPIO:0001246	1						The type of material from which the sample was obtained. For the Hydrocarbon package, samples include types like core, rock trimmings, drill cuttings, piping section, coupon, pigging debris, solid deposit, produced fluid, produced water, injected water, swabs, etc. For the Food Package, samples are usually categorized as food, body products or tissues, or environmental material. This field accepts terms listed under environmental specimen (http://purl.obolibrary.org/obo/GENEPIO_0001246).		built environment sample [GENEPIO:0001248]					core field							False			TextValue						{termLabel} {[termID]}	JsonObj()		sample type	
Biosample	nmdc:Biosample	samp_weather	MIXS:0000827								sampling day weather	enumeration	1						The weather on the sampling day		foggy					core field							False			samp_weather_enum							JsonObj()		sampling day weather	
Biosample	nmdc:Biosample	samp_well_name	MIXS:0000296								sample well name	name	1						Name of the well (e.g. BXA1123) where sample was taken							core field							False			TextValue						{text}	JsonObj()		sample well name	
Biosample	nmdc:Biosample	sample_collection_site																																		string							JsonObj()			
Biosample	nmdc:Biosample	sample_link															This field allows multiple entries separated by ; (Examples: Soil collected from the field will link with the soil used in an incubation. The soil a plant was grown in links to the plant sample. An original culture sample was transferred to a new vial and generated a new sample)		A unique identifier to assign parent-child, subsample, or sibling samples. This is relevant when a sample or other material was used to generate the new sample.		IGSN:DSJ0284												True			string	5.0	True			Sample ID	{text}:{text}	JsonObj()		sample linkage	
Biosample	nmdc:Biosample	sample_shipped															This field is only required when completing metadata for samples being submitted to EMSL for analyses.		The total amount or size (volume (ml), mass (g) or area (m2) ) of sample sent to EMSL.		15 g|100 uL|5 mL															string	3.0	True			EMSL	{float} {unit}	JsonObj()		sample shipped amount	
Biosample	nmdc:Biosample	sample_type															This can vary from 'environmental package' if the sample is an extraction.		Type of sample being submitted		water extracted soil															SampleTypeEnum	2.0	True			EMSL		JsonObj()		sample type	
Biosample	nmdc:Biosample	saturates_pc	MIXS:0000131								saturates wt%	name;measurement value	1	percent					Saturate, Aromatic, Resin and Asphaltene¬†(SARA) is an analysis method that divides¬†crude oil¬†components according to their polarizability and polarity. There are three main methods to obtain SARA results. The most popular one is known as the Iatroscan TLC-FID and is referred to as IP-143 (source: https://en.wikipedia.org/wiki/Saturate,_aromatic,_resin_and_asphaltene)							core field							False			TextValue						{text};{float} {unit}	JsonObj()		saturates wt%	
Biosample	nmdc:Biosample	season	MIXS:0000829								season	NCIT:C94729	1						The season when sampling occurred. Any of the four periods into which the year is divided by the equinoxes and solstices. This field accepts terms listed under season (http://purl.obolibrary.org/obo/NCIT_C94729).		autumn [NCIT:C94733]					core field							False			TextValue						{termLabel} {[termID]}	JsonObj()		season	
Biosample	nmdc:Biosample	season_environment	MIXS:0001068								seasonal environment	seasonal environment name;treatment interval and duration	m						Treatment involving an exposure to a particular season (e.g. Winter, summer, rabi, rainy etc.), treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment		rainy;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{Rn/start_time/end_time/duration}	JsonObj()		seasonal environment	
Biosample	nmdc:Biosample	season_precpt	MIXS:0000645								mean seasonal precipitation	measurement value	1	millimeter			Seasons are defined as spring (March, April, May), summer (June, July, August), autumn (September, October, November) and winter (December, January, February).		The average of all seasonal precipitation values known, or an estimated equivalent value derived by such methods as regional indexes or Isohyetal maps.		0.4 inch|10.16 mm					core field							False	mean and average are the same thing, but it seems like bad practice to not be consistent. Changed mean to average		QuantityValue							JsonObj()		average seasonal precipitation	check validation & examples. always mm? so value only? Or value + unit
Biosample	nmdc:Biosample	season_temp	MIXS:0000643								mean seasonal temperature	measurement value	1	degree Celsius					Mean seasonal temperature		18 degree Celsius					core field							False			QuantityValue							JsonObj()		mean seasonal temperature	
Biosample	nmdc:Biosample	season_use	MIXS:0000830								seasonal use	enumeration	1						The seasons the space is occupied		Winter					core field							False			season_use_enum							JsonObj()		seasonal use	
Biosample	nmdc:Biosample	secondary_treatment	MIXS:0000351								secondary treatment	secondary treatment type	1						The process for substantially degrading the biological content of the sewage							core field							False			TextValue						{text}	JsonObj()		secondary treatment	
Biosample	nmdc:Biosample	sediment_type	MIXS:0001078								sediment type	enumeration	1						Information about the sediment type based on major constituents		biogenous					core field							False			sediment_type_enum							JsonObj()		sediment type	
Biosample	nmdc:Biosample	sequencing field							True	sequencing_field																										string							JsonObj()			
Biosample	nmdc:Biosample	sewage_type	MIXS:0000215								sewage type	sewage type name	1						Type of wastewater treatment plant as municipial or industrial							core field							False			TextValue						{text}	JsonObj()		sewage type	
Biosample	nmdc:Biosample	shad_dev_water_mold	MIXS:0000834								shading device signs of water/mold	enumeration	1						Signs of the presence of mold or mildew on the shading device		no presence of mold visible					core field							False			string						[presence of mold visible|no presence of mold visible]	JsonObj()		shading device signs of water/mold	
Biosample	nmdc:Biosample	shading_device_cond	MIXS:0000831								shading device condition	enumeration	1						The physical condition of the shading device at the time of sampling		new					core field							False			shading_device_cond_enum							JsonObj()		shading device condition	
Biosample	nmdc:Biosample	shading_device_loc	MIXS:0000832								shading device location	enumeration	1						The location of the shading device in relation to the built structure		exterior					core field							False			TextValue						[exterior|interior]	JsonObj()		shading device location	
Biosample	nmdc:Biosample	shading_device_mat	MIXS:0000245								shading device material	material name	1						The material the shading device is composed of							core field							False			TextValue						{text}	JsonObj()		shading device material	
Biosample	nmdc:Biosample	shading_device_type	MIXS:0000835								shading device type	enumeration	1						The type of shading device		slatted aluminum awning					core field							False			shading_device_type_enum							JsonObj()		shading device type	
Biosample	nmdc:Biosample	sieving	MIXS:0000322								composite design/sieving	design name and/or size;amount	1				Describe how samples were composited or sieved.|Use 'sample link' to indicate which samples were combined.		Collection design of pooled samples and/or sieve size and amount of sample sieved		combined 2 cores | 4mm sieved|4 mm sieved and homogenized|50 g | 5 cores | 2 mm sieved					core field							False			TextValue						{{text}|{float} {unit}};{float} {unit}	JsonObj()		composite design/sieving	check validation and examples
Biosample	nmdc:Biosample	silicate	MIXS:0000184								silicate	measurement value	1	micromole per liter					Concentration of silicate		0.05 micromole per liter					core field							False			QuantityValue							JsonObj()		silicate	
Biosample	nmdc:Biosample	size_frac	MIXS:0000017								size fraction selected	filter size value range							Filtering pore size used in sample preparation		0-0.22 micrometer					nucleic acid sequence source field							False			TextValue						{float}-{float} {unit}	JsonObj()		size fraction selected	
Biosample	nmdc:Biosample	size_frac_low	MIXS:0000735								size-fraction lower threshold	value	1	micrometer					Refers to the mesh/pore size used to pre-filter/pre-sort the sample. Materials larger than the size threshold are excluded from the sample		0.2 micrometer					core field							False			QuantityValue							JsonObj()		size-fraction lower threshold	
Biosample	nmdc:Biosample	size_frac_up	MIXS:0000736								size-fraction upper threshold	value	1	micrometer					Refers to the mesh/pore size used to retain the sample. Materials smaller than the size threshold are excluded from the sample		20 micrometer					core field							False			QuantityValue							JsonObj()		size-fraction upper threshold	
Biosample	nmdc:Biosample	slope_aspect	MIXS:0000647								slope aspect	measurement value	1	degree			Aspect is the orientation of slope, measured clockwise in degrees from 0 to 360, where 0 is north-facing, 90 is east-facing, 180 is south-facing, and 270 is west-facing.		The direction a slope faces. While looking down a slope use a compass to record the direction you are facing (direction or degrees). This measure provides an indication of sun and wind exposure that will influence soil temperature and evapotranspiration.		35					core field							False			QuantityValue							JsonObj()		slope aspect	
Biosample	nmdc:Biosample	slope_gradient	MIXS:0000646								slope gradient	measurement value	1	percentage					Commonly called 'slope'. The angle between ground surface and a horizontal line (in percent). This is the direction that overland water would flow. This measure is usually taken with a hand level meter or clinometer		10%|10 %|0.10					core field							False			QuantityValue							JsonObj()		slope gradient	Slope is a percent. How does the validation work? Check to correct examples
Biosample	nmdc:Biosample	sludge_retent_time	MIXS:0000669								sludge retention time	measurement value	1	hours					The time activated sludge remains in reactor							core field							False			QuantityValue							JsonObj()		sludge retention time	
Biosample	nmdc:Biosample	sodium	MIXS:0000428								sodium	measurement value	1	milligram per liter, parts per million					Sodium concentration in the sample		10.5 milligram per liter					core field							False			QuantityValue							JsonObj()		sodium	
Biosample	nmdc:Biosample	soil_horizon	MIXS:0001082								soil horizon	enumeration	1						Specific layer in the land area which measures parallel to the soil surface and possesses physical characteristics which differ from the layers above and beneath		A horizon					core field							False			soil_horizon_enum							JsonObj()		soil horizon	
Biosample	nmdc:Biosample	soil_text_measure	MIXS:0000335								soil texture measurement	measurement value	1						The relative proportion of different grain sizes of mineral particles in a soil, as described using a standard system; express as % sand (50 um to 2 mm), silt (2 um to 50 um), and clay (<2 um) with textural name (e.g., silty clay loam) optional.							core field							False			QuantityValue							JsonObj()		soil texture measurement	
Biosample	nmdc:Biosample	soil_texture_meth	MIXS:0000336								soil texture method	PMID,DOI or url	1						Reference or method used in determining soil texture							core field							False			string						{PMID}|{DOI}|{URL}	JsonObj()		soil texture method	
Biosample	nmdc:Biosample	soil_type	MIXS:0000332								soil type	ENVO_00001998	1						Description of the soil type or classification. This field accepts terms under soil (http://purl.obolibrary.org/obo/ENVO_00001998).  Multiple terms can be separated by pipes.		plinthosol [ENVO:00002250]					core field							False			TextValue						{termLabel} {[termID]}	JsonObj()		soil type	
Biosample	nmdc:Biosample	soil_type_meth	MIXS:0000334								soil type method	PMID,DOI or url	1						Reference or method used in determining soil series name or other lower-level classification							core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		soil type method	
Biosample	nmdc:Biosample	solar_irradiance	MIXS:0000112								solar irradiance	measurement value	1	kilowatts per square meter per day, ergs per square centimeter per second					The amount of solar energy that arrives at a specific area of a surface during a specific time interval		1.36 kilowatts per square meter per day					core field							False			QuantityValue							JsonObj()		solar irradiance	
Biosample	nmdc:Biosample	soluble_inorg_mat	MIXS:0000672								soluble inorganic material	soluble inorganic material name;measurement value	m	gram, microgram, mole per liter, gram per liter, parts per million					Concentration of substances such as ammonia, road-salt, sea-salt, cyanide, hydrogen sulfide, thiocyanates, thiosulfates, etc.						True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		soluble inorganic material	
Biosample	nmdc:Biosample	soluble_iron_micromol																																		string							JsonObj()			
Biosample	nmdc:Biosample	soluble_org_mat	MIXS:0000673								soluble organic material	soluble organic material name;measurement value	m	gram, microgram, mole per liter, gram per liter, parts per million					Concentration of substances such as urea, fruit sugars, soluble proteins, drugs, pharmaceuticals, etc.						True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		soluble organic material	
Biosample	nmdc:Biosample	soluble_react_phosp	MIXS:0000738								soluble reactive phosphorus	measurement value	1	micromole per liter, milligram per liter, parts per million					Concentration of soluble reactive phosphorus		0.1 milligram per liter					core field							False			QuantityValue							JsonObj()		soluble reactive phosphorus	
Biosample	nmdc:Biosample	source_mat_id	MIXS:0000026								source material identifiers	for cultures of microorganisms: identifiers for two culture collections; for other material a unique arbitrary identifer					Identifiers must be prefixed. Possible FAIR prefixes are IGSNs (http://www.geosamples.org/getigsn), NCBI biosample accession numbers, ARK identifiers (https://arks.org/). These IDs enable linking to derived analytes and subsamples. If you have not assigned FAIR identifiers to your samples, you can generate UUIDs (https://www.uuidgenerator.net/).		A globally unique identifier assigned to the biological sample.		IGSN:AU1243|UUID:24f1467a-40f4-11ed-b878-0242ac120002					nucleic acid sequence source field							False			TextValue						{text}	JsonObj()		source material identifier	Currently, the comments say to use UUIDs. However, if we implement assigning NMDC identifiers with the minter we dont need to require a GUID. It can be an optional field to fill out only if they already have a resolvable ID.
Biosample	nmdc:Biosample	space_typ_state	MIXS:0000770								space typical state	enumeration	1						Customary or normal state of the space		typically occupied					core field							False			TextValue						[typically occupied|typically unoccupied]	JsonObj()		space typical state	
Biosample	nmdc:Biosample	specific	MIXS:0000836								specifications	enumeration	1						The building specifications. If design is chosen, indicate phase: conceptual, schematic, design development, construction documents		construction					core field							False			specific_enum							JsonObj()		specifications	
Biosample	nmdc:Biosample	specific_ecosystem															Specific ecosystems help to define samples based on very specific characteristics of an environment under the five-level classification system.		Specific ecosystems represent specific features of the environment like aphotic zone in an ocean or gastric mucosa within a host digestive system. Specific ecosystem is in position 5/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Biosample	nmdc:Biosample	specific_humidity	MIXS:0000214								specific humidity	measurement value	1	gram of air, kilogram of air					The mass of water vapour in a unit mass of moist air, usually expressed as grams of vapour per kilogram of air, or, in air conditioning, as grains per pound.		15 per kilogram of air					core field							False			QuantityValue							JsonObj()		specific humidity	
Biosample	nmdc:Biosample	sr_dep_env	MIXS:0000996								source rock depositional environment	enumeration	1						"Source rock depositional environment (https://en.wikipedia.org/wiki/Source_rock). If ""other"" is specified, please propose entry in ""additional info"" field"		Marine					core field							False			sr_dep_env_enum							JsonObj()		source rock depositional environment	
Biosample	nmdc:Biosample	sr_geol_age	MIXS:0000997								source rock geological age	enumeration	1						"Geological age of source rock (Additional info: https://en.wikipedia.org/wiki/Period_(geology)). If ""other"" is specified, please propose entry in ""additional info"" field"		Silurian					core field							False			sr_geol_age_enum							JsonObj()		source rock geological age	
Biosample	nmdc:Biosample	sr_kerog_type	MIXS:0000994								source rock kerogen type	enumeration	1						"Origin of kerogen. Type I: Algal (aquatic), Type II: planktonic and soft plant material (aquatic or terrestrial), Type III: terrestrial woody/ fibrous plant material (terrestrial), Type IV: oxidized recycled woody debris (terrestrial) (additional information: https://en.wikipedia.org/wiki/Kerogen). If ""other"" is specified, please propose entry in ""additional info"" field"		Type IV					core field							False			sr_kerog_type_enum							JsonObj()		source rock kerogen type	
Biosample	nmdc:Biosample	sr_lithology	MIXS:0000995								source rock lithology	enumeration	1						"Lithology of source rock (https://en.wikipedia.org/wiki/Source_rock). If ""other"" is specified, please propose entry in ""additional info"" field"		Coal					core field							False			sr_lithology_enum							JsonObj()		source rock lithology	
Biosample	nmdc:Biosample	standing_water_regm	MIXS:0001069								standing water regimen	standing water type;treatment interval and duration	m						Treatment involving an exposure to standing water during a plant's life span, types can be flood water or standing water, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple regimens		standing water;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{text};{Rn/start_time/end_time/duration}	JsonObj()		standing water regimen	
Biosample	nmdc:Biosample	start_date_inc															Date should be formatted as YYYY(-MM(-DD)). Ie, 2021-04-15, 2021-04 and 2021 are all acceptable.		Date the incubation was started. Only relevant for incubation samples.		2021-04-15|2021-04|2021													MIxS collection_date accepts (truncated) ISO8601. DH taking arbitrary precision date only		string	4.0	True		MIXS:0000011	MIxS Inspired	{date, arbitrary precision}	JsonObj()		incubation start date	
Biosample	nmdc:Biosample	start_time_inc															Time should be entered as HH:MM(:SS) in GMT. See here for a converter: https://www.worldtimebuddy.com/pst-to-gmt-converter		Time the incubation was started. Only relevant for incubation samples.		13:33|13:33:55													MIxS collection_date accepts (truncated) ISO8601. DH taking seconds optional time only		string	5.0	True		MIXS:0000011	MIxS Inspired	{time, seconds optional}	JsonObj()		incubation start time, GMT	
Biosample	nmdc:Biosample	store_cond	MIXS:0000327								storage conditions	storage condition type;duration	1						Explain how and for how long the soil sample was stored before DNA extraction (fresh/frozen/other).		-20 degree Celsius freezer;P2Y10D					core field							False			TextValue						{text};{duration}	JsonObj()		storage conditions	
Biosample	nmdc:Biosample	substructure_type	MIXS:0000767								substructure type	enumeration	m						The substructure or under building is that largely hidden section of the building which is built off the foundations to the ground floor level		basement					core field							True			substructure_type_enum							JsonObj()		substructure type	
Biosample	nmdc:Biosample	subsurface_depth																																		QuantityValue							JsonObj()			
Biosample	nmdc:Biosample	sulfate	MIXS:0000423								sulfate	measurement value	1	micromole per liter, milligram per liter, parts per million					Concentration of sulfate in the sample		5 micromole per liter					core field							False			QuantityValue							JsonObj()		sulfate	
Biosample	nmdc:Biosample	sulfate_fw	MIXS:0000407								sulfate in formation water	measurement value	1	milligram per liter					Original sulfate concentration in the hydrocarbon resource							core field							False			QuantityValue							JsonObj()		sulfate in formation water	
Biosample	nmdc:Biosample	sulfide	MIXS:0000424								sulfide	measurement value	1	micromole per liter, milligram per liter, parts per million					Concentration of sulfide in the sample		2 micromole per liter					core field							False			QuantityValue							JsonObj()		sulfide	
Biosample	nmdc:Biosample	surf_air_cont	MIXS:0000759								surface-air contaminant	enumeration	m						Contaminant identified on surface		radon					core field							True			surf_air_cont_enum							JsonObj()		surface-air contaminant	
Biosample	nmdc:Biosample	surf_humidity	MIXS:0000123								surface humidity	measurement value	1	percentage					Surfaces: water activity as a function of air and material moisture		10%					core field							False			QuantityValue							JsonObj()		surface humidity	
Biosample	nmdc:Biosample	surf_material	MIXS:0000758								surface material	enumeration	1						Surface materials at the point of sampling		wood					core field							False			surf_material_enum							JsonObj()		surface material	
Biosample	nmdc:Biosample	surf_moisture	MIXS:0000128								surface moisture	measurement value	1	parts per million, gram per cubic meter, gram per square meter					Water held on a surface		0.01 gram per square meter					core field							False			QuantityValue							JsonObj()		surface moisture	
Biosample	nmdc:Biosample	surf_moisture_ph	MIXS:0000760								surface moisture pH	measurement value	1						ph measurement of surface		7					core field							False			double							JsonObj()		surface moisture pH	
Biosample	nmdc:Biosample	surf_temp	MIXS:0000125								surface temperature	measurement value	1	degree Celsius					Temperature of the surface at the time of sampling		15 degree Celsius					core field							False			QuantityValue							JsonObj()		surface temperature	
Biosample	nmdc:Biosample	suspend_part_matter	MIXS:0000741								suspended particulate matter	measurement value	1	milligram per liter					Concentration of suspended particulate matter		0.5 milligram per liter					core field							False			QuantityValue							JsonObj()		suspended particulate matter	
Biosample	nmdc:Biosample	suspend_solids	MIXS:0000150								suspended solids	suspended solid name;measurement value	m	gram, microgram, milligram per liter, mole per liter, gram per liter, part per million					Concentration of substances including a wide variety of material, such as silt, decaying plant and animal matter; can include multiple substances						True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		suspended solids	
Biosample	nmdc:Biosample	tan	MIXS:0000120								total acid number	measurement value	1	milligram per liter					Total Acid Number¬†(TAN) is a measurement of acidity that is determined by the amount of¬†potassium hydroxide¬†in milligrams that is needed to neutralize the acids in one gram of oil.¬†It is an important quality measurement of¬†crude oil. (source: https://en.wikipedia.org/wiki/Total_acid_number)							core field							False			QuantityValue							JsonObj()		total acid number	
Biosample	nmdc:Biosample	technical_reps															This field is only required when completing metadata for samples being submitted to EMSL for analyses.		If sending technical replicates of the same sample, indicate the replicate count.		2															string	5.0	True			EMSL	{integer}	JsonObj()		number technical replicate	
Biosample	nmdc:Biosample	temp	MIXS:0000113								temperature	measurement value		degree Celsius					Temperature of the sample at the time of sampling.		25 degree Celsius					environment field							False			QuantityValue							JsonObj()		temperature	
Biosample	nmdc:Biosample	temp_out	MIXS:0000197								temperature outside house	measurement value	1	degree Celsius					The recorded temperature value at sampling time outside		5 degree Celsius					core field							False			QuantityValue							JsonObj()		temperature outside house	
Biosample	nmdc:Biosample	tertiary_treatment	MIXS:0000352								tertiary treatment	tertiary treatment type	1						The process providing a final treatment stage to raise the effluent quality before it is discharged to the receiving environment							core field							False			TextValue						{text}	JsonObj()		tertiary treatment	
Biosample	nmdc:Biosample	tidal_stage	MIXS:0000750								tidal stage	enumeration	1						Stage of tide		high tide					core field							False			tidal_stage_enum							JsonObj()		tidal stage	
Biosample	nmdc:Biosample	tillage	MIXS:0001081								history/tillage	enumeration	m						Note method(s) used for tilling		chisel					core field							True			tillage_enum							JsonObj()		history/tillage	
Biosample	nmdc:Biosample	tiss_cult_growth_med	MIXS:0001070								tissue culture growth media	PMID,DOI,url or free text	1						Description of plant tissue culture growth media used		https://link.springer.com/content/pdf/10.1007/BF02796489.pdf					core field							False			TextValue						{PMID}|{DOI}|{URL}|{text}	JsonObj()		tissue culture growth media	
Biosample	nmdc:Biosample	toluene	MIXS:0000154								toluene	measurement value	1	milligram per liter, parts per million					Concentration of toluene in the sample							core field							False			QuantityValue							JsonObj()		toluene	
Biosample	nmdc:Biosample	tot_carb	MIXS:0000525								total carbon	measurement value	1	microgram per liter					Total carbon content		1 ug/L					core field							False			QuantityValue							JsonObj()		total carbon	is this inorganic and organic? both? could use some clarification.|ug/L doesn't seem like the right units. Should check this slots usage in databases and re-evaluate. I couldn't find any references that provided this data in this format
Biosample	nmdc:Biosample	tot_depth_water_col	MIXS:0000634								total depth of water column	measurement value	1	meter					Measurement of total depth of water column		500 meter					core field							False			QuantityValue							JsonObj()		total depth of water column	
Biosample	nmdc:Biosample	tot_diss_nitro	MIXS:0000744								total dissolved nitrogen	measurement value	1	microgram per liter					Total dissolved nitrogen concentration, reported as nitrogen, measured by: total dissolved nitrogen = NH4 + NO3NO2 + dissolved organic nitrogen		40 microgram per liter					core field							False			QuantityValue							JsonObj()		total dissolved nitrogen	
Biosample	nmdc:Biosample	tot_inorg_nitro	MIXS:0000745								total inorganic nitrogen	measurement value	1	microgram per liter					Total inorganic nitrogen content		40 microgram per liter					core field							False			QuantityValue							JsonObj()		total inorganic nitrogen	
Biosample	nmdc:Biosample	tot_iron	MIXS:0000105								total iron	measurement value	1	milligram per liter, milligram per kilogram					Concentration of total iron in the sample							core field							False			QuantityValue							JsonObj()		total iron	
Biosample	nmdc:Biosample	tot_nitro	MIXS:0000102								total nitrogen concentration	measurement value	1	microgram per liter, micromole per liter, milligram per liter					Total nitrogen concentration of water samples, calculated by: total nitrogen = total dissolved nitrogen + particulate nitrogen. Can also be measured without filtering, reported as nitrogen		50 micromole per liter					core field							False			QuantityValue							JsonObj()		total nitrogen concentration	
Biosample	nmdc:Biosample	tot_nitro_cont_meth	MIXS:0000338								total nitrogen content method	PMID,DOI or url	1						Reference or method used in determining the total nitrogen		https://doi.org/10.2134/agronmonogr9.2.c32|https://acsess.onlinelibrary.wiley.com/doi/full/10.2136/sssaj2009.0389?casa_token=bm0pYIUdNMgAAAAA%3AOWVRR0STHaOe-afTcTdxn5m1hM8n2ltM0wY-b1iYpYdD9dhwppk5j3LvC2IO5yhOIvyLVeQz4NZRCZo					core field							False			string						{PMID}|{DOI}|{URL}	JsonObj()		total nitrogen content method	
Biosample	nmdc:Biosample	tot_nitro_content	MIXS:0000530								total nitrogen content	measurement value	1	microgram per liter, micromole per liter, milligram per liter					Total nitrogen content of the sample		5 mg N/ L					core field							False			QuantityValue							JsonObj()		total nitrogen content	
Biosample	nmdc:Biosample	tot_org_c_meth	MIXS:0000337								total organic carbon method	PMID,DOI or url	1						Reference or method used in determining total organic carbon		https://doi.org/10.1080/07352680902776556					core field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		total organic carbon method	
Biosample	nmdc:Biosample	tot_org_carb	MIXS:0000533								total organic carbon	measurement value	1	gram Carbon per kilogram sample material					Definition for soil: total organic carbon content of the soil, definition otherwise: total organic carbon content		5 mg N/ L					core field							False			QuantityValue							JsonObj()		total organic carbon	check description. How are they different?
Biosample	nmdc:Biosample	tot_part_carb	MIXS:0000747								total particulate carbon	measurement value	1	microgram per liter, micromole per liter					Total particulate carbon content		35 micromole per liter					core field							False			QuantityValue							JsonObj()		total particulate carbon	
Biosample	nmdc:Biosample	tot_phosp	MIXS:0000117								total phosphorus	measurement value	1	micromole per liter, milligram per liter, parts per million					Total phosphorus concentration in the sample, calculated by: total phosphorus = total dissolved phosphorus + particulate phosphorus		0.03 milligram per liter					core field							False			QuantityValue							JsonObj()		total phosphorus	
Biosample	nmdc:Biosample	tot_phosphate	MIXS:0000689								total phosphate	measurement value	1	microgram per liter, micromole per liter					Total amount or concentration of phosphate							core field							False			QuantityValue							JsonObj()		total phosphate	
Biosample	nmdc:Biosample	tot_sulfur	MIXS:0000419								total sulfur	measurement value	1	milligram per liter, parts per million					Concentration of total sulfur in the sample							core field							False			QuantityValue							JsonObj()		total sulfur	
Biosample	nmdc:Biosample	train_line	MIXS:0000837								train line	enumeration	1						The subway line name		red					core field							False			train_line_enum							JsonObj()		train line	
Biosample	nmdc:Biosample	train_stat_loc	MIXS:0000838								train station collection location	enumeration	1						The train station collection location		forest hills					core field							False			train_stat_loc_enum							JsonObj()		train station collection location	
Biosample	nmdc:Biosample	train_stop_loc	MIXS:0000839								train stop collection location	enumeration	1						The train stop collection location		end					core field							False			train_stop_loc_enum							JsonObj()		train stop collection location	
Biosample	nmdc:Biosample	turbidity	MIXS:0000191								turbidity	measurement value	1	formazin turbidity unit, formazin nephelometric units					Measure of the amount of cloudiness or haziness in water caused by individual particles		0.3 nephelometric turbidity units					core field							False			QuantityValue							JsonObj()		turbidity	
Biosample	nmdc:Biosample	tvdss_of_hcr_press	MIXS:0000397								depth (TVDSS) of hydrocarbon resource pressure	measurement value	1	meter					True vertical depth subsea (TVDSS) of the hydrocarbon resource where the original pressure was measured (e.g. 1578 m).							core field							False			QuantityValue							JsonObj()		depth (TVDSS) of hydrocarbon resource pressure	
Biosample	nmdc:Biosample	tvdss_of_hcr_temp	MIXS:0000394								depth (TVDSS) of hydrocarbon resource temperature	measurement value	1	meter					True vertical depth subsea (TVDSS) of the hydrocarbon resource where the original temperature was measured (e.g. 1345 m).							core field							False			QuantityValue							JsonObj()		depth (TVDSS) of hydrocarbon resource temperature	
Biosample	nmdc:Biosample	typ_occup_density	MIXS:0000771								typical occupant density	measurement value	1						Customary or normal density of occupants		25					core field							False			double							JsonObj()		typical occupant density	
Biosample	nmdc:Biosample	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Biosample	nmdc:Biosample	ventilation_rate	MIXS:0000114								ventilation rate	measurement value	1	cubic meter per minute, liters per second					Ventilation rate of the system in the sampled premises		750 cubic meter per minute					core field							False			QuantityValue							JsonObj()		ventilation rate	
Biosample	nmdc:Biosample	ventilation_type	MIXS:0000756								ventilation type	ventilation type name	1						Ventilation system used in the sampled premises		Operable windows					core field							False			TextValue						{text}	JsonObj()		ventilation type	
Biosample	nmdc:Biosample	vfa	MIXS:0000152								volatile fatty acids	measurement value	1	milligram per liter, parts per million					Concentration of Volatile Fatty Acids in the sample							core field							False			QuantityValue							JsonObj()		volatile fatty acids	
Biosample	nmdc:Biosample	vfa_fw	MIXS:0000408								vfa in formation water	measurement value	1	milligram per liter					Original volatile fatty acid concentration in the hydrocarbon resource							core field							False			QuantityValue							JsonObj()		vfa in formation water	
Biosample	nmdc:Biosample	vis_media	MIXS:0000840								visual media	enumeration	1						The building visual media		3D scans					core field							False			vis_media_enum							JsonObj()		visual media	
Biosample	nmdc:Biosample	viscosity	MIXS:0000126								viscosity	measurement value;measurement value	1	cP at degree Celsius					A measure of oil's resistance¬†to gradual deformation by¬†shear stress¬†or¬†tensile stress (e.g. 3.5 cp; 100 ¬∞C)							core field							False			TextValue						{float} {unit};{float} {unit}	JsonObj()		viscosity	
Biosample	nmdc:Biosample	volatile_org_comp	MIXS:0000115								volatile organic compounds	volatile organic compound name;measurement value	m	microgram per cubic meter, parts per million, nanogram per liter					Concentration of carbon-based chemicals that easily evaporate at room temperature; can report multiple volatile organic compounds by entering numeric values preceded by name of compound		formaldehyde;500 nanogram per liter				True	core field							True			TextValue						{text};{float} {unit}	JsonObj()		volatile organic compounds	
Biosample	nmdc:Biosample	wall_area	MIXS:0000198								wall area	measurement value	1	square meter					The total area of the sampled room's walls							core field							False			QuantityValue							JsonObj()		wall area	
Biosample	nmdc:Biosample	wall_const_type	MIXS:0000841								wall construction type	enumeration	1						The building class of the wall defined by the composition of the building elements and fire-resistance rating.		fire resistive					core field							False			wall_const_type_enum							JsonObj()		wall construction type	
Biosample	nmdc:Biosample	wall_finish_mat	MIXS:0000842								wall finish material	enumeration	1						The material utilized to finish the outer most layer of the wall		wood					core field							False			wall_finish_mat_enum							JsonObj()		wall finish material	
Biosample	nmdc:Biosample	wall_height	MIXS:0000221								wall height	value	1	centimeter					The average height of the walls in the sampled room							core field							False			QuantityValue							JsonObj()		wall height	
Biosample	nmdc:Biosample	wall_loc	MIXS:0000843								wall location	enumeration	1						The relative location of the wall within the room		north					core field							False			wall_loc_enum							JsonObj()		wall location	
Biosample	nmdc:Biosample	wall_surf_treatment	MIXS:0000845								wall surface treatment	enumeration	1						The surface treatment of interior wall		paneling					core field							False			wall_surf_treatment_enum							JsonObj()		wall surface treatment	
Biosample	nmdc:Biosample	wall_texture	MIXS:0000846								wall texture	enumeration	1						The feel, appearance, or consistency of a wall surface		popcorn					core field							False			wall_texture_enum							JsonObj()		wall texture	
Biosample	nmdc:Biosample	wall_thermal_mass	MIXS:0000222								wall thermal mass	measurement value	1	joule per degree Celsius					The ability of the wall to provide inertia against temperature fluctuations. Generally this means concrete or concrete block that is either exposed or covered only with paint							core field							False			QuantityValue							JsonObj()		wall thermal mass	
Biosample	nmdc:Biosample	wall_water_mold	MIXS:0000844								wall signs of water/mold	enumeration	1						Signs of the presence of mold or mildew on a wall		no presence of mold visible					core field							False			TextValue						[presence of mold visible|no presence of mold visible]	JsonObj()		wall signs of water/mold	
Biosample	nmdc:Biosample	wastewater_type	MIXS:0000353								wastewater type	wastewater type name	1						The origin of wastewater such as human waste, rainfall, storm drains, etc.							core field							False			TextValue						{text}	JsonObj()		wastewater type	
Biosample	nmdc:Biosample	water_cont_soil_meth	MIXS:0000323								water content method	PMID,DOI or url	1				Required if providing water content		Reference or method used in determining the water content of soil		J. Nat. Prod. Plant Resour., 2012, 2 (4):500-503|https://dec.alaska.gov/applications/spar/webcalc/definitions.htm					core field							False			string						{PMID}|{DOI}|{URL}	JsonObj()		water content method	Why is it soil water content method in the name but not the title? Is this slot used in other samples?|Soil water content can be measure MANY ways and often, multiple ways are used in one experiment (gravimetric water content and water holding capacity and water filled pore space, to name a few).|Should this be multi valued? How to we manage and validate this?
Biosample	nmdc:Biosample	water_content	MIXS:0000185								water content	string		gram per gram or cubic centimeter per cubic centimeter					Water content measurement		0.75 g water/g dry soil|75% water holding capacity|1.1 g fresh weight/ dry weight|10% water filled pore space					core field							True			string							JsonObj()		water content	value in preferred unit is too limiting. need to change this|check and correct validation so examples are accepted|how to manage multiple water content methods?
Biosample	nmdc:Biosample	water_current	MIXS:0000203								water current	measurement value	1	cubic meter per second, knots					Measurement of magnitude and direction of flow within a fluid		10 cubic meter per second					core field							False			QuantityValue							JsonObj()		water current	
Biosample	nmdc:Biosample	water_cut	MIXS:0000454								water cut	measurement value	1	percent					Current amount of water (%) in a produced fluid stream; or the average of the combined streams							core field							False			QuantityValue							JsonObj()		water cut	
Biosample	nmdc:Biosample	water_feat_size	MIXS:0000223								water feature size	measurement value	1	square meter					The size of the water feature							core field							False			QuantityValue							JsonObj()		water feature size	
Biosample	nmdc:Biosample	water_feat_type	MIXS:0000847								water feature type	enumeration	1						The type of water feature present within the building being sampled		stream					core field							False			water_feat_type_enum							JsonObj()		water feature type	
Biosample	nmdc:Biosample	water_prod_rate	MIXS:0000453								water production rate	measurement value	1	cubic meter per day					Water production rates per well (e.g. 987 m3 / day)							core field							False			QuantityValue							JsonObj()		water production rate	
Biosample	nmdc:Biosample	water_temp_regm	MIXS:0000590								water temperature regimen	measurement value;treatment interval and duration	m	degree Celsius					Information about treatment involving an exposure to water with varying degree of temperature, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple regimens		15 degree Celsius;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M				True	core field							True			TextValue						{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		water temperature regimen	
Biosample	nmdc:Biosample	watering_regm	MIXS:0000591								watering regimen	measurement value;treatment interval and duration	m	milliliter, liter					Information about treatment involving an exposure to watering frequencies, treatment regimen including how many times the treatment was repeated, how long each treatment lasted, and the start and end time of the entire treatment; can include multiple regimens		1 liter;R2/2018-05-11T14:30/2018-05-11T19:30/P1H30M|75% water holding capacity; constant				True	core field							True			TextValue						{float} {unit};{Rn/start_time/end_time/duration}	JsonObj()		watering regimen	
Biosample	nmdc:Biosample	weekday	MIXS:0000848								weekday	enumeration	1						The day of the week when sampling occurred		Sunday					core field							False			weekday_enum							JsonObj()		weekday	
Biosample	nmdc:Biosample	win	MIXS:0000297								well identification number	text	1						A unique identifier of a well or wellbore. This is part of the Global Framework for Well Identification initiative which is compiled by the Professional Petroleum Data Management Association (PPDM) in an effort to improve well identification systems. (Supporting information: https://ppdm.org/ and http://dl.ppdm.org/dl/690)							core field							False			TextValue						{text}	JsonObj()		well identification number	
Biosample	nmdc:Biosample	wind_direction	MIXS:0000757								wind direction	wind direction name	1						Wind direction is the direction from which a wind originates		Northwest					core field							False			TextValue						{text}	JsonObj()		wind direction	
Biosample	nmdc:Biosample	wind_speed	MIXS:0000118								wind speed	measurement value	1	meter per second, kilometer per hour					Speed of wind measured at the time of sampling		21 kilometer per hour					core field							False			QuantityValue							JsonObj()		wind speed	
Biosample	nmdc:Biosample	window_cond	MIXS:0000849								window condition	enumeration	1						The physical condition of the window at the time of sampling		rupture					core field							False			window_cond_enum							JsonObj()		window condition	
Biosample	nmdc:Biosample	window_cover	MIXS:0000850								window covering	enumeration	1						The type of window covering		curtains					core field							False			window_cover_enum							JsonObj()		window covering	
Biosample	nmdc:Biosample	window_horiz_pos	MIXS:0000851								window horizontal position	enumeration	1						The horizontal position of the window on the wall		middle					core field							False			window_horiz_pos_enum							JsonObj()		window horizontal position	
Biosample	nmdc:Biosample	window_loc	MIXS:0000852								window location	enumeration	1						The relative location of the window within the room		west					core field							False			window_loc_enum							JsonObj()		window location	
Biosample	nmdc:Biosample	window_mat	MIXS:0000853								window material	enumeration	1						The type of material used to finish a window		wood					core field							False			window_mat_enum							JsonObj()		window material	
Biosample	nmdc:Biosample	window_open_freq	MIXS:0000246								window open frequency	value	1						The number of times windows are opened per week							core field							False			TextValue							JsonObj()		window open frequency	
Biosample	nmdc:Biosample	window_size	MIXS:0000224								window area/size	measurement value	1	inch, meter					The window's length and width							core field							False			TextValue						{float} {unit} x {float} {unit}	JsonObj()		window area/size	
Biosample	nmdc:Biosample	window_status	MIXS:0000855								window status	enumeration	1						Defines whether the windows were open or closed during environmental testing		open					core field							False			TextValue						[closed|open]	JsonObj()		window status	
Biosample	nmdc:Biosample	window_type	MIXS:0000856								window type	enumeration	1						The type of windows		fixed window					core field							False			window_type_enum							JsonObj()		window type	
Biosample	nmdc:Biosample	window_vert_pos	MIXS:0000857								window vertical position	enumeration	1						The vertical position of the window on the wall		middle					core field							False			window_vert_pos_enum							JsonObj()		window vertical position	
Biosample	nmdc:Biosample	window_water_mold	MIXS:0000854								window signs of water/mold	enumeration	1						Signs of the presence of mold or mildew on the window.		no presence of mold visible					core field							False			TextValue						[presence of mold visible|no presence of mold visible]	JsonObj()		window signs of water/mold	
Biosample	nmdc:Biosample	xylene	MIXS:0000156								xylene	measurement value	1	milligram per liter, parts per million					Concentration of xylene in the sample							core field							False			QuantityValue							JsonObj()		xylene	
Biosample	nmdc:Biosample	zinc									zinc	measurement value	1	mg/kg (ppm)					Concentration of zinc in the sample		2.5 mg/kg															QuantityValue				https://www.ornl.gov/content/bio-scales-0			JsonObj()		zinc	
CalibrationInformation	nmdc:CalibrationInformation	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
CalibrationInformation	nmdc:CalibrationInformation	calibration_object																	the file containing calibration data object																^(nmdc):dobj-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataObject							JsonObj()	{id_nmdc_prefix}:dobj-{id_shoulder}-{id_blade}$		
CalibrationInformation	nmdc:CalibrationInformation	calibration_standard																	the reference standard(s) used for calibration																	CalibrationStandardEnum							JsonObj()			
CalibrationInformation	nmdc:CalibrationInformation	calibration_target																	the target measurement of the calibration																	CalibrationTargetEnum			True				JsonObj()			
CalibrationInformation	nmdc:CalibrationInformation	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
CalibrationInformation	nmdc:CalibrationInformation	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):calib-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:calib-{id_shoulder}-{id_blade}$		
CalibrationInformation	nmdc:CalibrationInformation	internal_calibration																	whether internal calibration was used, if false, external calibration was used																	boolean			True				JsonObj()			
CalibrationInformation	nmdc:CalibrationInformation	name																	A human readable label for an entity																	string							JsonObj()			
CalibrationInformation	nmdc:CalibrationInformation	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	chemical_conversion_category																	The type of chemical conversion process.																	ChemicalConversionCategoryEnum							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	duration																	The elapsed time of an activity.		JsonObj(has_numeric_value=2, has_unit='hours')															QuantityValue							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	has_failure_categorization																							True								True			FailureCategorization							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample							JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	has_output									output								An output from a process.														True		^(nmdc):(procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample							JsonObj()	{id_nmdc_prefix}:(procsm)-{id_shoulder}-{id_blade}$		
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):chcpr-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:chcpr-{id_shoulder}-{id_blade}$		
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	name																	A human readable label for an entity																	string							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	protocol_link																																		Protocol							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	substances_used																	The substances that are combined to enable a ChemicalConversionProcess.						True								True			PortionOfSubstance							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	substances_volume																	The volume of the combined substances that was included in a ChemicalConversionProcess.																	QuantityValue							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	temperature																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The value of a temperature measurement or temperature used in a process.															Not to be confused with the MIXS:0000113		QuantityValue							JsonObj()			
ChemicalConversionProcess	nmdc:ChemicalConversionProcess	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ChemicalEntity	nmdc:ChemicalEntity	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	alternative_names				dcterms:alternative|skos:altLabel													A list of alternative names used to refer to the entity. The distinction between name and alternative names is application-specific.														True			string							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	chemical_formula																	A generic grouping for molecular formulae and empirical formulae																	string							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	definition																	The definition of the ontology term as provided by the ontology.																	string							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											The identifiers for terms from external ontologies can't have their ids constrained to the nmdc namespace	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ChemicalEntity	nmdc:ChemicalEntity	is_obsolete															If true (the ontology term is declared obsolete via the ontology source itself),  the term is no longer considered a valid term to use in an annotation at NMDC, and it no longer has ontology_relation_set records.		A boolean value indicating whether the ontology term is obsolete.																	boolean							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	is_root																	A boolean value indicating whether the ontology term is a root term; it is not a subclass of  any other term.																	boolean							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	name																	A human readable label for an entity																	string							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	relations																						True	True								True			OntologyRelation							JsonObj()			
ChemicalEntity	nmdc:ChemicalEntity	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	chromatographic_category																	The type of chromatography used in a process.																	ChromatographicCategoryEnum							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample							JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	has_output									output								An output from a process.														True		^(nmdc):procsm-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample							JsonObj()	{id_nmdc_prefix}:procsm-{id_shoulder}-{id_blade}$		
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):cspro-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:cspro-{id_shoulder}-{id_blade}$		
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	name																	A human readable label for an entity																	string							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	ordered_mobile_phases																	The solution(s) that moves through a chromatography column.						True		True						True			MobilePhaseSegment							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	protocol_link																																		Protocol							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	stationary_phase																	The material the stationary phase is comprised of used in chromatography.																	StationaryPhaseEnum							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	temperature																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The value of a temperature measurement or temperature used in a process.															Not to be confused with the MIXS:0000113		QuantityValue							JsonObj()			
ChromatographicSeparationProcess	nmdc:ChromatographicSeparationProcess	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	chromatographic_category																	The type of chromatography used in a process.																	ChromatographicCategoryEnum							JsonObj()			
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	description	dcterms:description																a human-readable description of a thing																	string			True				JsonObj()			
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):chrcon-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:chrcon-{id_shoulder}-{id_blade}$		
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	name																	A human readable label for an entity																	string			True				JsonObj()			
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	ordered_mobile_phases																	The solution(s) that moves through a chromatography column.					True	True		True						True			MobilePhaseSegment							JsonObj()			
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	stationary_phase																	The material the stationary phase is comprised of used in chromatography.																	StationaryPhaseEnum							JsonObj()			
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	temperature																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The value of a temperature measurement or temperature used in a process.															Not to be confused with the MIXS:0000113		QuantityValue							JsonObj()			
ChromatographyConfiguration	nmdc:ChromatographyConfiguration	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	has_input									input								An input to a process.														True		^(nmdc):(frsite|site)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Site			True				JsonObj()	{id_nmdc_prefix}:(frsite|site)-{id_shoulder}-{id_blade}$		
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	has_output									output								An output from a process.														True		^(nmdc):bsm-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Biosample			True				JsonObj()	{id_nmdc_prefix}:bsm-{id_shoulder}-{id_blade}$		
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):clsite-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:clsite-{id_shoulder}-{id_blade}$		
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	name																	A human readable label for an entity																	string							JsonObj()			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	protocol_link																																		Protocol							JsonObj()			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
CollectingBiosamplesFromSite	nmdc:CollectingBiosamplesFromSite	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Configuration	nmdc:Configuration	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Configuration	nmdc:Configuration	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Configuration	nmdc:Configuration	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Configuration	nmdc:Configuration	name																	A human readable label for an entity																	string							JsonObj()			
Configuration	nmdc:Configuration	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ControlledIdentifiedTermValue	nmdc:ControlledIdentifiedTermValue	has_raw_value																	"The value that was specified for an annotation in raw form, i.e. a string. E.g. ""2 cm"" or ""2-4 cm"""																	string							JsonObj()			
ControlledIdentifiedTermValue	nmdc:ControlledIdentifiedTermValue	term																	pointer to an ontology class					True										removed 'slot_uri: rdf:type'		OntologyClass			True				JsonObj()			
ControlledIdentifiedTermValue	nmdc:ControlledIdentifiedTermValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ControlledTermValue	nmdc:ControlledTermValue	has_raw_value																	"The value that was specified for an annotation in raw form, i.e. a string. E.g. ""2 cm"" or ""2-4 cm"""																	string							JsonObj()			
ControlledTermValue	nmdc:ControlledTermValue	term																	pointer to an ontology class					True										removed 'slot_uri: rdf:type'		OntologyClass							JsonObj()			
ControlledTermValue	nmdc:ControlledTermValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
CreditAssociation	prov:Association	applied_roles													Identify all CRediT roles associated with this contributor. CRediT Information: https://info.orcid.org/credit-for-research-contribution ; CRediT: https://credit.niso.org/																		True			CreditEnum			True				JsonObj()			
CreditAssociation	prov:Association	applies_to_person																																		PersonValue			True				JsonObj()			
CreditAssociation	prov:Association	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
DataGeneration	nmdc:DataGeneration	add_date																	The date on which the information was added to the database.																	string							JsonObj()			
DataGeneration	nmdc:DataGeneration	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
DataGeneration	nmdc:DataGeneration	analyte_category																	"The type of analyte(s) that were measured in the data generation process and analyzed
  in the Workflow Chain
"																	string			True				JsonObj()			
DataGeneration	nmdc:DataGeneration	associated_studies																	The study associated with a resource.														True		^(nmdc):(sty)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Study			True				JsonObj()	{id_nmdc_prefix}:(sty)-{id_shoulder}-{id_blade}$		
DataGeneration	nmdc:DataGeneration	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
DataGeneration	nmdc:DataGeneration	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
DataGeneration	nmdc:DataGeneration	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
DataGeneration	nmdc:DataGeneration	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample			True				JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
DataGeneration	nmdc:DataGeneration	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataObject							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
DataGeneration	nmdc:DataGeneration	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
DataGeneration	nmdc:DataGeneration	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
DataGeneration	nmdc:DataGeneration	mod_date																	The last date on which the database information was modified.																	string							JsonObj()			
DataGeneration	nmdc:DataGeneration	name																	A human readable label for an entity																	string							JsonObj()			
DataGeneration	nmdc:DataGeneration	principal_investigator									PI								Principal Investigator who led the study and/or generated the dataset.																	PersonValue							JsonObj()			
DataGeneration	nmdc:DataGeneration	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
DataGeneration	nmdc:DataGeneration	protocol_link																																		Protocol							JsonObj()			
DataGeneration	nmdc:DataGeneration	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
DataGeneration	nmdc:DataGeneration	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
DataGeneration	nmdc:DataGeneration	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
DataGeneration	nmdc:DataGeneration	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
DataObject	nmdc:DataObject	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
DataObject	nmdc:DataObject	compression_type																	If provided, specifies the compression type		gzip															string							JsonObj()			consider setting the range to an enum
DataObject	nmdc:DataObject	data_category																	The category of the file, such as instrument data from data generation or processed data from a workflow execution.																	DataCategoryEnum							JsonObj()			
DataObject	nmdc:DataObject	data_object_type																	The type of file represented by the data object.		FT ICR-MS Analysis Results|GC-MS Metabolomics Results															FileTypeEnum							"JsonObj(data_object_type=StructuredAlias({
  'literal_form': 'data_object_type',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
DataObject	nmdc:DataObject	description	dcterms:description																a human-readable description of a thing																	string			True				JsonObj()			
DataObject	nmdc:DataObject	file_size_bytes																	Size of the file in bytes																	bytes							JsonObj()			
DataObject	nmdc:DataObject	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):dobj-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:dobj-{id_shoulder}-{id_blade}$		
DataObject	nmdc:DataObject	in_manifest															A DataObject can be part of multiple manifests, for example, a DataObject could be part of a manifest for a single run of an instrument and a manifest for technical replicates of a single sample.		one or more combinations of other DataObjects that can be analyzed together														True		^^(nmdc):manif-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Manifest							JsonObj()	^{id_nmdc_prefix}:manif-{id_shoulder}-{id_blade}$		
DataObject	nmdc:DataObject	insdc_experiment_identifiers																								external_database_identifiers						insdc_identifiers	True		^insdc.sra:(E|D|S)RX[0-9]{6,}$	external_identifier							JsonObj()			
DataObject	nmdc:DataObject	md5_checksum																	MD5 checksum of file (pre-compressed)																	string							JsonObj()			
DataObject	nmdc:DataObject	name																	A human readable label for an entity																	string			True				JsonObj()			
DataObject	nmdc:DataObject	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
DataObject	nmdc:DataObject	url																																See issue 207 - this clashes with the mixs field		string							JsonObj()			
DataObject	nmdc:DataObject	was_generated_by					prov:wasGeneratedBy									AnonymousSlotExpression({'range': 'WorkflowExecution'})|AnonymousSlotExpression({'range': 'DataGeneration'})																			^^(nmdc):(wfmag|wfmb|wfmgan|wfmgas|wfmsa|wfmp|wfmt|wfmtan|wfmtas|wfnom|wfrbt|wfrqc)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$|^^(nmdc):(omprc|dgms|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	WorkflowExecution							JsonObj()	^{id_nmdc_prefix}:(wfmag|wfmb|wfmgan|wfmgas|wfmsa|wfmp|wfmt|wfmtan|wfmtas|wfnom|wfrbt|wfrqc)-{id_shoulder}-{id_blade}{id_version}$|^{id_nmdc_prefix}:(omprc|dgms|dgns)-{id_shoulder}-{id_blade}$		
Database	nmdc:Database	biosample_set																	This property links a database object to the set of samples within it.						True							object_set	True			Biosample							JsonObj()			
Database	nmdc:Database	calibration_set																	This property links a database object to the set of calibrations within it.						True							object_set	True			CalibrationInformation							JsonObj()			
Database	nmdc:Database	collecting_biosamples_from_site_set																							True							object_set	True			CollectingBiosamplesFromSite							JsonObj()			
Database	nmdc:Database	configuration_set																	This property links a database object to the set of configurations within it.						True							object_set	True			Configuration							JsonObj()			
Database	nmdc:Database	data_generation_set																	This property links a database object to the set of data generations within it.						True							object_set	True			DataGeneration							JsonObj()			
Database	nmdc:Database	data_object_set																	This property links a database object to the set of data objects within it.						True							object_set	True			DataObject							JsonObj()			
Database	nmdc:Database	field_research_site_set																							True							object_set	True			FieldResearchSite							JsonObj()			
Database	nmdc:Database	functional_annotation_agg																						True	True								True			FunctionalAnnotationAggMember							JsonObj()			
Database	nmdc:Database	functional_annotation_set																	This property links a database object to the set of all functional annotations						True							object_set	True			FunctionalAnnotation							JsonObj()			
Database	nmdc:Database	genome_feature_set																	This property links a database object to the set of all features						True							object_set	True			GenomeFeature							JsonObj()			
Database	nmdc:Database	instrument_set																	This property links a database object to the set of instruments within it.						True							object_set	True			Instrument							JsonObj()			
Database	nmdc:Database	manifest_set																	This property links a database object to the set of manifests within it.						True							object_set	True			Manifest							JsonObj()			
Database	nmdc:Database	material_processing_set																	This property links a database object to the set of material processing within it.						True							object_set	True			MaterialProcessing							JsonObj()			
Database	nmdc:Database	processed_sample_set																	This property links a database object to the set of processed samples within it.						True							object_set	True			ProcessedSample							JsonObj()			
Database	nmdc:Database	storage_process_set																	This property links a database object to the set of storage processes within it.						True							object_set	True			StorageProcess							JsonObj()			
Database	nmdc:Database	study_set																	This property links a database object to the set of studies within it.						True							object_set	True			Study							JsonObj()			
Database	nmdc:Database	workflow_execution_set																	This property links a database object to the set of workflow executions.						True							object_set	True			WorkflowExecution							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	duration																	The elapsed time of an activity.		JsonObj(has_numeric_value=2, has_unit='hours')															QuantityValue							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
DissolvingProcess	nmdc:DissolvingProcess	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample							JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
DissolvingProcess	nmdc:DissolvingProcess	has_output									output								An output from a process.														True		^(nmdc):(procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample							JsonObj()	{id_nmdc_prefix}:(procsm)-{id_shoulder}-{id_blade}$		
DissolvingProcess	nmdc:DissolvingProcess	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):dispro-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:dispro-{id_shoulder}-{id_blade}$		
DissolvingProcess	nmdc:DissolvingProcess	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	name																	A human readable label for an entity																	string							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	protocol_link																																		Protocol							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
DissolvingProcess	nmdc:DissolvingProcess	substances_used																	The substances that are combined to enable a ChemicalConversionProcess.					True	True								True			PortionOfSubstance							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	temperature																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The value of a temperature measurement or temperature used in a process.															Not to be confused with the MIXS:0000113		QuantityValue							JsonObj()			
DissolvingProcess	nmdc:DissolvingProcess	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Doi	nmdc:Doi	doi_category																	The resource type the corresponding doi resolves to.		dataset_doi															DoiCategoryEnum			True				JsonObj()			
Doi	nmdc:Doi	doi_provider			NCIT:C74932														The authority, or organization, the DOI is associated with.		ess_dive															DoiProviderEnum							JsonObj()			
Doi	nmdc:Doi	doi_value				OBI:0002110		edam.data:1188			DOI|digital object identifier								A digital object identifier, which is intended to persistantly identify some resource on the web.		doi:10.46936/10.25585/60000880														^doi:10.\d{2,9}/.*$	uriorcurie			True				JsonObj()			
Doi	nmdc:Doi	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	alternative_names				dcterms:alternative|skos:altLabel													A list of alternative names used to refer to the entity. The distinction between name and alternative names is application-specific.														True			string							JsonObj()			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	definition																	The definition of the ontology term as provided by the ontology.																	string							JsonObj()			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											The identifiers for terms from external ontologies can't have their ids constrained to the nmdc namespace	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	is_obsolete															If true (the ontology term is declared obsolete via the ontology source itself),  the term is no longer considered a valid term to use in an annotation at NMDC, and it no longer has ontology_relation_set records.		A boolean value indicating whether the ontology term is obsolete.																	boolean							JsonObj()			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	is_root																	A boolean value indicating whether the ontology term is a root term; it is not a subclass of  any other term.																	boolean							JsonObj()			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	name																	A human readable label for an entity																	string							JsonObj()			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	relations																						True	True								True			OntologyRelation							JsonObj()			
EnvironmentalMaterialTerm	nmdc:EnvironmentalMaterialTerm	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
EukEval	nmdc:EukEval	completeness																	Estimate of the completeness of the metagenome-assembled genome, estimated by a tool like CheckM.												0.0					float							JsonObj()			
EukEval	nmdc:EukEval	contamination																	Estimate of the completeness of the metagenome-assembled genome, estimated by a tool like CheckM.												0.0					float							JsonObj()			
EukEval	nmdc:EukEval	ncbi_lineage															Example root,cellular organisms,Eukaryota,Discoba,Euglenozoa,Diplonemea,Diplonemidae		Comma delimited ordered list of NCBI taxonomy names.																	string							JsonObj()			
EukEval	nmdc:EukEval	ncbi_lineage_tax_ids															Example 1-131567-2759-2611352-33682-191814-2603949		Dash-delimited ordered list of NCBI taxonomy identifiers (TaxId)																^\d+(-\d+)*$	string							JsonObj()			
EukEval	nmdc:EukEval	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Extraction	nmdc:Extraction	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Extraction	nmdc:Extraction	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Extraction	nmdc:Extraction	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
Extraction	nmdc:Extraction	extraction_targets						NCIT:C177560|MIXS:0000037											Provides the target biomolecule that has been separated from a sample during an extraction process.														True	todos, remove nucl_acid_ext from OmicsProcessing (DataGeneration)		ExtractionTargetEnum	1000.0						JsonObj()			
Extraction	nmdc:Extraction	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
Extraction	nmdc:Extraction	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample			True				JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
Extraction	nmdc:Extraction	has_output									output								An output from a process.														True		^(nmdc):(procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample			True				JsonObj()	{id_nmdc_prefix}:(procsm)-{id_shoulder}-{id_blade}$		
Extraction	nmdc:Extraction	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):extrp-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:extrp-{id_shoulder}-{id_blade}$		
Extraction	nmdc:Extraction	input_mass				MS:1000004		MIXS:0000111			sample mass|sample weight								Total mass of sample used in activity.																	QuantityValue							JsonObj()		sample mass used	
Extraction	nmdc:Extraction	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
Extraction	nmdc:Extraction	name																	A human readable label for an entity																	string							JsonObj()			
Extraction	nmdc:Extraction	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
Extraction	nmdc:Extraction	protocol_link																																		Protocol							JsonObj()			
Extraction	nmdc:Extraction	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
Extraction	nmdc:Extraction	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
Extraction	nmdc:Extraction	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
Extraction	nmdc:Extraction	substances_used																	The substances that are combined to enable a ChemicalConversionProcess.					True	True								True			PortionOfSubstance							JsonObj()			
Extraction	nmdc:Extraction	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Extraction	nmdc:Extraction	volume																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The volume of the solvent/solute being used, not the input.																	QuantityValue							JsonObj()			
FailureCategorization	nmdc:FailureCategorization	qc_failure_what															For example, low read count from a sequencer, malformed fastq files, etc.		Provides a summary about what caused a lab or workflow process to fail																	FailureWhatEnum							JsonObj()			
FailureCategorization	nmdc:FailureCategorization	qc_failure_where															If the assembly size was too small to proceed to annotation failure_where would be MetagenomeAssembly.		Describes the nmdc schema class that corresonds to where the failure occurred. Most commonly this would be the same as Class that generated the results.																	FailureWhereEnum							JsonObj()			
FailureCategorization	nmdc:FailureCategorization	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
FieldResearchSite	nmdc:FieldResearchSite	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
FieldResearchSite	nmdc:FieldResearchSite	cur_vegetation	MIXS:0000312								current vegetation	current vegetation type	1						Vegetation classification from one or more standard classification systems, or agricultural crop							core field							False			TextValue						{text}	JsonObj()		current vegetation	
FieldResearchSite	nmdc:FieldResearchSite	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
FieldResearchSite	nmdc:FieldResearchSite	elev	MIXS:0000093								elevation	measurement value							Elevation of the sampling site is its height above a fixed reference point, most commonly the mean sea level. Elevation is mainly used when referring to points on the earth's surface, while altitude is used for points above the surface, such as an aircraft in flight or a spacecraft in orbit.		100 meter					environment field							False			float							JsonObj()		elevation	
FieldResearchSite	nmdc:FieldResearchSite	geo_loc_name	MIXS:0000010								geographic location (country and/or sea,region)	country or sea name (INSDC or GAZ): region(GAZ), specific location name							The geographical origin of the sample as defined by the country or sea name followed by specific region name. Country or sea names should be chosen from the INSDC country list (http://insdc.org/country.html), or the GAZ ontology (http://purl.bioontology.org/ontology/GAZ)		USA: Maryland, Bethesda					environment field							False			TextValue						{term}: {term}, {text}	JsonObj()		geographic location (country and/or sea,region)	
FieldResearchSite	nmdc:FieldResearchSite	habitat																																		string							JsonObj()			
FieldResearchSite	nmdc:FieldResearchSite	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):frsite-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:frsite-{id_shoulder}-{id_blade}$		
FieldResearchSite	nmdc:FieldResearchSite	lat_lon	MIXS:0000009								geographic location (latitude and longitude)	decimal degrees,  limit to 8 decimal points							The geographical origin of the sample as defined by latitude and longitude. The values should be reported in decimal degrees and in WGS84 system		50.586825 6.408977					environment field							False			GeolocationValue						{float} {float}	JsonObj()		geographic location (latitude and longitude)	
FieldResearchSite	nmdc:FieldResearchSite	local_class	MIXS:0000330								soil_taxonomic/local classification	local classification name	1						Soil classification based on local soil classification system							core field							False			TextValue						{text}	JsonObj()		soil_taxonomic/local classification	
FieldResearchSite	nmdc:FieldResearchSite	name																	A human readable label for an entity																	string							JsonObj()			
FieldResearchSite	nmdc:FieldResearchSite	part_of	dcterms:isPartOf								is part of								Links a resource to another resource that either logically or physically includes it.														True		^(nmdc):frsite-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	FieldResearchSite							JsonObj()	{id_nmdc_prefix}:frsite-{id_shoulder}-{id_blade}$		
FieldResearchSite	nmdc:FieldResearchSite	soil_type	MIXS:0000332								soil type	ENVO_00001998	1						Description of the soil type or classification. This field accepts terms under soil (http://purl.obolibrary.org/obo/ENVO_00001998).  Multiple terms can be separated by pipes.		plinthosol [ENVO:00002250]					core field							False			TextValue						{termLabel} {[termID]}	JsonObj()		soil type	
FieldResearchSite	nmdc:FieldResearchSite	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
FiltrationProcess	nmdc:FiltrationProcess	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	conditionings																	Preliminary treatment of either phase with a suitable solution of the other phase (in the absence of main extractable solute(s)) so that when the subsequent equilibration is carried out changes in the (volume) phase ratio or in the concentrations of other components are minimized.								True						True			string							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	container_size																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The volume of the container an analyte is stored in or an activity takes place in																	QuantityValue							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
FiltrationProcess	nmdc:FiltrationProcess	filter_material															Filters are made with a variety of materials: cellulose and derivatives, glass fibre, ceramic, synthetic plastics and fibres. Filters may be naturally porous or be made so by mechanical or other means. Membrane/ceramic filters are prepared with highly controlled pore size in a sheet of suitable material such as polyfluoroethylene, polycarbonate or cellulose esters. Nylon mesh is sometimes used for reinforcement. The pores constitute 80–85% of the filter volume commonly and several pore sizes are available for air sampling (0.45−0.8 μm are commonly employed).		A porous material on which solid particles present in air or other fluid which flows through it are largely caught and retained.																	string							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	filter_pore_size																	A quantitative or qualitative measurement of the physical dimensions of the pores in a material.																	QuantityValue							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	filtration_category																	The type of conditioning applied to a filter, device, etc.																	string							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample							JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
FiltrationProcess	nmdc:FiltrationProcess	has_output									output								An output from a process.														True		^(nmdc):procsm-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample							JsonObj()	{id_nmdc_prefix}:procsm-{id_shoulder}-{id_blade}$		
FiltrationProcess	nmdc:FiltrationProcess	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):filtpr-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:filtpr-{id_shoulder}-{id_blade}$		
FiltrationProcess	nmdc:FiltrationProcess	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	is_pressurized																	Whether or not pressure was applied to a thing or process.																	boolean							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	name																	A human readable label for an entity																	string							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	protocol_link																																		Protocol							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	separation_method																	The method that was used to separate a substance from a solution or mixture.																	SeparationMethodEnum							JsonObj()			
FiltrationProcess	nmdc:FiltrationProcess	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
FiltrationProcess	nmdc:FiltrationProcess	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
FiltrationProcess	nmdc:FiltrationProcess	volume																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The volume of sample filtered.																	QuantityValue							JsonObj()			
FunctionalAnnotation	nmdc:FunctionalAnnotation	feature_category																	A Sequence Ontology term that describes the category of a feature																	ControlledIdentifiedTermValue							JsonObj()			
FunctionalAnnotation	nmdc:FunctionalAnnotation	has_function																																Still missing patterns for COG and RetroRules|These patterns are not yet tied to the listed prefixes. A discussion about that possibility had been started, including the question of whether these lists are intended to be open examples or closed	^(KEGG_PATHWAY:\w{2,4}\d{5}|KEGG.REACTION:R\d+|RHEA:\d{5}|MetaCyc:[A-Za-z0-9+_.%-:]+|EC:\d{1,2}(\.\d{0,3}){0,3}|GO:\d{7}|MetaNetX:(MNXR\d+|EMPTY)|SEED:\w+|KEGG\.ORTHOLOGY:K\d+|EGGNOG:\w+|PFAM:PF\d{5}|TIGRFAM:TIGR\d+|SUPFAM:\w+|CATH:[1-6]\.[0-9]+\.[0-9]+\.[0-9]+|PANTHER.FAMILY:PTHR\d{5}(\:SF\d{1,3})?)$	string							JsonObj()			
FunctionalAnnotation	nmdc:FunctionalAnnotation	subject																																		GeneProduct							JsonObj()			
FunctionalAnnotation	nmdc:FunctionalAnnotation	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
FunctionalAnnotation	nmdc:FunctionalAnnotation	was_generated_by					prov:wasGeneratedBy									AnonymousSlotExpression({'range': 'WorkflowExecution'})|AnonymousSlotExpression({'range': 'DataGeneration'})			provenance for the annotation.															To be consistent with the rest of the NMDC schema we use the PROV annotation model, rather than GPAD	^(nmdc):(wfmgan)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	MetagenomeAnnotation							JsonObj()	{id_nmdc_prefix}:(wfmgan)-{id_shoulder}-{id_blade}{id_version}$		
FunctionalAnnotationAggMember	nmdc:FunctionalAnnotationAggMember	count																	The number of sequences (for a metagenome or metatranscriptome) or spectra (for metaproteomics) associated with the specified function.																	integer			True				JsonObj()			
FunctionalAnnotationAggMember	nmdc:FunctionalAnnotationAggMember	gene_function_id																	The identifier for the gene function.		KEGG.ORTHOLOGY:K00627															uriorcurie			True				JsonObj()			
FunctionalAnnotationAggMember	nmdc:FunctionalAnnotationAggMember	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
FunctionalAnnotationAggMember	nmdc:FunctionalAnnotationAggMember	was_generated_by					prov:wasGeneratedBy									AnonymousSlotExpression({'range': 'WorkflowExecution'})|AnonymousSlotExpression({'range': 'DataGeneration'})																			^(nmdc):(wfmgan|wfmp|wfmtan)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	WorkflowExecution			True				JsonObj()	{id_nmdc_prefix}:(wfmgan|wfmp|wfmtan)-{id_shoulder}-{id_blade}{id_version}$		
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	alternative_names				dcterms:alternative|skos:altLabel													A list of alternative names used to refer to the entity. The distinction between name and alternative names is application-specific.														True			string							JsonObj()			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	definition																	The definition of the ontology term as provided by the ontology.																	string							JsonObj()			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											The identifiers for terms from external ontologies can't have their ids constrained to the nmdc namespace	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	is_obsolete															If true (the ontology term is declared obsolete via the ontology source itself),  the term is no longer considered a valid term to use in an annotation at NMDC, and it no longer has ontology_relation_set records.		A boolean value indicating whether the ontology term is obsolete.																	boolean							JsonObj()			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	is_root																	A boolean value indicating whether the ontology term is a root term; it is not a subclass of  any other term.																	boolean							JsonObj()			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	name																	A human readable label for an entity																	string							JsonObj()			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	relations																						True	True								True			OntologyRelation							JsonObj()			
FunctionalAnnotationTerm	nmdc:FunctionalAnnotationTerm	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
GeneProduct	nmdc:GeneProduct	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
GeneProduct	nmdc:GeneProduct	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
GeneProduct	nmdc:GeneProduct	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
GeneProduct	nmdc:GeneProduct	name																	A human readable label for an entity																	string							JsonObj()			
GeneProduct	nmdc:GeneProduct	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
GenomeFeature	nmdc:GenomeFeature	encodes																	The gene product encoded by this feature. Typically this is used for a CDS feature or gene feature which will encode a protein. It can also be used by a nc transcript ot gene feature that encoded a ncRNA																	GeneProduct							JsonObj()			If we revert Reaction back into the schema, that would be a reasonable domain for this slot
GenomeFeature	nmdc:GenomeFeature	end			biolink:end_interbase_coordinate												"- ""constraint: end > start"" - ""For features that cross the origin of a circular feature,  end = the position of the end + the length of the landmark feature."""		The end of the feature in positive 1-based integer coordinates							gff_coordinate					1.0					integer			True				JsonObj()			
GenomeFeature	nmdc:GenomeFeature	feature_category																	A Sequence Ontology term that describes the category of a feature																	ControlledIdentifiedTermValue							JsonObj()			
GenomeFeature	nmdc:GenomeFeature	feature_type																	TODO: Yuri to write																	string							JsonObj()			
GenomeFeature	nmdc:GenomeFeature	phase				biolink:phase													The phase for a coding sequence entity. For example, phase of a CDS as represented in a GFF3 with a value of 0, 1 or 2.										2.0		0.0					integer							JsonObj()			
GenomeFeature	nmdc:GenomeFeature	seqid																	The ID of the landmark used to establish the coordinate system for the current feature.																	string			True				JsonObj()			change range from string to object
GenomeFeature	nmdc:GenomeFeature	start			biolink:start_interbase_coordinate														The start of the feature in positive 1-based integer coordinates							gff_coordinate					1.0					integer			True				JsonObj()			
GenomeFeature	nmdc:GenomeFeature	strand				biolink:strand													The strand on which a feature is located. Has a value of '+' (sense strand or forward strand) or  '-' (anti-sense strand or reverse strand).																	string							JsonObj()			set the range to an enum?
GenomeFeature	nmdc:GenomeFeature	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
GeolocationValue	nmdc:GeolocationValue	has_raw_value																	The raw value for a geolocation should follow {latitude} {longitude}																	string							JsonObj()			
GeolocationValue	nmdc:GeolocationValue	latitude	wgs84:lat				schema:latitude												latitude		-33.460524															decimal_degree			True				JsonObj()			
GeolocationValue	nmdc:GeolocationValue	longitude	wgs84:long				schema:longitude												longitude		150.168149															decimal_degree			True				JsonObj()			
GeolocationValue	nmdc:GeolocationValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ImageValue	nmdc:ImageValue	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
ImageValue	nmdc:ImageValue	display_order																	When rendering information, this attribute to specify the order in which the information should be rendered.																	integer							JsonObj()			
ImageValue	nmdc:ImageValue	has_raw_value																	"The value that was specified for an annotation in raw form, i.e. a string. E.g. ""2 cm"" or ""2-4 cm"""																	string							JsonObj()			
ImageValue	nmdc:ImageValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ImageValue	nmdc:ImageValue	url																																See issue 207 - this clashes with the mixs field		string							JsonObj()			
InformationObject	nmdc:InformationObject	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
InformationObject	nmdc:InformationObject	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
InformationObject	nmdc:InformationObject	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
InformationObject	nmdc:InformationObject	name																	A human readable label for an entity																	string							JsonObj()			
InformationObject	nmdc:InformationObject	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Instrument	nmdc:Instrument	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Instrument	nmdc:Instrument	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Instrument	nmdc:Instrument	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):inst-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:inst-{id_shoulder}-{id_blade}$		
Instrument	nmdc:Instrument	model																																		InstrumentModelEnum							JsonObj()			
Instrument	nmdc:Instrument	name																	A human readable label for an entity																	string							JsonObj()			
Instrument	nmdc:Instrument	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Instrument	nmdc:Instrument	vendor																																		InstrumentVendorEnum							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
LibraryPreparation	nmdc:LibraryPreparation	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample			True				JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
LibraryPreparation	nmdc:LibraryPreparation	has_output									output								An output from a process.														True		^(nmdc):(procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample			True				JsonObj()	{id_nmdc_prefix}:(procsm)-{id_shoulder}-{id_blade}$		
LibraryPreparation	nmdc:LibraryPreparation	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):libprp-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:libprp-{id_shoulder}-{id_blade}$		
LibraryPreparation	nmdc:LibraryPreparation	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	is_stranded															A value of true means the library is stranded, flase means non-stranded.		Is the (RNA) library stranded or non-stranded (unstranded).																	boolean							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	library_preparation_kit																																		string							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	library_type																			DNA															LibraryTypeEnum							JsonObj()		library type	
LibraryPreparation	nmdc:LibraryPreparation	name																	A human readable label for an entity																	string							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	nucl_acid_amp	MIXS:0000038								nucleic acid amplification	PMID, DOI or URL							A link to a literature reference, electronic resource or a standard operating procedure (SOP), that describes the enzymatic amplification (PCR, TMA, NASBA) of specific nucleic acids		https://phylogenomics.me/protocols/16s-pcr-protocol/					sequencing field							False			TextValue						{PMID}|{DOI}|{URL}	JsonObj()		nucleic acid amplification	
LibraryPreparation	nmdc:LibraryPreparation	pcr_cond	MIXS:0000049								pcr conditions	initial denaturation:degrees_minutes;annealing:degrees_minutes;elongation:degrees_minutes;final elongation:degrees_minutes;total cycles							Description of reaction conditions and components of polymerase chain reaction performed during library preparation		initial denaturation:94_3;annealing:50_1;elongation:72_1.5;final elongation:72_10;35					sequencing field							False			TextValue						initial denaturation:degrees_minutes;annealing:degrees_minutes;elongation:degrees_minutes;final elongation:degrees_minutes;total cycles	JsonObj()		pcr conditions	
LibraryPreparation	nmdc:LibraryPreparation	pcr_cycles				OBI:0002475																														integer							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	pcr_primers	MIXS:0000046								pcr primers	FWD: forward primer sequence;REV:reverse primer sequence							PCR primers that were used to amplify the sequence of the targeted gene, locus or subfragment. This field should contain all the primers used for a single PCR reaction if multiple forward or reverse primers are present in a single PCR reaction. The primer sequence should be reported in uppercase letters		FWD:GTGCCAGCMGCCGCGGTAA;REV:GGACTACHVGGGTWTCTAAT					sequencing field							False			TextValue						FWD:{dna};REV:{dna}	JsonObj()		pcr primers	
LibraryPreparation	nmdc:LibraryPreparation	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	protocol_link																																		Protocol							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
LibraryPreparation	nmdc:LibraryPreparation	stranded_orientation																	Lists the strand orientiation for a stranded RNA library preparation.																	StrandedOrientationEnum							JsonObj()			
LibraryPreparation	nmdc:LibraryPreparation	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MagBin	nmdc:MagBin	bin_name																	Name of the metagenome-assembled genome.																	string			True				JsonObj()			
MagBin	nmdc:MagBin	bin_quality																	The quality of the metagenome-assembled genome based on MIMAG standards (https://doi.org/10.1038/nbt.3893).																	BinQualityEnum							JsonObj()			
MagBin	nmdc:MagBin	completeness																	Estimate of the completeness of the metagenome-assembled genome, estimated by a tool like CheckM.												0.0					float							JsonObj()			
MagBin	nmdc:MagBin	contamination																	Estimate of the completeness of the metagenome-assembled genome, estimated by a tool like CheckM.												0.0					float							JsonObj()			
MagBin	nmdc:MagBin	eukaryotic_evaluation																	Contains results from evaluating if a Metagenome-Assembled Genome is of eukaryotic lineage.																	EukEval							JsonObj()			
MagBin	nmdc:MagBin	gene_count																	Number of genes.												0.0					integer							JsonObj()			
MagBin	nmdc:MagBin	gtdbtk_class				NCBITaxon:class													Taxonomic class assigned by GTDB-Tk.																	string				https://doi.org/10.1093/bioinformatics/btz848			JsonObj()			
MagBin	nmdc:MagBin	gtdbtk_domain				NCBITaxon:superkingdom													Taxonomic domain assigned by GTDB-Tk.																	string				https://doi.org/10.1093/bioinformatics/btz848			JsonObj()			
MagBin	nmdc:MagBin	gtdbtk_family				NCBITaxon:family													Taxonomic family assigned by GTDB-Tk.																	string				https://doi.org/10.1093/bioinformatics/btz848			JsonObj()			
MagBin	nmdc:MagBin	gtdbtk_genus				NCBITaxon:genus													Taxonomic genus assigned by GTDB-Tk.																	string				https://doi.org/10.1093/bioinformatics/btz848			JsonObj()			
MagBin	nmdc:MagBin	gtdbtk_order				NCBITaxon:order													Taxonomic order assigned by GTDB-Tk.																	string				https://doi.org/10.1093/bioinformatics/btz848			JsonObj()			
MagBin	nmdc:MagBin	gtdbtk_phylum				NCBITaxon:phylum													Taxonomic phylum assigned by GTDB-Tk.																	string				https://doi.org/10.1093/bioinformatics/btz848			JsonObj()			
MagBin	nmdc:MagBin	gtdbtk_species				NCBITaxon:species													Taxonomic genus assigned by GTDB-Tk.																	string				https://doi.org/10.1093/bioinformatics/btz848			JsonObj()			
MagBin	nmdc:MagBin	members_id			GENEPIO:0100596														Names of the contigs that make up a metagenome-assembled genome.														True			string							JsonObj()			
MagBin	nmdc:MagBin	num_16s		NCIT:C105370															Number of 16s sequences detected, a subunit of prokaryotic ribosomes.												0.0					integer							JsonObj()			
MagBin	nmdc:MagBin	num_23s		OMIT:0013245															Number of 23 seqeuences detected, a subunit of ribosomes.												0.0					integer							JsonObj()			
MagBin	nmdc:MagBin	num_5s		OMIT:0013248															Number of 5s seqeuences detected, a subunit of ribosomes.												0.0					integer							JsonObj()			
MagBin	nmdc:MagBin	num_t_rna		NCIT:C816															Number of transfer transfer RNAs.												0.0					integer							JsonObj()			
MagBin	nmdc:MagBin	number_of_contig				GENEPIO:0000093													Number of contigs												0.0					integer							JsonObj()			
MagBin	nmdc:MagBin	total_bases																	Total number of basepairs.												0.0					integer							JsonObj()			
MagBin	nmdc:MagBin	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MagsAnalysis	nmdc:MagsAnalysis	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	binned_contig_num																	Number of contigs that ended up in a medium or high quality bin.												0.0					integer							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MagsAnalysis	nmdc:MagsAnalysis	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MagsAnalysis	nmdc:MagsAnalysis	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MagsAnalysis	nmdc:MagsAnalysis	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmag-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmag-{id_shoulder}-{id_blade}{id_version}$		
MagsAnalysis	nmdc:MagsAnalysis	img_identifiers																	A list of identifiers that relate the biosample to records in the IMG database.							external_database_identifiers		1.0					True		^img\.taxon:[a-zA-Z0-9_][a-zA-Z0-9_\/\.]*$	external_identifier							JsonObj()		IMG Identifiers	add is_a or mixin modeling, like other external_database_identifiers|what class would IMG records belong to?! Are they Studies, Biosamples, or something else?
MagsAnalysis	nmdc:MagsAnalysis	input_contig_num																	Total number of input contigs.												0.0					integer							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	low_depth_contig_num																	Number of contigs which were excluded from binning for depth of coverage.												0.0					integer							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	mags_list																	Contains detailed information about each metagenome-assembled genome.						True								True			MagBin							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	name																	A human readable label for an entity																	string							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	protocol_link																																		Protocol							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MagsAnalysis	nmdc:MagsAnalysis	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	too_short_contig_num																	Number of contigs which were excluded from binning for length.												0.0					integer							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MagsAnalysis	nmdc:MagsAnalysis	unbinned_contig_num																	Number of contigs which did not end up in a medium or high quality bin.												0.0					integer							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	version																																		string							JsonObj()			
MagsAnalysis	nmdc:MagsAnalysis	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
Manifest	nmdc:Manifest	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Manifest	nmdc:Manifest	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Manifest	nmdc:Manifest	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):manif-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:manif-{id_shoulder}-{id_blade}$		
Manifest	nmdc:Manifest	manifest_category																	The type of context in which the constituent DataObjects can be analyzed together.																	ManifestCategoryEnum			True				JsonObj()			
Manifest	nmdc:Manifest	name																	A human readable label for an entity																	string							JsonObj()			
Manifest	nmdc:Manifest	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MassSpectrometry	nmdc:MassSpectrometry	add_date																	The date on which the information was added to the database.																	string							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	analyte_category																	"The type of analyte(s) that were measured in the data generation process and analyzed
  in the Workflow Chain
"																	MassSpectrometryEnum			True				JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	associated_studies																	The study associated with a resource.														True		^(nmdc):(sty)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Study			True				JsonObj()	{id_nmdc_prefix}:(sty)-{id_shoulder}-{id_blade}$		
MassSpectrometry	nmdc:MassSpectrometry	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	eluent_introduction_category																	A high-level categorization for how the processed sample is introduced into a mass spectrometer.		liquid_chromatography|direct_infusion_syringe															EluentIntroductionCategoryEnum							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MassSpectrometry	nmdc:MassSpectrometry	generates_calibration															A gas chromatography mass spectromery run generates data to calibrate the retention index		calibration information is generated a process																^(nmdc):calib-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	CalibrationInformation							JsonObj()	{id_nmdc_prefix}:calib-{id_shoulder}-{id_blade}$		
MassSpectrometry	nmdc:MassSpectrometry	has_chromatography_configuration																	The identifier of the associated ChromatographyConfiguration, providing information about how a sample was introduced into the mass spectrometer.																^(nmdc):chrcon-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ChromatographyConfiguration							JsonObj()	{id_nmdc_prefix}:chrcon-{id_shoulder}-{id_blade}$		
MassSpectrometry	nmdc:MassSpectrometry	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample			True				JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
MassSpectrometry	nmdc:MassSpectrometry	has_mass_spectrometry_configuration																	The identifier of the associated MassSpectrometryConfiguration.																^(nmdc):mscon-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	MassSpectrometryConfiguration							JsonObj()	{id_nmdc_prefix}:mscon-{id_shoulder}-{id_blade}$		
MassSpectrometry	nmdc:MassSpectrometry	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataObject							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MassSpectrometry	nmdc:MassSpectrometry	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):(dgms|omprc)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(dgms|omprc)-{id_shoulder}-{id_blade}$		
MassSpectrometry	nmdc:MassSpectrometry	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	mod_date																	The last date on which the database information was modified.																	string							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	name																	A human readable label for an entity																	string							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	principal_investigator									PI								Principal Investigator who led the study and/or generated the dataset.																	PersonValue							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	protocol_link																																		Protocol							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MassSpectrometry	nmdc:MassSpectrometry	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MassSpectrometry	nmdc:MassSpectrometry	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	description	dcterms:description																a human-readable description of a thing																	string			True				JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):mscon-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:mscon-{id_shoulder}-{id_blade}$		
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	ionization_source				MS:1000008													The ionization source used to introduce processed samples into a mass spectrometer																	IonizationSourceEnum							JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	mass_analyzers				MS:1000443													The kind of mass analyzer(s) used during the spectra collection.														True			MassAnalyzerEnum							JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	mass_spectrometry_acquisition_strategy				MS:1003213													Mode of running a mass spectrometer method by which m/z ranges are selected and ions possibly fragment.																	MassSpectrometryAcquisitionStrategyEnum							JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	mass_spectrum_collection_modes																	Indicates whether mass spectra were collected in full profile, reduced profile, or centroid mode during acquisition.														True			MassSpectrumCollectionModeEnum							JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	name																	A human readable label for an entity																	string			True				JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	polarity_mode																	the polarity of which ions are generated and detected																	PolarityModeEnum							JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	resolution_categories																	The relative resolution at which spectra were collected.		['high', 'low']												True			ResolutionCategoryEnum							JsonObj()			
MassSpectrometryConfiguration	nmdc:MassSpectrometryConfiguration	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MaterialEntity	nmdc:MaterialEntity	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MaterialEntity	nmdc:MaterialEntity	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MaterialEntity	nmdc:MaterialEntity	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MaterialEntity	nmdc:MaterialEntity	name																	A human readable label for an entity																	string							JsonObj()			
MaterialEntity	nmdc:MaterialEntity	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MaterialProcessing	nmdc:MaterialProcessing	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MaterialProcessing	nmdc:MaterialProcessing	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample							JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
MaterialProcessing	nmdc:MaterialProcessing	has_output									output								An output from a process.														True		^(nmdc):(procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample							JsonObj()	{id_nmdc_prefix}:(procsm)-{id_shoulder}-{id_blade}$		
MaterialProcessing	nmdc:MaterialProcessing	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MaterialProcessing	nmdc:MaterialProcessing	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	name																	A human readable label for an entity																	string							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	protocol_link																																		Protocol							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MaterialProcessing	nmdc:MaterialProcessing	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MaterialProcessing	nmdc:MaterialProcessing	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetaboliteIdentification	nmdc:MetaboliteIdentification	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetaboliteIdentification	nmdc:MetaboliteIdentification	highest_similarity_score																																		float							JsonObj()			Yuri to fill in description
MetaboliteIdentification	nmdc:MetaboliteIdentification	metabolite_identified																	the specific metabolite identifier																	string							JsonObj()			
MetaboliteIdentification	nmdc:MetaboliteIdentification	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	has_metabolite_identifications																							True								True			MetaboliteIdentification							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmb-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmb-{id_shoulder}-{id_blade}{id_version}$		
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	metabolomics_analysis_category																	The category of metabolomics analysis being performed.																	MetabolomicsAnalysisCategoryEnum			True				JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	name																	A human readable label for an entity																	string							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	protocol_link																																		Protocol							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	uses_calibration															Retenion index calibration data generated by a gas chromatography mass spectromery run is used when analyzing metabolomics data		calibration information is used by a process																^(nmdc):calib-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	CalibrationInformation							JsonObj()	{id_nmdc_prefix}:calib-{id_shoulder}-{id_blade}$		
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	version																																		string							JsonObj()			
MetabolomicsAnalysis	nmdc:MetabolomicsAnalysis	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgms)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgms)-{id_shoulder}-{id_blade}$		
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	gold_analysis_project_identifiers																	identifiers for corresponding analysis projects in GOLD		https://bioregistry.io/gold:Ga0526289					analysis_identifiers						gold_identifiers	True		^gold:Ga[0-9]+$	external_identifier							JsonObj()	^gold:Ga[0-9]+$		
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmgan-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmgan-{id_shoulder}-{id_blade}{id_version}$		
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	img_identifiers																	A list of identifiers that relate the biosample to records in the IMG database.							external_database_identifiers		1.0					True		^img\.taxon:[a-zA-Z0-9_][a-zA-Z0-9_\/\.]*$	external_identifier							JsonObj()		IMG Identifiers	add is_a or mixin modeling, like other external_database_identifiers|what class would IMG records belong to?! Are they Studies, Biosamples, or something else?
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	name																	A human readable label for an entity																	string							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	protocol_link																																		Protocol							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	version																																		string							JsonObj()			
MetagenomeAnnotation	nmdc:MetagenomeAnnotation	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
MetagenomeAssembly	nmdc:MetagenomeAssembly	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	asm_score																	A score for comparing metagenomic assembly quality from same sample.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	contig_bp																	Total size in bp of all contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	contigs																	The sum of the (length*log(length)) of all contigs, times some constant.  Increase the contiguity, the score will increase							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	ctg_l50																	Given a set of contigs, the L50 is defined as the sequence length of the shortest contig at 50% of the total genome length.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	ctg_l90																	The L90 statistic is less than or equal to the L50 statistic; it is the length for which the collection of all contigs of that length or longer contains at least 90% of the sum of the lengths of all contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	ctg_logsum																	Maximum contig length.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	ctg_max																	Maximum contig length.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	ctg_n50																	Given a set of contigs, each with its own length, the N50 count is defined as the smallest number_of_contigs whose length sum makes up half of genome size.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	ctg_n90																	Given a set of contigs, each with its own length, the N90 count is defined as the smallest number of contigs whose length sum makes up 90% of genome size.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	ctg_powsum																	Powersum of all contigs is the same as logsum except that it uses the sum of (length*(length^P)) for some power P (default P=0.25).							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MetagenomeAssembly	nmdc:MetagenomeAssembly	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	gap_pct																	The gap size percentage of all scaffolds.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	gc_avg																	Average of GC content of all contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	gc_std																	Standard deviation of GC content of all contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetagenomeAssembly	nmdc:MetagenomeAssembly	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetagenomeAssembly	nmdc:MetagenomeAssembly	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmgas-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmgas-{id_shoulder}-{id_blade}{id_version}$		
MetagenomeAssembly	nmdc:MetagenomeAssembly	insdc_assembly_identifiers																								assembly_identifiers						insdc_identifiers			^insdc.sra:[A-Z]+[0-9]+(\.[0-9]+)?$	string							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	name																	A human readable label for an entity																	string							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	num_aligned_reads																	The sequence count number of input reads aligned to assembled contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	num_input_reads																	The sequence count number of input reads for assembly.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	protocol_link																																		Protocol							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_bp																	Total size in bp of all scaffolds.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_l50																	Given a set of scaffolds, the L50 is defined as the sequence length of the shortest scaffold at 50% of the total genome length.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_l90																	The L90 statistic is less than or equal to the L50 statistic; it is the length for which the collection of all scaffolds of that length or longer contains at least 90% of the sum of the lengths of all scaffolds.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_l_gt50k																	Total size in bp of all scaffolds greater than 50 KB.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_logsum																	The sum of the (length*log(length)) of all scaffolds, times some constant.  Increase the contiguity, the score will increase							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_max																	Maximum scaffold length.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_n50																	Given a set of scaffolds, each with its own length, the N50 count is defined as the smallest number of scaffolds whose length sum makes up half of genome size.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_n90																	Given a set of scaffolds, each with its own length, the N90 count is defined as the smallest number of scaffolds whose length sum makes up 90% of genome size.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_n_gt50k																	Total sequence count of scaffolds greater than 50 KB.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_pct_gt50k																	Total sequence size percentage of scaffolds greater than 50 KB.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaf_powsum																	Powersum of all scaffolds is the same as logsum except that it uses the sum of (length*(length^P)) for some power P (default P=0.25).							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	scaffolds																	Total sequence count of all scaffolds.							metagenome_assembly_parameter										float							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MetagenomeAssembly	nmdc:MetagenomeAssembly	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetagenomeAssembly	nmdc:MetagenomeAssembly	version																																		string							JsonObj()			
MetagenomeAssembly	nmdc:MetagenomeAssembly	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
MetagenomeSequencing	nmdc:MetagenomeSequencing	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MetagenomeSequencing	nmdc:MetagenomeSequencing	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
MetagenomeSequencing	nmdc:MetagenomeSequencing	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetagenomeSequencing	nmdc:MetagenomeSequencing	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmsa-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmsa-{id_shoulder}-{id_blade}{id_version}$		
MetagenomeSequencing	nmdc:MetagenomeSequencing	name																	A human readable label for an entity																	string							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	protocol_link																																		Protocol							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MetagenomeSequencing	nmdc:MetagenomeSequencing	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetagenomeSequencing	nmdc:MetagenomeSequencing	version																																		string							JsonObj()			
MetagenomeSequencing	nmdc:MetagenomeSequencing	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmp-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmp-{id_shoulder}-{id_blade}{id_version}$		
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	metaproteomics_analysis_category																	The category of metaproteomics analysis being performed.																	MetaproteomicsAnalysisCategoryEnum			True				JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	name																	A human readable label for an entity																	string							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	protocol_link																																		Protocol							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	version																																		string							JsonObj()			
MetaproteomicsAnalysis	nmdc:MetaproteomicsAnalysis	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgms)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgms)-{id_shoulder}-{id_blade}$		
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	gold_analysis_project_identifiers																	identifiers for corresponding analysis projects in GOLD		https://bioregistry.io/gold:Ga0526289					analysis_identifiers						gold_identifiers	True		^gold:Ga[0-9]+$	external_identifier							JsonObj()	^gold:Ga[0-9]+$		
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmtan-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmtan-{id_shoulder}-{id_blade}{id_version}$		
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	img_identifiers																	A list of identifiers that relate the biosample to records in the IMG database.							external_database_identifiers		1.0					True		^img\.taxon:[a-zA-Z0-9_][a-zA-Z0-9_\/\.]*$	external_identifier							JsonObj()		IMG Identifiers	add is_a or mixin modeling, like other external_database_identifiers|what class would IMG records belong to?! Are they Studies, Biosamples, or something else?
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	name																	A human readable label for an entity																	string							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	protocol_link																																		Protocol							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	version																																		string							JsonObj()			
MetatranscriptomeAnnotation	nmdc:MetatranscriptomeAnnotation	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	asm_score																	A score for comparing metagenomic assembly quality from same sample.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	contig_bp																	Total size in bp of all contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	contigs																	The sum of the (length*log(length)) of all contigs, times some constant.  Increase the contiguity, the score will increase							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	ctg_l50																	Given a set of contigs, the L50 is defined as the sequence length of the shortest contig at 50% of the total genome length.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	ctg_l90																	The L90 statistic is less than or equal to the L50 statistic; it is the length for which the collection of all contigs of that length or longer contains at least 90% of the sum of the lengths of all contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	ctg_logsum																	Maximum contig length.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	ctg_max																	Maximum contig length.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	ctg_n50																	Given a set of contigs, each with its own length, the N50 count is defined as the smallest number_of_contigs whose length sum makes up half of genome size.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	ctg_n90																	Given a set of contigs, each with its own length, the N90 count is defined as the smallest number of contigs whose length sum makes up 90% of genome size.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	ctg_powsum																	Powersum of all contigs is the same as logsum except that it uses the sum of (length*(length^P)) for some power P (default P=0.25).							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	gap_pct																	The gap size percentage of all scaffolds.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	gc_avg																	Average of GC content of all contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	gc_std																	Standard deviation of GC content of all contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmtas-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmtas-{id_shoulder}-{id_blade}{id_version}$		
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	insdc_assembly_identifiers																								assembly_identifiers						insdc_identifiers			^insdc.sra:[A-Z]+[0-9]+(\.[0-9]+)?$	string							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	name																	A human readable label for an entity																	string							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	num_aligned_reads																	The sequence count number of input reads aligned to assembled contigs.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	num_input_reads																	The sequence count number of input reads for assembly.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	protocol_link																																		Protocol							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_bp																	Total size in bp of all scaffolds.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_l50																	Given a set of scaffolds, the L50 is defined as the sequence length of the shortest scaffold at 50% of the total genome length.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_l90																	The L90 statistic is less than or equal to the L50 statistic; it is the length for which the collection of all scaffolds of that length or longer contains at least 90% of the sum of the lengths of all scaffolds.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_l_gt50k																	Total size in bp of all scaffolds greater than 50 KB.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_logsum																	The sum of the (length*log(length)) of all scaffolds, times some constant.  Increase the contiguity, the score will increase							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_max																	Maximum scaffold length.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_n50																	Given a set of scaffolds, each with its own length, the N50 count is defined as the smallest number of scaffolds whose length sum makes up half of genome size.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_n90																	Given a set of scaffolds, each with its own length, the N90 count is defined as the smallest number of scaffolds whose length sum makes up 90% of genome size.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_n_gt50k																	Total sequence count of scaffolds greater than 50 KB.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_pct_gt50k																	Total sequence size percentage of scaffolds greater than 50 KB.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaf_powsum																	Powersum of all scaffolds is the same as logsum except that it uses the sum of (length*(length^P)) for some power P (default P=0.25).							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	scaffolds																	Total sequence count of all scaffolds.							metagenome_assembly_parameter										float							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	version																																		string							JsonObj()			
MetatranscriptomeAssembly	nmdc:MetatranscriptomeAssembly	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfmtex-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfmtex-{id_shoulder}-{id_blade}{id_version}$		
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	img_identifiers																	A list of identifiers that relate the biosample to records in the IMG database.							external_database_identifiers		1.0					True		^img\.taxon:[a-zA-Z0-9_][a-zA-Z0-9_\/\.]*$	external_identifier							JsonObj()		IMG Identifiers	add is_a or mixin modeling, like other external_database_identifiers|what class would IMG records belong to?! Are they Studies, Biosamples, or something else?
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	name																	A human readable label for an entity																	string							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	protocol_link																																		Protocol							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	version																																		string							JsonObj()			
MetatranscriptomeExpressionAnalysis	nmdc:MetatranscriptomeExpressionAnalysis	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
MixingProcess	nmdc:MixingProcess	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
MixingProcess	nmdc:MixingProcess	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
MixingProcess	nmdc:MixingProcess	duration																	The elapsed time of an activity.		JsonObj(has_numeric_value=2, has_unit='hours')															QuantityValue							JsonObj()			
MixingProcess	nmdc:MixingProcess	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
MixingProcess	nmdc:MixingProcess	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
MixingProcess	nmdc:MixingProcess	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample							JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
MixingProcess	nmdc:MixingProcess	has_output									output								The mixed sample.														True		^(nmdc):procsm-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample							JsonObj()	{id_nmdc_prefix}:procsm-{id_shoulder}-{id_blade}$		
MixingProcess	nmdc:MixingProcess	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):mixpro-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:mixpro-{id_shoulder}-{id_blade}$		
MixingProcess	nmdc:MixingProcess	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
MixingProcess	nmdc:MixingProcess	name																	A human readable label for an entity																	string							JsonObj()			
MixingProcess	nmdc:MixingProcess	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
MixingProcess	nmdc:MixingProcess	protocol_link																																		Protocol							JsonObj()			
MixingProcess	nmdc:MixingProcess	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
MixingProcess	nmdc:MixingProcess	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
MixingProcess	nmdc:MixingProcess	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
MixingProcess	nmdc:MixingProcess	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MobilePhaseSegment	nmdc:MobilePhaseSegment	duration																	The elapsed time of an activity.		JsonObj(has_numeric_value=2, has_unit='hours')															QuantityValue							JsonObj()			
MobilePhaseSegment	nmdc:MobilePhaseSegment	substances_used																	The substances that are combined to enable a ChemicalConversionProcess.					True	True								True			PortionOfSubstance							JsonObj()			
MobilePhaseSegment	nmdc:MobilePhaseSegment	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
MobilePhaseSegment	nmdc:MobilePhaseSegment	volume																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The volume of a substance.																	QuantityValue							JsonObj()			
NamedThing	nmdc:NamedThing	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
NamedThing	nmdc:NamedThing	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
NamedThing	nmdc:NamedThing	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
NamedThing	nmdc:NamedThing	name																	A human readable label for an entity																	string							JsonObj()			
NamedThing	nmdc:NamedThing	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
NomAnalysis	nmdc:NomAnalysis	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
NomAnalysis	nmdc:NomAnalysis	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
NomAnalysis	nmdc:NomAnalysis	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
NomAnalysis	nmdc:NomAnalysis	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
NomAnalysis	nmdc:NomAnalysis	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
NomAnalysis	nmdc:NomAnalysis	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfnom-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfnom-{id_shoulder}-{id_blade}{id_version}$		
NomAnalysis	nmdc:NomAnalysis	name																	A human readable label for an entity																	string							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	protocol_link																																		Protocol							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
NomAnalysis	nmdc:NomAnalysis	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
NomAnalysis	nmdc:NomAnalysis	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
NomAnalysis	nmdc:NomAnalysis	uses_calibration															Retenion index calibration data generated by a gas chromatography mass spectromery run is used when analyzing metabolomics data		calibration information is used by a process																^(nmdc):calib-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	CalibrationInformation							JsonObj()	{id_nmdc_prefix}:calib-{id_shoulder}-{id_blade}$		
NomAnalysis	nmdc:NomAnalysis	version																																		string							JsonObj()			
NomAnalysis	nmdc:NomAnalysis	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgms)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgms)-{id_shoulder}-{id_blade}$		
NucleotideSequencing	nmdc:NucleotideSequencing	add_date																	The date on which the information was added to the database.																	string							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	analyte_category																	"The type of analyte(s) that were measured in the data generation process and analyzed
  in the Workflow Chain
"																	NucleotideSequencingEnum			True				JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	associated_studies																	The study associated with a resource.														True		^(nmdc):(sty)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Study			True				JsonObj()	{id_nmdc_prefix}:(sty)-{id_shoulder}-{id_blade}$		
NucleotideSequencing	nmdc:NucleotideSequencing	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
NucleotideSequencing	nmdc:NucleotideSequencing	gold_sequencing_project_identifiers																	identifiers for corresponding sequencing project in GOLD		https://bioregistry.io/gold:Gp0108335					omics_processing_identifiers						gold_identifiers	True		^gold:Gp[0-9]+$	external_identifier							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample			True				JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
NucleotideSequencing	nmdc:NucleotideSequencing	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataObject							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
NucleotideSequencing	nmdc:NucleotideSequencing	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):(dgns|omprc)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(dgns|omprc)-{id_shoulder}-{id_blade}$		
NucleotideSequencing	nmdc:NucleotideSequencing	insdc_bioproject_identifiers									NCBI bioproject identifiers|DDBJ bioproject identifiers						these are distinct IDs from INSDC SRA/ENA project identifiers, but are usually(?) one to one		identifiers for corresponding project in INSDC Bioproject		https://bioregistry.io/bioproject:PRJNA366857					study_identifiers						insdc_identifiers	True		^bioproject:PRJ[DEN][A-Z][0-9]+$	external_identifier				https://www.ncbi.nlm.nih.gov/bioproject/|https://www.ddbj.nig.ac.jp/bioproject/index-e.html			JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	insdc_experiment_identifiers																								external_database_identifiers						insdc_identifiers	True		^insdc.sra:(E|D|S)RX[0-9]{6,}$	external_identifier							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	mod_date																	The last date on which the database information was modified.																	string							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	name																	A human readable label for an entity																	string							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	ncbi_project_name																																		string							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	principal_investigator									PI								Principal Investigator who led the study and/or generated the dataset.																	PersonValue							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	protocol_link																																		Protocol							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
NucleotideSequencing	nmdc:NucleotideSequencing	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
NucleotideSequencing	nmdc:NucleotideSequencing	target_gene	MIXS:0000044								target gene	gene name							Targeted gene or locus name for marker gene studies		16S rRNA, 18S rRNA, nif, amoA, rpo					sequencing field							False			TargetGeneEnum						{text}	JsonObj()		target gene	
NucleotideSequencing	nmdc:NucleotideSequencing	target_subfragment	MIXS:0000045								target subfragment	gene fragment name							Name of subfragment of a gene or locus. Important to e.g. identify special regions on marker genes like V6 on 16S rRNA		V6, V9, ITS					sequencing field							False			TextValue						{text}	JsonObj()		target subfragment	
NucleotideSequencing	nmdc:NucleotideSequencing	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
OntologyClass	nmdc:OntologyClass	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
OntologyClass	nmdc:OntologyClass	alternative_names				dcterms:alternative|skos:altLabel													A list of alternative names used to refer to the entity. The distinction between name and alternative names is application-specific.														True			string							JsonObj()			
OntologyClass	nmdc:OntologyClass	definition																	The definition of the ontology term as provided by the ontology.																	string							JsonObj()			
OntologyClass	nmdc:OntologyClass	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
OntologyClass	nmdc:OntologyClass	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											The identifiers for terms from external ontologies can't have their ids constrained to the nmdc namespace	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
OntologyClass	nmdc:OntologyClass	is_obsolete															If true (the ontology term is declared obsolete via the ontology source itself),  the term is no longer considered a valid term to use in an annotation at NMDC, and it no longer has ontology_relation_set records.		A boolean value indicating whether the ontology term is obsolete.																	boolean							JsonObj()			
OntologyClass	nmdc:OntologyClass	is_root																	A boolean value indicating whether the ontology term is a root term; it is not a subclass of  any other term.																	boolean							JsonObj()			
OntologyClass	nmdc:OntologyClass	name																	A human readable label for an entity																	string							JsonObj()			
OntologyClass	nmdc:OntologyClass	relations																						True	True								True			OntologyRelation							JsonObj()			
OntologyClass	nmdc:OntologyClass	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
OntologyRelation	nmdc:OntologyRelation	object																																		OntologyClass			True				JsonObj()			
OntologyRelation	nmdc:OntologyRelation	predicate																																		OntologyClass			True				JsonObj()			
OntologyRelation	nmdc:OntologyRelation	subject																																		OntologyClass			True				JsonObj()			
OntologyRelation	nmdc:OntologyRelation	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
OrthologyGroup	nmdc:OrthologyGroup	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
OrthologyGroup	nmdc:OrthologyGroup	alternative_names				dcterms:alternative|skos:altLabel													A list of alternative names used to refer to the entity. The distinction between name and alternative names is application-specific.														True			string							JsonObj()			
OrthologyGroup	nmdc:OrthologyGroup	definition																	The definition of the ontology term as provided by the ontology.																	string							JsonObj()			
OrthologyGroup	nmdc:OrthologyGroup	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
OrthologyGroup	nmdc:OrthologyGroup	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											The identifiers for terms from external ontologies can't have their ids constrained to the nmdc namespace	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
OrthologyGroup	nmdc:OrthologyGroup	is_obsolete															If true (the ontology term is declared obsolete via the ontology source itself),  the term is no longer considered a valid term to use in an annotation at NMDC, and it no longer has ontology_relation_set records.		A boolean value indicating whether the ontology term is obsolete.																	boolean							JsonObj()			
OrthologyGroup	nmdc:OrthologyGroup	is_root																	A boolean value indicating whether the ontology term is a root term; it is not a subclass of  any other term.																	boolean							JsonObj()			
OrthologyGroup	nmdc:OrthologyGroup	name																	A human readable label for an entity																	string							JsonObj()			
OrthologyGroup	nmdc:OrthologyGroup	relations																						True	True								True			OntologyRelation							JsonObj()			
OrthologyGroup	nmdc:OrthologyGroup	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Pathway	nmdc:Pathway	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Pathway	nmdc:Pathway	alternative_names				dcterms:alternative|skos:altLabel													A list of alternative names used to refer to the entity. The distinction between name and alternative names is application-specific.														True			string							JsonObj()			
Pathway	nmdc:Pathway	definition																	The definition of the ontology term as provided by the ontology.																	string							JsonObj()			
Pathway	nmdc:Pathway	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Pathway	nmdc:Pathway	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											The identifiers for terms from external ontologies can't have their ids constrained to the nmdc namespace	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Pathway	nmdc:Pathway	is_obsolete															If true (the ontology term is declared obsolete via the ontology source itself),  the term is no longer considered a valid term to use in an annotation at NMDC, and it no longer has ontology_relation_set records.		A boolean value indicating whether the ontology term is obsolete.																	boolean							JsonObj()			
Pathway	nmdc:Pathway	is_root																	A boolean value indicating whether the ontology term is a root term; it is not a subclass of  any other term.																	boolean							JsonObj()			
Pathway	nmdc:Pathway	name																	A human readable label for an entity																	string							JsonObj()			
Pathway	nmdc:Pathway	relations																						True	True								True			OntologyRelation							JsonObj()			
Pathway	nmdc:Pathway	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
PersonValue	nmdc:PersonValue	email	schema:email												Email address for this person.				An email address for an entity such as a person. This should be the primary email address used.																	string							JsonObj()			
PersonValue	nmdc:PersonValue	has_raw_value																	The full name of the Investigator in format FIRST LAST.															"May eventually be deprecated in favor of ""name""."		string							JsonObj()			
PersonValue	nmdc:PersonValue	name													First name, middle initial, and last name of this person.				The full name of the Investigator. It should follow the format FIRST [MIDDLE NAME| MIDDLE INITIAL] LAST, where MIDDLE NAME| MIDDLE INITIAL is optional.																	string							JsonObj()			
PersonValue	nmdc:PersonValue	orcid													Open Researcher and Contributor ID for this person. See https://orcid.org				The ORCID of a person.																	string							JsonObj()			
PersonValue	nmdc:PersonValue	profile_image_url																	A url that points to an image of a person.																	string							JsonObj()			
PersonValue	nmdc:PersonValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
PersonValue	nmdc:PersonValue	websites															DOIs should not be included as websites. Instead, use the associated_dois slot.|A consortium's homepage website should be included in the homepage_website slot, not in websites.|consortium is a convenience term for a Study whose study_category value is consortium|the website slot and its subproperties are virtually identical to the url slot, except that they are multivalued and url is single-valued.		A list of websites that are associated with the entity.														True		^[Hh][Tt][Tt][Pp][Ss]?:\/\/(?!.*[Dd][Oo][Ii]\.[Oo][Rr][Gg]).*$	string				nmdc:url			JsonObj()			
PlannedProcess	OBI:0000011	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
PlannedProcess	OBI:0000011	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
PlannedProcess	OBI:0000011	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
PlannedProcess	OBI:0000011	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
PlannedProcess	OBI:0000011	has_input									input								An input to a process.														True			NamedThing							JsonObj()			
PlannedProcess	OBI:0000011	has_output									output								An output from a process.														True			NamedThing							JsonObj()			
PlannedProcess	OBI:0000011	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
PlannedProcess	OBI:0000011	name																	A human readable label for an entity																	string							JsonObj()			
PlannedProcess	OBI:0000011	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
PlannedProcess	OBI:0000011	protocol_link																																		Protocol							JsonObj()			
PlannedProcess	OBI:0000011	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
PlannedProcess	OBI:0000011	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
PlannedProcess	OBI:0000011	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
PlannedProcess	OBI:0000011	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Pooling	nmdc:Pooling	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Pooling	nmdc:Pooling	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Pooling	nmdc:Pooling	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
Pooling	nmdc:Pooling	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
Pooling	nmdc:Pooling	has_input									input								An input to a process.											2.0			True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample			True				JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
Pooling	nmdc:Pooling	has_output									output								An output from a process.									1.0		1.0			True		^(nmdc):procsm-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample			True				JsonObj()	{id_nmdc_prefix}:procsm-{id_shoulder}-{id_blade}$		
Pooling	nmdc:Pooling	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):poolp-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:poolp-{id_shoulder}-{id_blade}$		
Pooling	nmdc:Pooling	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
Pooling	nmdc:Pooling	name																	A human readable label for an entity																	string							JsonObj()			
Pooling	nmdc:Pooling	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
Pooling	nmdc:Pooling	protocol_link																																		Protocol							JsonObj()			
Pooling	nmdc:Pooling	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
Pooling	nmdc:Pooling	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
Pooling	nmdc:Pooling	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
Pooling	nmdc:Pooling	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
PortionOfSubstance	nmdc:PortionOfSubstance	final_concentration																	When solutions A (containing substance X) and B are combined together, this slot captures the concentration of X in the combination							concentration										QuantityValue							JsonObj()			
PortionOfSubstance	nmdc:PortionOfSubstance	known_as																	The substance from which a portion was taken.																	ChemicalEntityEnum							JsonObj()			
PortionOfSubstance	nmdc:PortionOfSubstance	mass				PATO:0000125													A physical quality that inheres in a bearer by virtue of the proportion of the bearer's amount of matter.																	QuantityValue							JsonObj()		mass	
PortionOfSubstance	nmdc:PortionOfSubstance	sample_state_information																	The chemical phase of a pure sample, or the state of a mixed sample																	SampleStateEnum							JsonObj()			
PortionOfSubstance	nmdc:PortionOfSubstance	source_concentration																	When solutions A (containing substance X) and B are combined together, this slot captures the concentration of X in solution A							concentration										QuantityValue							JsonObj()			
PortionOfSubstance	nmdc:PortionOfSubstance	substance_role																	The role of a substance in a process																	SubstanceRoleEnum							JsonObj()			
PortionOfSubstance	nmdc:PortionOfSubstance	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
PortionOfSubstance	nmdc:PortionOfSubstance	volume																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The volume of a substance.																	QuantityValue							JsonObj()			
ProcessedSample	nmdc:ProcessedSample	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
ProcessedSample	nmdc:ProcessedSample	biomaterial_purity																																		QuantityValue							JsonObj()			
ProcessedSample	nmdc:ProcessedSample	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
ProcessedSample	nmdc:ProcessedSample	dna_absorb1															Recommended value is between 1 and 3.		260/280 measurement of DNA sample purity		2.02					biomaterial_purity										float	7.0	True			JGI-Metagenomics		JsonObj()		DNA absorbance 260/280	
ProcessedSample	nmdc:ProcessedSample	dna_concentration															Units must be in ng/uL. Enter the numerical part only. Must be calculated using a fluorometric method. Acceptable values are 0-2000.				100								2000.0		0.0					float	5.0	True		nmdc:nucleic_acid_concentration	JGI-Metagenomics		JsonObj()		DNA concentration in ng/ul	
ProcessedSample	nmdc:ProcessedSample	external_database_identifiers			skos:closeMatch				True								The value of this field is always a registered CURIE		Link to corresponding identifier in external database							alternative_identifiers							True	had tried ranges of external identifier and string	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	external_identifier							JsonObj()			
ProcessedSample	nmdc:ProcessedSample	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):procsm-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:procsm-{id_shoulder}-{id_blade}$		
ProcessedSample	nmdc:ProcessedSample	name																	A human readable label for an entity																	string							JsonObj()			
ProcessedSample	nmdc:ProcessedSample	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Protocol	nmdc:Protocol	name																	A human readable label for an entity																	string							JsonObj()			
Protocol	nmdc:Protocol	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Protocol	nmdc:Protocol	url																																See issue 207 - this clashes with the mixs field		string							JsonObj()			
QuantityValue	nmdc:QuantityValue	has_maximum_numeric_value																	The maximum value part, expressed as number, of the quantity value when the value covers a range.							has_numeric_value										decimal							JsonObj()			
QuantityValue	nmdc:QuantityValue	has_minimum_numeric_value																	The minimum value part, expressed as number, of the quantity value when the value covers a range.							has_numeric_value										decimal							JsonObj()			
QuantityValue	nmdc:QuantityValue	has_numeric_value					qud:quantityValue|schema:value												The number part of the quantity																	decimal							JsonObj()			
QuantityValue	nmdc:QuantityValue	has_raw_value																	Unnormalized atomic string representation, should in syntax {number} {unit}																	string							JsonObj()			
QuantityValue	nmdc:QuantityValue	has_unit					qud:unit|schema:unitCode				scale								The unit of the quantity																	unit							JsonObj()			
QuantityValue	nmdc:QuantityValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfrbt-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfrbt-{id_shoulder}-{id_blade}{id_version}$		
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	name																	A human readable label for an entity																	string							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	protocol_link																																		Protocol							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	version																																		string							JsonObj()			
ReadBasedTaxonomyAnalysis	nmdc:ReadBasedTaxonomyAnalysis	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
ReadQcAnalysis	nmdc:ReadQcAnalysis	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
ReadQcAnalysis	nmdc:ReadQcAnalysis	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
ReadQcAnalysis	nmdc:ReadQcAnalysis	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
ReadQcAnalysis	nmdc:ReadQcAnalysis	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):wfrqc-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})(\.[0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:wfrqc-{id_shoulder}-{id_blade}{id_version}$		
ReadQcAnalysis	nmdc:ReadQcAnalysis	input_base_count																	The nucleotide base count number of input reads for QC analysis.							read_qc_analysis_statistic										float							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	input_read_bases																	TODO      																	float							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	input_read_count																	The sequence count number of input reads for QC analysis.							read_qc_analysis_statistic										float							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	name																	A human readable label for an entity																	string							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	output_base_count																	After QC analysis nucleotide base count number.							read_qc_analysis_statistic										float							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	output_read_bases																	TODO																	float							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	output_read_count																	After QC analysis sequence count number.							read_qc_analysis_statistic										float							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	protocol_link																																		Protocol							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
ReadQcAnalysis	nmdc:ReadQcAnalysis	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
ReadQcAnalysis	nmdc:ReadQcAnalysis	version																																		string							JsonObj()			
ReadQcAnalysis	nmdc:ReadQcAnalysis	was_informed_by					prov:wasInformedBy																												^(nmdc):(omprc|dgns)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:(omprc|dgns)-{id_shoulder}-{id_blade}$		
Sample	nmdc:Sample	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Sample	nmdc:Sample	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Sample	nmdc:Sample	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Sample	nmdc:Sample	name																	A human readable label for an entity																	string							JsonObj()			
Sample	nmdc:Sample	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Site	nmdc:Site	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Site	nmdc:Site	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
Site	nmdc:Site	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Site	nmdc:Site	name																	A human readable label for an entity																	string							JsonObj()			
Site	nmdc:Site	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
StorageProcess	nmdc:StorageProcess	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
StorageProcess	nmdc:StorageProcess	contained_in																	A type of container.		test tube|falcon tube|whirlpak															ContainerCategoryEnum							JsonObj()			
StorageProcess	nmdc:StorageProcess	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
StorageProcess	nmdc:StorageProcess	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
StorageProcess	nmdc:StorageProcess	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
StorageProcess	nmdc:StorageProcess	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
StorageProcess	nmdc:StorageProcess	has_output									output								An output from a process.														True		^(nmdc):procsm-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:procsm-{id_shoulder}-{id_blade}$		
StorageProcess	nmdc:StorageProcess	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):storpr-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:storpr-{id_shoulder}-{id_blade}$		
StorageProcess	nmdc:StorageProcess	name																	A human readable label for an entity																	string							JsonObj()			
StorageProcess	nmdc:StorageProcess	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
StorageProcess	nmdc:StorageProcess	protocol_link																																		Protocol							JsonObj()			
StorageProcess	nmdc:StorageProcess	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
StorageProcess	nmdc:StorageProcess	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
StorageProcess	nmdc:StorageProcess	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
StorageProcess	nmdc:StorageProcess	substances_used																	The substance(s) that a processed sample is stored in.					True	True								True			PortionOfSubstance							JsonObj()			
StorageProcess	nmdc:StorageProcess	temperature																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The value of a temperature measurement or temperature used in a process.															Not to be confused with the MIXS:0000113		QuantityValue							JsonObj()			
StorageProcess	nmdc:StorageProcess	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Study	nmdc:Study	alternative_descriptions																	A list of alternative descriptions for the entity. The distinction between description and alternative descriptions is application-specific.														True			string							JsonObj()			
Study	nmdc:Study	alternative_identifiers																	Unique identifier for a study submitted to additional resources. Matches that which has been submitted to NMDC														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
Study	nmdc:Study	alternative_names				dcterms:alternative|skos:altLabel									Project, study, or sample set names the are also associated with this submission or other names / identifiers for this study.				A list of alternative names used to refer to the entity. The distinction between name and alternative names is application-specific.														True			string							JsonObj()			
Study	nmdc:Study	alternative_titles				dcterms:alternative													A list of alternative titles for the entity. The distinction between title and alternative titles is application-specific.														True			string							JsonObj()			
Study	nmdc:Study	associated_dois									Associated DOIs|Associated digital object identifiers								A list of DOIs associated with a resource, such as a list of DOIS associated with a Study.		[{'doi': 'doi:10.46936/intm.proj.2021.60141/60000423', 'doi_provider': 'emsl', 'doi_category': 'award_doi'}, {'doi': 'doi:10.1101/2022.12.12.520098', 'doi_category': 'publication_doi'}, {'doi': 'doi:10.48321/D1Z60Q', 'doi_category': 'data_management_plan_doi', 'doi_provider': 'gsc'}]				True								True			Doi							JsonObj()			
Study	nmdc:Study	description	dcterms:description												Provide a brief description of your study.		Include links in other Study slots, such as websites or dois.		A brief, link-free summary of a Study																	string							JsonObj()			
Study	nmdc:Study	ecosystem															The abiotic factors play a profound role on the type and composition of organisms in a given environment. The GOLD Ecosystem at the top of the five-level classification system is aimed at capturing the broader environment from which an organism or environmental sample is collected. The three broad groups under Ecosystem are Environmental, Host-associated, and Engineered. They represent samples collected from a natural environment or from another organism or from engineered environments like bioreactors respectively.		An ecosystem is a combination of a physical environment (abiotic factors) and all the organisms (biotic factors) that interact with this environment. Ecosystem is in position 1/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Study	nmdc:Study	ecosystem_category															The Environmental ecosystem (for example) is divided into Air, Aquatic and Terrestrial. Ecosystem categories for Host-associated samples can be individual hosts or phyla and for engineered samples it may be manipulated environments like bioreactors, solid waste etc.		Ecosystem categories represent divisions within the ecosystem based on specific characteristics of the environment from where an organism or sample is isolated. Ecosystem category is in position 2/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Study	nmdc:Study	ecosystem_subtype															Ecosystem Type Marine (Environmental -> Aquatic -> Marine) is further divided (for example) into Intertidal zone, Coastal, Pelagic, Intertidal zone etc. in the Ecosystem subtype category.		Ecosystem subtypes represent further subdivision of Ecosystem types into more distinct subtypes. Ecosystem subtype is in position 4/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Study	nmdc:Study	ecosystem_type															The Aquatic ecosystem category (for example) may have ecosystem types like Marine or Thermal springs etc. Ecosystem category Air may have Indoor air or Outdoor air as different Ecosystem Types. In the case of Host-associated samples, ecosystem type can represent Respiratory system, Digestive system, Roots etc.		Ecosystem types represent things having common characteristics within the Ecosystem Category. These common characteristics based grouping is still broad but specific to the characteristics of a given environment. Ecosystem type is in position 3/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Study	nmdc:Study	emsl_project_identifiers																	Identifiers that link a NMDC study to the EMSL user facility website hosting the project description of an EMSL user project		emsl.project:60141					study_identifiers						emsl_identifiers	True	these identifiers are all currently 5 digits long but that could change in the future	^emsl\.project:[0-9]{5}$	external_identifier				https://github.com/microbiomedata/nmdc-schema/issues/927#issuecomment-1802136437			JsonObj()		EMSL Project Identifiers	elaborate on description
Study	nmdc:Study	funding_sources			NCIT:C39409												Include only the name of the funding organization and the award or contract number.		A list of organizations, along with the award numbers, that underwrite financial support for projects of a particular type. Typically, they process applications and award funds to the chosen qualified applicants.		National Sciences Foundation Dimensions of Biodiversity (award no. 1342701)|U.S. Department of Energy, Office of Science, Office of Biological and Environmental Research (BER) under contract DE-AC05-00OR2275												True			string							JsonObj()			
Study	nmdc:Study	gnps_task_identifiers															this could be considered a related identifier, as the metabolomics progress and results aren't a study per se|this identifier was registered with bioregistry but not identifiers.org		identifiers that link a NMDC study to a web-based report about metabolomics analysis progress and results		gnps.task:4b848c342a4f4abc871bdf8a09a60807					study_identifiers						gnps_identifiers	True		^gnps\.task:[a-f0-9]+$	external_identifier				https://microbiomedata.github.io/nmdc-schema/MetabolomicsAnalysis/			JsonObj()		GNPS task identifiers	
Study	nmdc:Study	gold_study_identifiers															uses the prefix GS (but possibly in a different case)		identifiers for corresponding project(s) in GOLD		https://bioregistry.io/gold:Gs0110115					study_identifiers						gold_identifiers	True		^gold:Gs[0-9]+$	external_identifier				https://gold.jgi.doe.gov/studies			JsonObj()		GOLD Study Identifiers	
Study	nmdc:Study	has_credit_associations	prov:qualifiedAssociation												Other researchers associated with this study.				This slot links a study to a credit association.  The credit association will be linked to a person value and to a CRediT Contributor Roles term. Overall semantics: person should get credit X for their participation in the study						True								True			CreditAssociation							JsonObj()			
Study	nmdc:Study	homepage_website													Link to the consortium's homepage if the study_category is a consortium.				The website address (URL) of an entity's homepage.		https://www.neonscience.org/					websites		1.0					True		^[Hh][Tt][Tt][Pp][Ss]?:\/\/(?!.*[Dd][Oo][Ii]\.[Oo][Rr][Gg]).*$	string							JsonObj()			
Study	nmdc:Study	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):sty-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:sty-{id_shoulder}-{id_blade}$		
Study	nmdc:Study	insdc_bioproject_identifiers									NCBI bioproject identifiers|DDBJ bioproject identifiers				Provide the NCBI BioProject Accession Number associated with the listed NCBI BioProject Title.		these are distinct IDs from INSDC SRA/ENA project identifiers, but are usually(?) one to one		Unique identifier for a bioproject submitted to INSDC that relates to the NMDC submitted study.		https://bioregistry.io/bioproject:PRJNA366857					study_identifiers						insdc_identifiers	True		^bioproject:PRJ[DEN][A-Z][0-9]+$	external_identifier				https://www.ncbi.nlm.nih.gov/bioproject/|https://www.ddbj.nig.ac.jp/bioproject/index-e.html			JsonObj()			
Study	nmdc:Study	jgi_portal_study_identifiers															Could this could be considered a related identifier?|Curie suffix is the Site Award Number from an OSTI award page|Site Award Number 507130 == award doi doi:10.46936/10.25585/60000017 -- GOLD study identifier gold:Gs0154044|bioregistry.io/jgi.proposal:507130 ==https://genome.jgi.doe.gov/portal/BioDefcarcycling/BioDefcarcycling.info.html		Identifiers that link a NMDC study to a website hosting raw and analyzed data for a JGI proposal.  The suffix of the curie can used to query the GOLD API and is interoperable with an award DOI from OSTI and a GOLD study identifier.		jgi.proposal:507130	jgi.proposal				study_identifiers						jgi_portal_identifiers	True		^jgi.proposal:\d+$	external_identifier							JsonObj()		JGI Portal Study identifiers	
Study	nmdc:Study	mgnify_project_identifiers																	identifiers for corresponding project in MGnify		https://bioregistry.io/mgnify.proj:MGYS00005757					study_identifiers						mgnify_identifiers	True		^mgnify.proj:[A-Z]+[0-9]+$	external_identifier							JsonObj()			
Study	nmdc:Study	name													Provide a name for the study your samples will belong with.				A human readable label for an entity																	string							JsonObj()			
Study	nmdc:Study	neon_study_identifiers																								study_identifiers						neon_identifiers	True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	external_identifier							JsonObj()			
Study	nmdc:Study	notes													Add any additional notes or comments about this study.																					string							JsonObj()			
Study	nmdc:Study	objective					SIO:000337												The scientific objectives associated with the entity. It SHOULD correspond to scientific norms for objectives field in a structured abstract.																	string							JsonObj()			
Study	nmdc:Study	part_of	dcterms:isPartOf								is part of						Value is the id of the umbrella study or consortium.		Links a study or consortium to a parent (or umbrella) study or consortium.														True		^(nmdc):sty-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Study							JsonObj()	{id_nmdc_prefix}:sty-{id_shoulder}-{id_blade}$		
Study	nmdc:Study	principal_investigator									PI								Principal Investigator who led the study and/or generated the dataset.																	PersonValue							JsonObj()			
Study	nmdc:Study	protocol_link																							True								True			Protocol							JsonObj()			
Study	nmdc:Study	related_identifiers																	Unique identifier for a study submitted to additional resources. Similar, but not necessarily identical to that which has been submitted to NMDC																	string							JsonObj()		Related Identifiers	
Study	nmdc:Study	specific_ecosystem															Specific ecosystems help to define samples based on very specific characteristics of an environment under the five-level classification system.		Specific ecosystems represent specific features of the environment like aphotic zone in an ocean or gastric mucosa within a host digestive system. Specific ecosystem is in position 5/5 in a GOLD path.							gold_path_field										string				https://gold.jgi.doe.gov/help			JsonObj()			
Study	nmdc:Study	study_category																	The type of research initiative																	StudyCategoryEnum			True				JsonObj()			
Study	nmdc:Study	study_image																	Links a study to one or more images.						True								True			ImageValue							JsonObj()			
Study	nmdc:Study	title				dcterms:title													A name given to the entity that differs from the name/label programmatically assigned to it. For example, when extracting study information for GOLD, the GOLD system has assigned a name/label. However, for display purposes, we may also wish the capture the title of the proposal that was used to fund the study.																	string							JsonObj()			
Study	nmdc:Study	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
Study	nmdc:Study	websites													Link to the Principal Investigator's research lab webpage or the study webpage associated with this collection of samples. Multiple links can be provided.		DOIs should not be included as websites. Instead, use the associated_dois slot.|A consortium's homepage website should be included in the homepage_website slot, not in websites.|consortium is a convenience term for a Study whose study_category value is consortium|the website slot and its subproperties are virtually identical to the url slot, except that they are multivalued and url is single-valued.		A list of websites that are associated with the entity.														True		^[Hh][Tt][Tt][Pp][Ss]?:\/\/(?!.*[Dd][Oo][Ii]\.[Oo][Rr][Gg]).*$	string				nmdc:url			JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	contained_in																	A type of container.		test tube|falcon tube|whirlpak															ContainerCategoryEnum							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	container_size																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The volume of the container an analyte is stored in or an activity takes place in																	QuantityValue							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
SubSamplingProcess	nmdc:SubSamplingProcess	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	has_input									input								An input to a process.														True		^(nmdc):(bsm|procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	Sample							JsonObj()	{id_nmdc_prefix}:(bsm|procsm)-{id_shoulder}-{id_blade}$		
SubSamplingProcess	nmdc:SubSamplingProcess	has_output									output								The subsample.														True		^(nmdc):(procsm)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	ProcessedSample							JsonObj()	{id_nmdc_prefix}:(procsm)-{id_shoulder}-{id_blade}$		
SubSamplingProcess	nmdc:SubSamplingProcess	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^(nmdc):subspr-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"	{id_nmdc_prefix}:subspr-{id_shoulder}-{id_blade}$		
SubSamplingProcess	nmdc:SubSamplingProcess	instrument_used																	What instrument was used during DataGeneration or MaterialProcessing.														True			Instrument							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	mass				PATO:0000125													The output mass of the SubSampling Process.																	QuantityValue							JsonObj()		mass	
SubSamplingProcess	nmdc:SubSamplingProcess	name																	A human readable label for an entity																	string							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	protocol_link																																		Protocol							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	sampled_portion																	The portion of the sample that is taken for downstream activity.														True			SamplePortionEnum							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
SubSamplingProcess	nmdc:SubSamplingProcess	temperature																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The value of a temperature measurement or temperature used in a process.															Not to be confused with the MIXS:0000113		QuantityValue							JsonObj()			
SubSamplingProcess	nmdc:SubSamplingProcess	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
SubSamplingProcess	nmdc:SubSamplingProcess	volume																ORCID:0009-0001-1555-1601|ORCID:0000-0002-8683-0050	The output volume of the SubSampling Process.																	QuantityValue							JsonObj()			
TextValue	nmdc:TextValue	has_raw_value																	"The value that was specified for an annotation in raw form, i.e. a string. E.g. ""2 cm"" or ""2-4 cm"""																	string							JsonObj()			
TextValue	nmdc:TextValue	language																	"Should use ISO 639-1 code e.g. ""en"", ""fr"""																	language_code							JsonObj()			
TextValue	nmdc:TextValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
TimestampValue	nmdc:TimestampValue	has_raw_value																	"The value that was specified for an annotation in raw form, i.e. a string. E.g. ""2 cm"" or ""2-4 cm"""																	string							JsonObj()			
TimestampValue	nmdc:TimestampValue	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
WorkflowExecution	nmdc:WorkflowExecution	alternative_identifiers																	A list of alternative identifiers for the entity.														True		^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,\(\)\=\#]*$	uriorcurie							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	description	dcterms:description																a human-readable description of a thing																	string							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	end_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was ended																	string							JsonObj()			add date string validation pattern
WorkflowExecution	nmdc:WorkflowExecution	ended_at_time					prov:endedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	execution_resource																	The computing resource or facility where the workflow was executed.		NERSC-Cori															ExecutionResourceEnum			True				JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	git_url																	The url that points to the exact github location of a workflow.		https://github.com/microbiomedata/mg_annotation/releases/tag/0.1|https://github.com/microbiomedata/metaMS/blob/master/metaMS/gcmsWorkflow.py															string			True				JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	has_failure_categorization																						True	True								True			FailureCategorization							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	has_input									input								An input to a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing			True				JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
WorkflowExecution	nmdc:WorkflowExecution	has_output									output								An output from a process.														True		^(nmdc):(dobj)-([0-9][a-z]{0,6}[0-9])-([A-Za-z0-9]{1,})$	NamedThing							JsonObj()	{id_nmdc_prefix}:(dobj)-{id_shoulder}-{id_blade}$		
WorkflowExecution	nmdc:WorkflowExecution	id																	A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI		nmdc:mgmag-00-x012.1_7_c1		True											abstracted pattern: prefix:typecode-authshoulder-blade(.version)?(_seqsuffix)?|a minimum length of 3 characters is suggested for typecodes, but 1 or 2 characters will be accepted|typecodes must correspond 1:1 to a class in the NMDC schema. this will be checked via per-class id slot usage assertions|minting authority shoulders should probably be enumerated and checked in the pattern	^[a-zA-Z0-9][a-zA-Z0-9_\.]+:[a-zA-Z0-9_][a-zA-Z0-9_\-\/\.,]*$	uriorcurie			True				"JsonObj(workflow_execution_id=StructuredAlias({
  'literal_form': 'workflow_execution_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}), data_object_id=StructuredAlias({
  'literal_form': 'data_object_id',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
WorkflowExecution	nmdc:WorkflowExecution	name																	A human readable label for an entity																	string							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	processing_institution																	The organization that processed the sample.																	ProcessingInstitutionEnum							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	protocol_link																																		Protocol							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	qc_comment																	Slot to store additional comments about laboratory or workflow output. For workflow output it may describe the particular workflow stage that failed. (ie Failed at call-stage due to a malformed fastq file).																	string							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	qc_status																	Stores information about the result of a process (ie the process of sequencing a library may have for qc_status of 'fail' if not enough data was generated)																	StatusEnum							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	start_date															We are using string representations of dates until all components of our ecosystem can handle ISO 8610 dates|The date should be formatted as YYYY-MM-DD		The date on which any process or activity was started																	string							JsonObj()			add date string validation pattern
WorkflowExecution	nmdc:WorkflowExecution	started_at_time					prov:startedAtTime																											The regex for ISO-8601 format was taken from here: https://www.myintervals.com/blog/2009/05/20/iso-8601-date-validation-that-doesnt-suck/ It may not be complete, but it is good enough for now.	^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$	string			True				JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	type	rdf:type																the class_uri of the class that has been instantiated	True	nmdc:Biosample|nmdc:Study													replaces legacy nmdc:type slot|makes it easier to read example data files|required for polymorphic MongoDB collections		uriorcurie			True	https://github.com/microbiomedata/nmdc-schema/issues/1048|https://github.com/microbiomedata/nmdc-schema/issues/1233|https://github.com/microbiomedata/nmdc-schema/issues/248			"JsonObj(workflow_execution_class=StructuredAlias({
  'literal_form': 'workflow_execution_class',
  'predicate': AliasPredicateEnum(text='NARROW_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#narrowerMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
WorkflowExecution	nmdc:WorkflowExecution	version																																		string							JsonObj()			
WorkflowExecution	nmdc:WorkflowExecution	was_informed_by					prov:wasInformedBy																													DataGeneration			True				"JsonObj(was_informed_by=StructuredAlias({
  'literal_form': 'was_informed_by',
  'predicate': AliasPredicateEnum(text='EXACT_SYNONYM', meaning='http://www.w3.org/2004/02/skos/core#exactMatch'),
  'contexts': ['https://bitbucket.org/berkeleylab/jgi-jat/macros/nmdc_metadata.yaml']
}))"			
